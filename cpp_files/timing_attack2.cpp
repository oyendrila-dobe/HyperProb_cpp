#include<vector>
#include"z3++.h"
 using namespace z3;
int main()
 { 
    context c;
    solver s(c);
    expr b = c.bool_val(true);
    expr a_0 = c.int_const("a_0");
    b = a_0 == 0 || a_0 == 1;
    s.add(b);
    expr a_1 = c.int_const("a_1");
    b = a_1 == 0 || a_1 == 1;
    s.add(b);
    expr a_2 = c.int_const("a_2");
    b = a_2 == 0;
    s.add(b);
    expr a_3 = c.int_const("a_3");
    b = a_3 == 0 || a_3 == 1;
    s.add(b);
    expr a_4 = c.int_const("a_4");
    b = a_4 == 0;
    s.add(b);
    expr a_5 = c.int_const("a_5");
    b = a_5 == 0;
    s.add(b);
    expr a_6 = c.int_const("a_6");
    b = a_6 == 0 || a_6 == 1;
    s.add(b);
    expr a_7 = c.int_const("a_7");
    b = a_7 == 0;
    s.add(b);
    expr a_8 = c.int_const("a_8");
    b = a_8 == 0;
    s.add(b);
    expr a_9 = c.int_const("a_9");
    b = a_9 == 0 || a_9 == 1;
    s.add(b);
    expr a_10 = c.int_const("a_10");
    b = a_10 == 0;
    s.add(b);
    expr a_11 = c.int_const("a_11");
    b = a_11 == 0;
    s.add(b);
    expr a_12 = c.int_const("a_12");
    b = a_12 == 0;
    s.add(b);
    expr a_13 = c.int_const("a_13");
    b = a_13 == 0 || a_13 == 1;
    s.add(b);
    expr a_14 = c.int_const("a_14");
    b = a_14 == 0;
    s.add(b);
    expr a_15 = c.int_const("a_15");
    b = a_15 == 0;
    s.add(b);
    expr a_16 = c.int_const("a_16");
    b = a_16 == 0;
    s.add(b);
    expr a_17 = c.int_const("a_17");
    b = a_17 == 0;
    s.add(b);
    expr a_18 = c.int_const("a_18");
    b = a_18 == 0;
    s.add(b);
    expr a_19 = c.int_const("a_19");
    b = a_19 == 0;
    s.add(b);
    expr a_20 = c.int_const("a_20");
    b = a_20 == 0;
    s.add(b);
    expr a_21 = c.int_const("a_21");
    b = a_21 == 0;
    s.add(b);
    expr a_22 = c.int_const("a_22");
    b = a_22 == 0;
    s.add(b);
    expr a_23 = c.int_const("a_23");
    b = a_23 == 0;
    s.add(b);
    expr holds_0_0_0 = c.bool_const("holds_0_0_0");
    expr holds_0_1_0 = c.bool_const("holds_0_1_0");
    expr holds_0_2_0 = c.bool_const("holds_0_2_0");
    expr holds_0_3_0 = c.bool_const("holds_0_3_0");
    expr holds_0_4_0 = c.bool_const("holds_0_4_0");
    expr holds_0_5_0 = c.bool_const("holds_0_5_0");
    expr holds_0_6_0 = c.bool_const("holds_0_6_0");
    expr holds_0_7_0 = c.bool_const("holds_0_7_0");
    expr holds_0_8_0 = c.bool_const("holds_0_8_0");
    expr holds_0_9_0 = c.bool_const("holds_0_9_0");
    expr holds_0_10_0 = c.bool_const("holds_0_10_0");
    expr holds_0_11_0 = c.bool_const("holds_0_11_0");
    expr holds_0_12_0 = c.bool_const("holds_0_12_0");
    expr holds_0_13_0 = c.bool_const("holds_0_13_0");
    expr holds_0_14_0 = c.bool_const("holds_0_14_0");
    expr holds_0_15_0 = c.bool_const("holds_0_15_0");
    expr holds_0_16_0 = c.bool_const("holds_0_16_0");
    expr holds_0_17_0 = c.bool_const("holds_0_17_0");
    expr holds_0_18_0 = c.bool_const("holds_0_18_0");
    expr holds_0_19_0 = c.bool_const("holds_0_19_0");
    expr holds_0_20_0 = c.bool_const("holds_0_20_0");
    expr holds_0_21_0 = c.bool_const("holds_0_21_0");
    expr holds_0_22_0 = c.bool_const("holds_0_22_0");
    expr holds_0_23_0 = c.bool_const("holds_0_23_0");
    expr holds_1_0_0 = c.bool_const("holds_1_0_0");
    expr holds_1_1_0 = c.bool_const("holds_1_1_0");
    expr holds_1_2_0 = c.bool_const("holds_1_2_0");
    expr holds_1_3_0 = c.bool_const("holds_1_3_0");
    expr holds_1_4_0 = c.bool_const("holds_1_4_0");
    expr holds_1_5_0 = c.bool_const("holds_1_5_0");
    expr holds_1_6_0 = c.bool_const("holds_1_6_0");
    expr holds_1_7_0 = c.bool_const("holds_1_7_0");
    expr holds_1_8_0 = c.bool_const("holds_1_8_0");
    expr holds_1_9_0 = c.bool_const("holds_1_9_0");
    expr holds_1_10_0 = c.bool_const("holds_1_10_0");
    expr holds_1_11_0 = c.bool_const("holds_1_11_0");
    expr holds_1_12_0 = c.bool_const("holds_1_12_0");
    expr holds_1_13_0 = c.bool_const("holds_1_13_0");
    expr holds_1_14_0 = c.bool_const("holds_1_14_0");
    expr holds_1_15_0 = c.bool_const("holds_1_15_0");
    expr holds_1_16_0 = c.bool_const("holds_1_16_0");
    expr holds_1_17_0 = c.bool_const("holds_1_17_0");
    expr holds_1_18_0 = c.bool_const("holds_1_18_0");
    expr holds_1_19_0 = c.bool_const("holds_1_19_0");
    expr holds_1_20_0 = c.bool_const("holds_1_20_0");
    expr holds_1_21_0 = c.bool_const("holds_1_21_0");
    expr holds_1_22_0 = c.bool_const("holds_1_22_0");
    expr holds_1_23_0 = c.bool_const("holds_1_23_0");
    expr holds_2_0_0 = c.bool_const("holds_2_0_0");
    expr holds_2_1_0 = c.bool_const("holds_2_1_0");
    expr holds_2_2_0 = c.bool_const("holds_2_2_0");
    expr holds_2_3_0 = c.bool_const("holds_2_3_0");
    expr holds_2_4_0 = c.bool_const("holds_2_4_0");
    expr holds_2_5_0 = c.bool_const("holds_2_5_0");
    expr holds_2_6_0 = c.bool_const("holds_2_6_0");
    expr holds_2_7_0 = c.bool_const("holds_2_7_0");
    expr holds_2_8_0 = c.bool_const("holds_2_8_0");
    expr holds_2_9_0 = c.bool_const("holds_2_9_0");
    expr holds_2_10_0 = c.bool_const("holds_2_10_0");
    expr holds_2_11_0 = c.bool_const("holds_2_11_0");
    expr holds_2_12_0 = c.bool_const("holds_2_12_0");
    expr holds_2_13_0 = c.bool_const("holds_2_13_0");
    expr holds_2_14_0 = c.bool_const("holds_2_14_0");
    expr holds_2_15_0 = c.bool_const("holds_2_15_0");
    expr holds_2_16_0 = c.bool_const("holds_2_16_0");
    expr holds_2_17_0 = c.bool_const("holds_2_17_0");
    expr holds_2_18_0 = c.bool_const("holds_2_18_0");
    expr holds_2_19_0 = c.bool_const("holds_2_19_0");
    expr holds_2_20_0 = c.bool_const("holds_2_20_0");
    expr holds_2_21_0 = c.bool_const("holds_2_21_0");
    expr holds_2_22_0 = c.bool_const("holds_2_22_0");
    expr holds_2_23_0 = c.bool_const("holds_2_23_0");
    expr holds_3_0_0 = c.bool_const("holds_3_0_0");
    expr holds_3_1_0 = c.bool_const("holds_3_1_0");
    expr holds_3_2_0 = c.bool_const("holds_3_2_0");
    expr holds_3_3_0 = c.bool_const("holds_3_3_0");
    expr holds_3_4_0 = c.bool_const("holds_3_4_0");
    expr holds_3_5_0 = c.bool_const("holds_3_5_0");
    expr holds_3_6_0 = c.bool_const("holds_3_6_0");
    expr holds_3_7_0 = c.bool_const("holds_3_7_0");
    expr holds_3_8_0 = c.bool_const("holds_3_8_0");
    expr holds_3_9_0 = c.bool_const("holds_3_9_0");
    expr holds_3_10_0 = c.bool_const("holds_3_10_0");
    expr holds_3_11_0 = c.bool_const("holds_3_11_0");
    expr holds_3_12_0 = c.bool_const("holds_3_12_0");
    expr holds_3_13_0 = c.bool_const("holds_3_13_0");
    expr holds_3_14_0 = c.bool_const("holds_3_14_0");
    expr holds_3_15_0 = c.bool_const("holds_3_15_0");
    expr holds_3_16_0 = c.bool_const("holds_3_16_0");
    expr holds_3_17_0 = c.bool_const("holds_3_17_0");
    expr holds_3_18_0 = c.bool_const("holds_3_18_0");
    expr holds_3_19_0 = c.bool_const("holds_3_19_0");
    expr holds_3_20_0 = c.bool_const("holds_3_20_0");
    expr holds_3_21_0 = c.bool_const("holds_3_21_0");
    expr holds_3_22_0 = c.bool_const("holds_3_22_0");
    expr holds_3_23_0 = c.bool_const("holds_3_23_0");
    expr holds_4_0_0 = c.bool_const("holds_4_0_0");
    expr holds_4_1_0 = c.bool_const("holds_4_1_0");
    expr holds_4_2_0 = c.bool_const("holds_4_2_0");
    expr holds_4_3_0 = c.bool_const("holds_4_3_0");
    expr holds_4_4_0 = c.bool_const("holds_4_4_0");
    expr holds_4_5_0 = c.bool_const("holds_4_5_0");
    expr holds_4_6_0 = c.bool_const("holds_4_6_0");
    expr holds_4_7_0 = c.bool_const("holds_4_7_0");
    expr holds_4_8_0 = c.bool_const("holds_4_8_0");
    expr holds_4_9_0 = c.bool_const("holds_4_9_0");
    expr holds_4_10_0 = c.bool_const("holds_4_10_0");
    expr holds_4_11_0 = c.bool_const("holds_4_11_0");
    expr holds_4_12_0 = c.bool_const("holds_4_12_0");
    expr holds_4_13_0 = c.bool_const("holds_4_13_0");
    expr holds_4_14_0 = c.bool_const("holds_4_14_0");
    expr holds_4_15_0 = c.bool_const("holds_4_15_0");
    expr holds_4_16_0 = c.bool_const("holds_4_16_0");
    expr holds_4_17_0 = c.bool_const("holds_4_17_0");
    expr holds_4_18_0 = c.bool_const("holds_4_18_0");
    expr holds_4_19_0 = c.bool_const("holds_4_19_0");
    expr holds_4_20_0 = c.bool_const("holds_4_20_0");
    expr holds_4_21_0 = c.bool_const("holds_4_21_0");
    expr holds_4_22_0 = c.bool_const("holds_4_22_0");
    expr holds_4_23_0 = c.bool_const("holds_4_23_0");
    expr holds_5_0_0 = c.bool_const("holds_5_0_0");
    expr holds_5_1_0 = c.bool_const("holds_5_1_0");
    expr holds_5_2_0 = c.bool_const("holds_5_2_0");
    expr holds_5_3_0 = c.bool_const("holds_5_3_0");
    expr holds_5_4_0 = c.bool_const("holds_5_4_0");
    expr holds_5_5_0 = c.bool_const("holds_5_5_0");
    expr holds_5_6_0 = c.bool_const("holds_5_6_0");
    expr holds_5_7_0 = c.bool_const("holds_5_7_0");
    expr holds_5_8_0 = c.bool_const("holds_5_8_0");
    expr holds_5_9_0 = c.bool_const("holds_5_9_0");
    expr holds_5_10_0 = c.bool_const("holds_5_10_0");
    expr holds_5_11_0 = c.bool_const("holds_5_11_0");
    expr holds_5_12_0 = c.bool_const("holds_5_12_0");
    expr holds_5_13_0 = c.bool_const("holds_5_13_0");
    expr holds_5_14_0 = c.bool_const("holds_5_14_0");
    expr holds_5_15_0 = c.bool_const("holds_5_15_0");
    expr holds_5_16_0 = c.bool_const("holds_5_16_0");
    expr holds_5_17_0 = c.bool_const("holds_5_17_0");
    expr holds_5_18_0 = c.bool_const("holds_5_18_0");
    expr holds_5_19_0 = c.bool_const("holds_5_19_0");
    expr holds_5_20_0 = c.bool_const("holds_5_20_0");
    expr holds_5_21_0 = c.bool_const("holds_5_21_0");
    expr holds_5_22_0 = c.bool_const("holds_5_22_0");
    expr holds_5_23_0 = c.bool_const("holds_5_23_0");
    expr holds_6_0_0 = c.bool_const("holds_6_0_0");
    expr holds_6_1_0 = c.bool_const("holds_6_1_0");
    expr holds_6_2_0 = c.bool_const("holds_6_2_0");
    expr holds_6_3_0 = c.bool_const("holds_6_3_0");
    expr holds_6_4_0 = c.bool_const("holds_6_4_0");
    expr holds_6_5_0 = c.bool_const("holds_6_5_0");
    expr holds_6_6_0 = c.bool_const("holds_6_6_0");
    expr holds_6_7_0 = c.bool_const("holds_6_7_0");
    expr holds_6_8_0 = c.bool_const("holds_6_8_0");
    expr holds_6_9_0 = c.bool_const("holds_6_9_0");
    expr holds_6_10_0 = c.bool_const("holds_6_10_0");
    expr holds_6_11_0 = c.bool_const("holds_6_11_0");
    expr holds_6_12_0 = c.bool_const("holds_6_12_0");
    expr holds_6_13_0 = c.bool_const("holds_6_13_0");
    expr holds_6_14_0 = c.bool_const("holds_6_14_0");
    expr holds_6_15_0 = c.bool_const("holds_6_15_0");
    expr holds_6_16_0 = c.bool_const("holds_6_16_0");
    expr holds_6_17_0 = c.bool_const("holds_6_17_0");
    expr holds_6_18_0 = c.bool_const("holds_6_18_0");
    expr holds_6_19_0 = c.bool_const("holds_6_19_0");
    expr holds_6_20_0 = c.bool_const("holds_6_20_0");
    expr holds_6_21_0 = c.bool_const("holds_6_21_0");
    expr holds_6_22_0 = c.bool_const("holds_6_22_0");
    expr holds_6_23_0 = c.bool_const("holds_6_23_0");
    expr holds_7_0_0 = c.bool_const("holds_7_0_0");
    expr holds_7_1_0 = c.bool_const("holds_7_1_0");
    expr holds_7_2_0 = c.bool_const("holds_7_2_0");
    expr holds_7_3_0 = c.bool_const("holds_7_3_0");
    expr holds_7_4_0 = c.bool_const("holds_7_4_0");
    expr holds_7_5_0 = c.bool_const("holds_7_5_0");
    expr holds_7_6_0 = c.bool_const("holds_7_6_0");
    expr holds_7_7_0 = c.bool_const("holds_7_7_0");
    expr holds_7_8_0 = c.bool_const("holds_7_8_0");
    expr holds_7_9_0 = c.bool_const("holds_7_9_0");
    expr holds_7_10_0 = c.bool_const("holds_7_10_0");
    expr holds_7_11_0 = c.bool_const("holds_7_11_0");
    expr holds_7_12_0 = c.bool_const("holds_7_12_0");
    expr holds_7_13_0 = c.bool_const("holds_7_13_0");
    expr holds_7_14_0 = c.bool_const("holds_7_14_0");
    expr holds_7_15_0 = c.bool_const("holds_7_15_0");
    expr holds_7_16_0 = c.bool_const("holds_7_16_0");
    expr holds_7_17_0 = c.bool_const("holds_7_17_0");
    expr holds_7_18_0 = c.bool_const("holds_7_18_0");
    expr holds_7_19_0 = c.bool_const("holds_7_19_0");
    expr holds_7_20_0 = c.bool_const("holds_7_20_0");
    expr holds_7_21_0 = c.bool_const("holds_7_21_0");
    expr holds_7_22_0 = c.bool_const("holds_7_22_0");
    expr holds_7_23_0 = c.bool_const("holds_7_23_0");
    expr holds_8_0_0 = c.bool_const("holds_8_0_0");
    expr holds_8_1_0 = c.bool_const("holds_8_1_0");
    expr holds_8_2_0 = c.bool_const("holds_8_2_0");
    expr holds_8_3_0 = c.bool_const("holds_8_3_0");
    expr holds_8_4_0 = c.bool_const("holds_8_4_0");
    expr holds_8_5_0 = c.bool_const("holds_8_5_0");
    expr holds_8_6_0 = c.bool_const("holds_8_6_0");
    expr holds_8_7_0 = c.bool_const("holds_8_7_0");
    expr holds_8_8_0 = c.bool_const("holds_8_8_0");
    expr holds_8_9_0 = c.bool_const("holds_8_9_0");
    expr holds_8_10_0 = c.bool_const("holds_8_10_0");
    expr holds_8_11_0 = c.bool_const("holds_8_11_0");
    expr holds_8_12_0 = c.bool_const("holds_8_12_0");
    expr holds_8_13_0 = c.bool_const("holds_8_13_0");
    expr holds_8_14_0 = c.bool_const("holds_8_14_0");
    expr holds_8_15_0 = c.bool_const("holds_8_15_0");
    expr holds_8_16_0 = c.bool_const("holds_8_16_0");
    expr holds_8_17_0 = c.bool_const("holds_8_17_0");
    expr holds_8_18_0 = c.bool_const("holds_8_18_0");
    expr holds_8_19_0 = c.bool_const("holds_8_19_0");
    expr holds_8_20_0 = c.bool_const("holds_8_20_0");
    expr holds_8_21_0 = c.bool_const("holds_8_21_0");
    expr holds_8_22_0 = c.bool_const("holds_8_22_0");
    expr holds_8_23_0 = c.bool_const("holds_8_23_0");
    expr holds_9_0_0 = c.bool_const("holds_9_0_0");
    expr holds_9_1_0 = c.bool_const("holds_9_1_0");
    expr holds_9_2_0 = c.bool_const("holds_9_2_0");
    expr holds_9_3_0 = c.bool_const("holds_9_3_0");
    expr holds_9_4_0 = c.bool_const("holds_9_4_0");
    expr holds_9_5_0 = c.bool_const("holds_9_5_0");
    expr holds_9_6_0 = c.bool_const("holds_9_6_0");
    expr holds_9_7_0 = c.bool_const("holds_9_7_0");
    expr holds_9_8_0 = c.bool_const("holds_9_8_0");
    expr holds_9_9_0 = c.bool_const("holds_9_9_0");
    expr holds_9_10_0 = c.bool_const("holds_9_10_0");
    expr holds_9_11_0 = c.bool_const("holds_9_11_0");
    expr holds_9_12_0 = c.bool_const("holds_9_12_0");
    expr holds_9_13_0 = c.bool_const("holds_9_13_0");
    expr holds_9_14_0 = c.bool_const("holds_9_14_0");
    expr holds_9_15_0 = c.bool_const("holds_9_15_0");
    expr holds_9_16_0 = c.bool_const("holds_9_16_0");
    expr holds_9_17_0 = c.bool_const("holds_9_17_0");
    expr holds_9_18_0 = c.bool_const("holds_9_18_0");
    expr holds_9_19_0 = c.bool_const("holds_9_19_0");
    expr holds_9_20_0 = c.bool_const("holds_9_20_0");
    expr holds_9_21_0 = c.bool_const("holds_9_21_0");
    expr holds_9_22_0 = c.bool_const("holds_9_22_0");
    expr holds_9_23_0 = c.bool_const("holds_9_23_0");
    expr holds_10_0_0 = c.bool_const("holds_10_0_0");
    expr holds_10_1_0 = c.bool_const("holds_10_1_0");
    expr holds_10_2_0 = c.bool_const("holds_10_2_0");
    expr holds_10_3_0 = c.bool_const("holds_10_3_0");
    expr holds_10_4_0 = c.bool_const("holds_10_4_0");
    expr holds_10_5_0 = c.bool_const("holds_10_5_0");
    expr holds_10_6_0 = c.bool_const("holds_10_6_0");
    expr holds_10_7_0 = c.bool_const("holds_10_7_0");
    expr holds_10_8_0 = c.bool_const("holds_10_8_0");
    expr holds_10_9_0 = c.bool_const("holds_10_9_0");
    expr holds_10_10_0 = c.bool_const("holds_10_10_0");
    expr holds_10_11_0 = c.bool_const("holds_10_11_0");
    expr holds_10_12_0 = c.bool_const("holds_10_12_0");
    expr holds_10_13_0 = c.bool_const("holds_10_13_0");
    expr holds_10_14_0 = c.bool_const("holds_10_14_0");
    expr holds_10_15_0 = c.bool_const("holds_10_15_0");
    expr holds_10_16_0 = c.bool_const("holds_10_16_0");
    expr holds_10_17_0 = c.bool_const("holds_10_17_0");
    expr holds_10_18_0 = c.bool_const("holds_10_18_0");
    expr holds_10_19_0 = c.bool_const("holds_10_19_0");
    expr holds_10_20_0 = c.bool_const("holds_10_20_0");
    expr holds_10_21_0 = c.bool_const("holds_10_21_0");
    expr holds_10_22_0 = c.bool_const("holds_10_22_0");
    expr holds_10_23_0 = c.bool_const("holds_10_23_0");
    expr holds_11_0_0 = c.bool_const("holds_11_0_0");
    expr holds_11_1_0 = c.bool_const("holds_11_1_0");
    expr holds_11_2_0 = c.bool_const("holds_11_2_0");
    expr holds_11_3_0 = c.bool_const("holds_11_3_0");
    expr holds_11_4_0 = c.bool_const("holds_11_4_0");
    expr holds_11_5_0 = c.bool_const("holds_11_5_0");
    expr holds_11_6_0 = c.bool_const("holds_11_6_0");
    expr holds_11_7_0 = c.bool_const("holds_11_7_0");
    expr holds_11_8_0 = c.bool_const("holds_11_8_0");
    expr holds_11_9_0 = c.bool_const("holds_11_9_0");
    expr holds_11_10_0 = c.bool_const("holds_11_10_0");
    expr holds_11_11_0 = c.bool_const("holds_11_11_0");
    expr holds_11_12_0 = c.bool_const("holds_11_12_0");
    expr holds_11_13_0 = c.bool_const("holds_11_13_0");
    expr holds_11_14_0 = c.bool_const("holds_11_14_0");
    expr holds_11_15_0 = c.bool_const("holds_11_15_0");
    expr holds_11_16_0 = c.bool_const("holds_11_16_0");
    expr holds_11_17_0 = c.bool_const("holds_11_17_0");
    expr holds_11_18_0 = c.bool_const("holds_11_18_0");
    expr holds_11_19_0 = c.bool_const("holds_11_19_0");
    expr holds_11_20_0 = c.bool_const("holds_11_20_0");
    expr holds_11_21_0 = c.bool_const("holds_11_21_0");
    expr holds_11_22_0 = c.bool_const("holds_11_22_0");
    expr holds_11_23_0 = c.bool_const("holds_11_23_0");
    expr holds_12_0_0 = c.bool_const("holds_12_0_0");
    expr holds_12_1_0 = c.bool_const("holds_12_1_0");
    expr holds_12_2_0 = c.bool_const("holds_12_2_0");
    expr holds_12_3_0 = c.bool_const("holds_12_3_0");
    expr holds_12_4_0 = c.bool_const("holds_12_4_0");
    expr holds_12_5_0 = c.bool_const("holds_12_5_0");
    expr holds_12_6_0 = c.bool_const("holds_12_6_0");
    expr holds_12_7_0 = c.bool_const("holds_12_7_0");
    expr holds_12_8_0 = c.bool_const("holds_12_8_0");
    expr holds_12_9_0 = c.bool_const("holds_12_9_0");
    expr holds_12_10_0 = c.bool_const("holds_12_10_0");
    expr holds_12_11_0 = c.bool_const("holds_12_11_0");
    expr holds_12_12_0 = c.bool_const("holds_12_12_0");
    expr holds_12_13_0 = c.bool_const("holds_12_13_0");
    expr holds_12_14_0 = c.bool_const("holds_12_14_0");
    expr holds_12_15_0 = c.bool_const("holds_12_15_0");
    expr holds_12_16_0 = c.bool_const("holds_12_16_0");
    expr holds_12_17_0 = c.bool_const("holds_12_17_0");
    expr holds_12_18_0 = c.bool_const("holds_12_18_0");
    expr holds_12_19_0 = c.bool_const("holds_12_19_0");
    expr holds_12_20_0 = c.bool_const("holds_12_20_0");
    expr holds_12_21_0 = c.bool_const("holds_12_21_0");
    expr holds_12_22_0 = c.bool_const("holds_12_22_0");
    expr holds_12_23_0 = c.bool_const("holds_12_23_0");
    expr holds_13_0_0 = c.bool_const("holds_13_0_0");
    expr holds_13_1_0 = c.bool_const("holds_13_1_0");
    expr holds_13_2_0 = c.bool_const("holds_13_2_0");
    expr holds_13_3_0 = c.bool_const("holds_13_3_0");
    expr holds_13_4_0 = c.bool_const("holds_13_4_0");
    expr holds_13_5_0 = c.bool_const("holds_13_5_0");
    expr holds_13_6_0 = c.bool_const("holds_13_6_0");
    expr holds_13_7_0 = c.bool_const("holds_13_7_0");
    expr holds_13_8_0 = c.bool_const("holds_13_8_0");
    expr holds_13_9_0 = c.bool_const("holds_13_9_0");
    expr holds_13_10_0 = c.bool_const("holds_13_10_0");
    expr holds_13_11_0 = c.bool_const("holds_13_11_0");
    expr holds_13_12_0 = c.bool_const("holds_13_12_0");
    expr holds_13_13_0 = c.bool_const("holds_13_13_0");
    expr holds_13_14_0 = c.bool_const("holds_13_14_0");
    expr holds_13_15_0 = c.bool_const("holds_13_15_0");
    expr holds_13_16_0 = c.bool_const("holds_13_16_0");
    expr holds_13_17_0 = c.bool_const("holds_13_17_0");
    expr holds_13_18_0 = c.bool_const("holds_13_18_0");
    expr holds_13_19_0 = c.bool_const("holds_13_19_0");
    expr holds_13_20_0 = c.bool_const("holds_13_20_0");
    expr holds_13_21_0 = c.bool_const("holds_13_21_0");
    expr holds_13_22_0 = c.bool_const("holds_13_22_0");
    expr holds_13_23_0 = c.bool_const("holds_13_23_0");
    expr holds_14_0_0 = c.bool_const("holds_14_0_0");
    expr holds_14_1_0 = c.bool_const("holds_14_1_0");
    expr holds_14_2_0 = c.bool_const("holds_14_2_0");
    expr holds_14_3_0 = c.bool_const("holds_14_3_0");
    expr holds_14_4_0 = c.bool_const("holds_14_4_0");
    expr holds_14_5_0 = c.bool_const("holds_14_5_0");
    expr holds_14_6_0 = c.bool_const("holds_14_6_0");
    expr holds_14_7_0 = c.bool_const("holds_14_7_0");
    expr holds_14_8_0 = c.bool_const("holds_14_8_0");
    expr holds_14_9_0 = c.bool_const("holds_14_9_0");
    expr holds_14_10_0 = c.bool_const("holds_14_10_0");
    expr holds_14_11_0 = c.bool_const("holds_14_11_0");
    expr holds_14_12_0 = c.bool_const("holds_14_12_0");
    expr holds_14_13_0 = c.bool_const("holds_14_13_0");
    expr holds_14_14_0 = c.bool_const("holds_14_14_0");
    expr holds_14_15_0 = c.bool_const("holds_14_15_0");
    expr holds_14_16_0 = c.bool_const("holds_14_16_0");
    expr holds_14_17_0 = c.bool_const("holds_14_17_0");
    expr holds_14_18_0 = c.bool_const("holds_14_18_0");
    expr holds_14_19_0 = c.bool_const("holds_14_19_0");
    expr holds_14_20_0 = c.bool_const("holds_14_20_0");
    expr holds_14_21_0 = c.bool_const("holds_14_21_0");
    expr holds_14_22_0 = c.bool_const("holds_14_22_0");
    expr holds_14_23_0 = c.bool_const("holds_14_23_0");
    expr holds_15_0_0 = c.bool_const("holds_15_0_0");
    expr holds_15_1_0 = c.bool_const("holds_15_1_0");
    expr holds_15_2_0 = c.bool_const("holds_15_2_0");
    expr holds_15_3_0 = c.bool_const("holds_15_3_0");
    expr holds_15_4_0 = c.bool_const("holds_15_4_0");
    expr holds_15_5_0 = c.bool_const("holds_15_5_0");
    expr holds_15_6_0 = c.bool_const("holds_15_6_0");
    expr holds_15_7_0 = c.bool_const("holds_15_7_0");
    expr holds_15_8_0 = c.bool_const("holds_15_8_0");
    expr holds_15_9_0 = c.bool_const("holds_15_9_0");
    expr holds_15_10_0 = c.bool_const("holds_15_10_0");
    expr holds_15_11_0 = c.bool_const("holds_15_11_0");
    expr holds_15_12_0 = c.bool_const("holds_15_12_0");
    expr holds_15_13_0 = c.bool_const("holds_15_13_0");
    expr holds_15_14_0 = c.bool_const("holds_15_14_0");
    expr holds_15_15_0 = c.bool_const("holds_15_15_0");
    expr holds_15_16_0 = c.bool_const("holds_15_16_0");
    expr holds_15_17_0 = c.bool_const("holds_15_17_0");
    expr holds_15_18_0 = c.bool_const("holds_15_18_0");
    expr holds_15_19_0 = c.bool_const("holds_15_19_0");
    expr holds_15_20_0 = c.bool_const("holds_15_20_0");
    expr holds_15_21_0 = c.bool_const("holds_15_21_0");
    expr holds_15_22_0 = c.bool_const("holds_15_22_0");
    expr holds_15_23_0 = c.bool_const("holds_15_23_0");
    expr holds_16_0_0 = c.bool_const("holds_16_0_0");
    expr holds_16_1_0 = c.bool_const("holds_16_1_0");
    expr holds_16_2_0 = c.bool_const("holds_16_2_0");
    expr holds_16_3_0 = c.bool_const("holds_16_3_0");
    expr holds_16_4_0 = c.bool_const("holds_16_4_0");
    expr holds_16_5_0 = c.bool_const("holds_16_5_0");
    expr holds_16_6_0 = c.bool_const("holds_16_6_0");
    expr holds_16_7_0 = c.bool_const("holds_16_7_0");
    expr holds_16_8_0 = c.bool_const("holds_16_8_0");
    expr holds_16_9_0 = c.bool_const("holds_16_9_0");
    expr holds_16_10_0 = c.bool_const("holds_16_10_0");
    expr holds_16_11_0 = c.bool_const("holds_16_11_0");
    expr holds_16_12_0 = c.bool_const("holds_16_12_0");
    expr holds_16_13_0 = c.bool_const("holds_16_13_0");
    expr holds_16_14_0 = c.bool_const("holds_16_14_0");
    expr holds_16_15_0 = c.bool_const("holds_16_15_0");
    expr holds_16_16_0 = c.bool_const("holds_16_16_0");
    expr holds_16_17_0 = c.bool_const("holds_16_17_0");
    expr holds_16_18_0 = c.bool_const("holds_16_18_0");
    expr holds_16_19_0 = c.bool_const("holds_16_19_0");
    expr holds_16_20_0 = c.bool_const("holds_16_20_0");
    expr holds_16_21_0 = c.bool_const("holds_16_21_0");
    expr holds_16_22_0 = c.bool_const("holds_16_22_0");
    expr holds_16_23_0 = c.bool_const("holds_16_23_0");
    expr holds_17_0_0 = c.bool_const("holds_17_0_0");
    expr holds_17_1_0 = c.bool_const("holds_17_1_0");
    expr holds_17_2_0 = c.bool_const("holds_17_2_0");
    expr holds_17_3_0 = c.bool_const("holds_17_3_0");
    expr holds_17_4_0 = c.bool_const("holds_17_4_0");
    expr holds_17_5_0 = c.bool_const("holds_17_5_0");
    expr holds_17_6_0 = c.bool_const("holds_17_6_0");
    expr holds_17_7_0 = c.bool_const("holds_17_7_0");
    expr holds_17_8_0 = c.bool_const("holds_17_8_0");
    expr holds_17_9_0 = c.bool_const("holds_17_9_0");
    expr holds_17_10_0 = c.bool_const("holds_17_10_0");
    expr holds_17_11_0 = c.bool_const("holds_17_11_0");
    expr holds_17_12_0 = c.bool_const("holds_17_12_0");
    expr holds_17_13_0 = c.bool_const("holds_17_13_0");
    expr holds_17_14_0 = c.bool_const("holds_17_14_0");
    expr holds_17_15_0 = c.bool_const("holds_17_15_0");
    expr holds_17_16_0 = c.bool_const("holds_17_16_0");
    expr holds_17_17_0 = c.bool_const("holds_17_17_0");
    expr holds_17_18_0 = c.bool_const("holds_17_18_0");
    expr holds_17_19_0 = c.bool_const("holds_17_19_0");
    expr holds_17_20_0 = c.bool_const("holds_17_20_0");
    expr holds_17_21_0 = c.bool_const("holds_17_21_0");
    expr holds_17_22_0 = c.bool_const("holds_17_22_0");
    expr holds_17_23_0 = c.bool_const("holds_17_23_0");
    expr holds_18_0_0 = c.bool_const("holds_18_0_0");
    expr holds_18_1_0 = c.bool_const("holds_18_1_0");
    expr holds_18_2_0 = c.bool_const("holds_18_2_0");
    expr holds_18_3_0 = c.bool_const("holds_18_3_0");
    expr holds_18_4_0 = c.bool_const("holds_18_4_0");
    expr holds_18_5_0 = c.bool_const("holds_18_5_0");
    expr holds_18_6_0 = c.bool_const("holds_18_6_0");
    expr holds_18_7_0 = c.bool_const("holds_18_7_0");
    expr holds_18_8_0 = c.bool_const("holds_18_8_0");
    expr holds_18_9_0 = c.bool_const("holds_18_9_0");
    expr holds_18_10_0 = c.bool_const("holds_18_10_0");
    expr holds_18_11_0 = c.bool_const("holds_18_11_0");
    expr holds_18_12_0 = c.bool_const("holds_18_12_0");
    expr holds_18_13_0 = c.bool_const("holds_18_13_0");
    expr holds_18_14_0 = c.bool_const("holds_18_14_0");
    expr holds_18_15_0 = c.bool_const("holds_18_15_0");
    expr holds_18_16_0 = c.bool_const("holds_18_16_0");
    expr holds_18_17_0 = c.bool_const("holds_18_17_0");
    expr holds_18_18_0 = c.bool_const("holds_18_18_0");
    expr holds_18_19_0 = c.bool_const("holds_18_19_0");
    expr holds_18_20_0 = c.bool_const("holds_18_20_0");
    expr holds_18_21_0 = c.bool_const("holds_18_21_0");
    expr holds_18_22_0 = c.bool_const("holds_18_22_0");
    expr holds_18_23_0 = c.bool_const("holds_18_23_0");
    expr holds_19_0_0 = c.bool_const("holds_19_0_0");
    expr holds_19_1_0 = c.bool_const("holds_19_1_0");
    expr holds_19_2_0 = c.bool_const("holds_19_2_0");
    expr holds_19_3_0 = c.bool_const("holds_19_3_0");
    expr holds_19_4_0 = c.bool_const("holds_19_4_0");
    expr holds_19_5_0 = c.bool_const("holds_19_5_0");
    expr holds_19_6_0 = c.bool_const("holds_19_6_0");
    expr holds_19_7_0 = c.bool_const("holds_19_7_0");
    expr holds_19_8_0 = c.bool_const("holds_19_8_0");
    expr holds_19_9_0 = c.bool_const("holds_19_9_0");
    expr holds_19_10_0 = c.bool_const("holds_19_10_0");
    expr holds_19_11_0 = c.bool_const("holds_19_11_0");
    expr holds_19_12_0 = c.bool_const("holds_19_12_0");
    expr holds_19_13_0 = c.bool_const("holds_19_13_0");
    expr holds_19_14_0 = c.bool_const("holds_19_14_0");
    expr holds_19_15_0 = c.bool_const("holds_19_15_0");
    expr holds_19_16_0 = c.bool_const("holds_19_16_0");
    expr holds_19_17_0 = c.bool_const("holds_19_17_0");
    expr holds_19_18_0 = c.bool_const("holds_19_18_0");
    expr holds_19_19_0 = c.bool_const("holds_19_19_0");
    expr holds_19_20_0 = c.bool_const("holds_19_20_0");
    expr holds_19_21_0 = c.bool_const("holds_19_21_0");
    expr holds_19_22_0 = c.bool_const("holds_19_22_0");
    expr holds_19_23_0 = c.bool_const("holds_19_23_0");
    expr holds_20_0_0 = c.bool_const("holds_20_0_0");
    expr holds_20_1_0 = c.bool_const("holds_20_1_0");
    expr holds_20_2_0 = c.bool_const("holds_20_2_0");
    expr holds_20_3_0 = c.bool_const("holds_20_3_0");
    expr holds_20_4_0 = c.bool_const("holds_20_4_0");
    expr holds_20_5_0 = c.bool_const("holds_20_5_0");
    expr holds_20_6_0 = c.bool_const("holds_20_6_0");
    expr holds_20_7_0 = c.bool_const("holds_20_7_0");
    expr holds_20_8_0 = c.bool_const("holds_20_8_0");
    expr holds_20_9_0 = c.bool_const("holds_20_9_0");
    expr holds_20_10_0 = c.bool_const("holds_20_10_0");
    expr holds_20_11_0 = c.bool_const("holds_20_11_0");
    expr holds_20_12_0 = c.bool_const("holds_20_12_0");
    expr holds_20_13_0 = c.bool_const("holds_20_13_0");
    expr holds_20_14_0 = c.bool_const("holds_20_14_0");
    expr holds_20_15_0 = c.bool_const("holds_20_15_0");
    expr holds_20_16_0 = c.bool_const("holds_20_16_0");
    expr holds_20_17_0 = c.bool_const("holds_20_17_0");
    expr holds_20_18_0 = c.bool_const("holds_20_18_0");
    expr holds_20_19_0 = c.bool_const("holds_20_19_0");
    expr holds_20_20_0 = c.bool_const("holds_20_20_0");
    expr holds_20_21_0 = c.bool_const("holds_20_21_0");
    expr holds_20_22_0 = c.bool_const("holds_20_22_0");
    expr holds_20_23_0 = c.bool_const("holds_20_23_0");
    expr holds_21_0_0 = c.bool_const("holds_21_0_0");
    expr holds_21_1_0 = c.bool_const("holds_21_1_0");
    expr holds_21_2_0 = c.bool_const("holds_21_2_0");
    expr holds_21_3_0 = c.bool_const("holds_21_3_0");
    expr holds_21_4_0 = c.bool_const("holds_21_4_0");
    expr holds_21_5_0 = c.bool_const("holds_21_5_0");
    expr holds_21_6_0 = c.bool_const("holds_21_6_0");
    expr holds_21_7_0 = c.bool_const("holds_21_7_0");
    expr holds_21_8_0 = c.bool_const("holds_21_8_0");
    expr holds_21_9_0 = c.bool_const("holds_21_9_0");
    expr holds_21_10_0 = c.bool_const("holds_21_10_0");
    expr holds_21_11_0 = c.bool_const("holds_21_11_0");
    expr holds_21_12_0 = c.bool_const("holds_21_12_0");
    expr holds_21_13_0 = c.bool_const("holds_21_13_0");
    expr holds_21_14_0 = c.bool_const("holds_21_14_0");
    expr holds_21_15_0 = c.bool_const("holds_21_15_0");
    expr holds_21_16_0 = c.bool_const("holds_21_16_0");
    expr holds_21_17_0 = c.bool_const("holds_21_17_0");
    expr holds_21_18_0 = c.bool_const("holds_21_18_0");
    expr holds_21_19_0 = c.bool_const("holds_21_19_0");
    expr holds_21_20_0 = c.bool_const("holds_21_20_0");
    expr holds_21_21_0 = c.bool_const("holds_21_21_0");
    expr holds_21_22_0 = c.bool_const("holds_21_22_0");
    expr holds_21_23_0 = c.bool_const("holds_21_23_0");
    expr holds_22_0_0 = c.bool_const("holds_22_0_0");
    expr holds_22_1_0 = c.bool_const("holds_22_1_0");
    expr holds_22_2_0 = c.bool_const("holds_22_2_0");
    expr holds_22_3_0 = c.bool_const("holds_22_3_0");
    expr holds_22_4_0 = c.bool_const("holds_22_4_0");
    expr holds_22_5_0 = c.bool_const("holds_22_5_0");
    expr holds_22_6_0 = c.bool_const("holds_22_6_0");
    expr holds_22_7_0 = c.bool_const("holds_22_7_0");
    expr holds_22_8_0 = c.bool_const("holds_22_8_0");
    expr holds_22_9_0 = c.bool_const("holds_22_9_0");
    expr holds_22_10_0 = c.bool_const("holds_22_10_0");
    expr holds_22_11_0 = c.bool_const("holds_22_11_0");
    expr holds_22_12_0 = c.bool_const("holds_22_12_0");
    expr holds_22_13_0 = c.bool_const("holds_22_13_0");
    expr holds_22_14_0 = c.bool_const("holds_22_14_0");
    expr holds_22_15_0 = c.bool_const("holds_22_15_0");
    expr holds_22_16_0 = c.bool_const("holds_22_16_0");
    expr holds_22_17_0 = c.bool_const("holds_22_17_0");
    expr holds_22_18_0 = c.bool_const("holds_22_18_0");
    expr holds_22_19_0 = c.bool_const("holds_22_19_0");
    expr holds_22_20_0 = c.bool_const("holds_22_20_0");
    expr holds_22_21_0 = c.bool_const("holds_22_21_0");
    expr holds_22_22_0 = c.bool_const("holds_22_22_0");
    expr holds_22_23_0 = c.bool_const("holds_22_23_0");
    expr holds_23_0_0 = c.bool_const("holds_23_0_0");
    expr holds_23_1_0 = c.bool_const("holds_23_1_0");
    expr holds_23_2_0 = c.bool_const("holds_23_2_0");
    expr holds_23_3_0 = c.bool_const("holds_23_3_0");
    expr holds_23_4_0 = c.bool_const("holds_23_4_0");
    expr holds_23_5_0 = c.bool_const("holds_23_5_0");
    expr holds_23_6_0 = c.bool_const("holds_23_6_0");
    expr holds_23_7_0 = c.bool_const("holds_23_7_0");
    expr holds_23_8_0 = c.bool_const("holds_23_8_0");
    expr holds_23_9_0 = c.bool_const("holds_23_9_0");
    expr holds_23_10_0 = c.bool_const("holds_23_10_0");
    expr holds_23_11_0 = c.bool_const("holds_23_11_0");
    expr holds_23_12_0 = c.bool_const("holds_23_12_0");
    expr holds_23_13_0 = c.bool_const("holds_23_13_0");
    expr holds_23_14_0 = c.bool_const("holds_23_14_0");
    expr holds_23_15_0 = c.bool_const("holds_23_15_0");
    expr holds_23_16_0 = c.bool_const("holds_23_16_0");
    expr holds_23_17_0 = c.bool_const("holds_23_17_0");
    expr holds_23_18_0 = c.bool_const("holds_23_18_0");
    expr holds_23_19_0 = c.bool_const("holds_23_19_0");
    expr holds_23_20_0 = c.bool_const("holds_23_20_0");
    expr holds_23_21_0 = c.bool_const("holds_23_21_0");
    expr holds_23_22_0 = c.bool_const("holds_23_22_0");
    expr holds_23_23_0 = c.bool_const("holds_23_23_0");
    b = ( ( holds_0_0_0 || holds_0_1_0 || holds_0_2_0 || holds_0_3_0 || holds_0_4_0 || holds_0_5_0 || holds_0_6_0 || holds_0_7_0 || holds_0_8_0 || holds_0_9_0 || holds_0_10_0 || holds_0_11_0 || holds_0_12_0 || holds_0_13_0 || holds_0_14_0 || holds_0_15_0 || holds_0_16_0 || holds_0_17_0 || holds_0_18_0 || holds_0_19_0 || holds_0_20_0 || holds_0_21_0 || holds_0_22_0 || holds_0_23_0 ) || ( holds_1_0_0 || holds_1_1_0 || holds_1_2_0 || holds_1_3_0 || holds_1_4_0 || holds_1_5_0 || holds_1_6_0 || holds_1_7_0 || holds_1_8_0 || holds_1_9_0 || holds_1_10_0 || holds_1_11_0 || holds_1_12_0 || holds_1_13_0 || holds_1_14_0 || holds_1_15_0 || holds_1_16_0 || holds_1_17_0 || holds_1_18_0 || holds_1_19_0 || holds_1_20_0 || holds_1_21_0 || holds_1_22_0 || holds_1_23_0 ) || ( holds_2_0_0 || holds_2_1_0 || holds_2_2_0 || holds_2_3_0 || holds_2_4_0 || holds_2_5_0 || holds_2_6_0 || holds_2_7_0 || holds_2_8_0 || holds_2_9_0 || holds_2_10_0 || holds_2_11_0 || holds_2_12_0 || holds_2_13_0 || holds_2_14_0 || holds_2_15_0 || holds_2_16_0 || holds_2_17_0 || holds_2_18_0 || holds_2_19_0 || holds_2_20_0 || holds_2_21_0 || holds_2_22_0 || holds_2_23_0 ) || ( holds_3_0_0 || holds_3_1_0 || holds_3_2_0 || holds_3_3_0 || holds_3_4_0 || holds_3_5_0 || holds_3_6_0 || holds_3_7_0 || holds_3_8_0 || holds_3_9_0 || holds_3_10_0 || holds_3_11_0 || holds_3_12_0 || holds_3_13_0 || holds_3_14_0 || holds_3_15_0 || holds_3_16_0 || holds_3_17_0 || holds_3_18_0 || holds_3_19_0 || holds_3_20_0 || holds_3_21_0 || holds_3_22_0 || holds_3_23_0 ) || ( holds_4_0_0 || holds_4_1_0 || holds_4_2_0 || holds_4_3_0 || holds_4_4_0 || holds_4_5_0 || holds_4_6_0 || holds_4_7_0 || holds_4_8_0 || holds_4_9_0 || holds_4_10_0 || holds_4_11_0 || holds_4_12_0 || holds_4_13_0 || holds_4_14_0 || holds_4_15_0 || holds_4_16_0 || holds_4_17_0 || holds_4_18_0 || holds_4_19_0 || holds_4_20_0 || holds_4_21_0 || holds_4_22_0 || holds_4_23_0 ) || ( holds_5_0_0 || holds_5_1_0 || holds_5_2_0 || holds_5_3_0 || holds_5_4_0 || holds_5_5_0 || holds_5_6_0 || holds_5_7_0 || holds_5_8_0 || holds_5_9_0 || holds_5_10_0 || holds_5_11_0 || holds_5_12_0 || holds_5_13_0 || holds_5_14_0 || holds_5_15_0 || holds_5_16_0 || holds_5_17_0 || holds_5_18_0 || holds_5_19_0 || holds_5_20_0 || holds_5_21_0 || holds_5_22_0 || holds_5_23_0 ) || ( holds_6_0_0 || holds_6_1_0 || holds_6_2_0 || holds_6_3_0 || holds_6_4_0 || holds_6_5_0 || holds_6_6_0 || holds_6_7_0 || holds_6_8_0 || holds_6_9_0 || holds_6_10_0 || holds_6_11_0 || holds_6_12_0 || holds_6_13_0 || holds_6_14_0 || holds_6_15_0 || holds_6_16_0 || holds_6_17_0 || holds_6_18_0 || holds_6_19_0 || holds_6_20_0 || holds_6_21_0 || holds_6_22_0 || holds_6_23_0 ) || ( holds_7_0_0 || holds_7_1_0 || holds_7_2_0 || holds_7_3_0 || holds_7_4_0 || holds_7_5_0 || holds_7_6_0 || holds_7_7_0 || holds_7_8_0 || holds_7_9_0 || holds_7_10_0 || holds_7_11_0 || holds_7_12_0 || holds_7_13_0 || holds_7_14_0 || holds_7_15_0 || holds_7_16_0 || holds_7_17_0 || holds_7_18_0 || holds_7_19_0 || holds_7_20_0 || holds_7_21_0 || holds_7_22_0 || holds_7_23_0 ) || ( holds_8_0_0 || holds_8_1_0 || holds_8_2_0 || holds_8_3_0 || holds_8_4_0 || holds_8_5_0 || holds_8_6_0 || holds_8_7_0 || holds_8_8_0 || holds_8_9_0 || holds_8_10_0 || holds_8_11_0 || holds_8_12_0 || holds_8_13_0 || holds_8_14_0 || holds_8_15_0 || holds_8_16_0 || holds_8_17_0 || holds_8_18_0 || holds_8_19_0 || holds_8_20_0 || holds_8_21_0 || holds_8_22_0 || holds_8_23_0 ) || ( holds_9_0_0 || holds_9_1_0 || holds_9_2_0 || holds_9_3_0 || holds_9_4_0 || holds_9_5_0 || holds_9_6_0 || holds_9_7_0 || holds_9_8_0 || holds_9_9_0 || holds_9_10_0 || holds_9_11_0 || holds_9_12_0 || holds_9_13_0 || holds_9_14_0 || holds_9_15_0 || holds_9_16_0 || holds_9_17_0 || holds_9_18_0 || holds_9_19_0 || holds_9_20_0 || holds_9_21_0 || holds_9_22_0 || holds_9_23_0 ) || ( holds_10_0_0 || holds_10_1_0 || holds_10_2_0 || holds_10_3_0 || holds_10_4_0 || holds_10_5_0 || holds_10_6_0 || holds_10_7_0 || holds_10_8_0 || holds_10_9_0 || holds_10_10_0 || holds_10_11_0 || holds_10_12_0 || holds_10_13_0 || holds_10_14_0 || holds_10_15_0 || holds_10_16_0 || holds_10_17_0 || holds_10_18_0 || holds_10_19_0 || holds_10_20_0 || holds_10_21_0 || holds_10_22_0 || holds_10_23_0 ) || ( holds_11_0_0 || holds_11_1_0 || holds_11_2_0 || holds_11_3_0 || holds_11_4_0 || holds_11_5_0 || holds_11_6_0 || holds_11_7_0 || holds_11_8_0 || holds_11_9_0 || holds_11_10_0 || holds_11_11_0 || holds_11_12_0 || holds_11_13_0 || holds_11_14_0 || holds_11_15_0 || holds_11_16_0 || holds_11_17_0 || holds_11_18_0 || holds_11_19_0 || holds_11_20_0 || holds_11_21_0 || holds_11_22_0 || holds_11_23_0 ) || ( holds_12_0_0 || holds_12_1_0 || holds_12_2_0 || holds_12_3_0 || holds_12_4_0 || holds_12_5_0 || holds_12_6_0 || holds_12_7_0 || holds_12_8_0 || holds_12_9_0 || holds_12_10_0 || holds_12_11_0 || holds_12_12_0 || holds_12_13_0 || holds_12_14_0 || holds_12_15_0 || holds_12_16_0 || holds_12_17_0 || holds_12_18_0 || holds_12_19_0 || holds_12_20_0 || holds_12_21_0 || holds_12_22_0 || holds_12_23_0 ) || ( holds_13_0_0 || holds_13_1_0 || holds_13_2_0 || holds_13_3_0 || holds_13_4_0 || holds_13_5_0 || holds_13_6_0 || holds_13_7_0 || holds_13_8_0 || holds_13_9_0 || holds_13_10_0 || holds_13_11_0 || holds_13_12_0 || holds_13_13_0 || holds_13_14_0 || holds_13_15_0 || holds_13_16_0 || holds_13_17_0 || holds_13_18_0 || holds_13_19_0 || holds_13_20_0 || holds_13_21_0 || holds_13_22_0 || holds_13_23_0 ) || ( holds_14_0_0 || holds_14_1_0 || holds_14_2_0 || holds_14_3_0 || holds_14_4_0 || holds_14_5_0 || holds_14_6_0 || holds_14_7_0 || holds_14_8_0 || holds_14_9_0 || holds_14_10_0 || holds_14_11_0 || holds_14_12_0 || holds_14_13_0 || holds_14_14_0 || holds_14_15_0 || holds_14_16_0 || holds_14_17_0 || holds_14_18_0 || holds_14_19_0 || holds_14_20_0 || holds_14_21_0 || holds_14_22_0 || holds_14_23_0 ) || ( holds_15_0_0 || holds_15_1_0 || holds_15_2_0 || holds_15_3_0 || holds_15_4_0 || holds_15_5_0 || holds_15_6_0 || holds_15_7_0 || holds_15_8_0 || holds_15_9_0 || holds_15_10_0 || holds_15_11_0 || holds_15_12_0 || holds_15_13_0 || holds_15_14_0 || holds_15_15_0 || holds_15_16_0 || holds_15_17_0 || holds_15_18_0 || holds_15_19_0 || holds_15_20_0 || holds_15_21_0 || holds_15_22_0 || holds_15_23_0 ) || ( holds_16_0_0 || holds_16_1_0 || holds_16_2_0 || holds_16_3_0 || holds_16_4_0 || holds_16_5_0 || holds_16_6_0 || holds_16_7_0 || holds_16_8_0 || holds_16_9_0 || holds_16_10_0 || holds_16_11_0 || holds_16_12_0 || holds_16_13_0 || holds_16_14_0 || holds_16_15_0 || holds_16_16_0 || holds_16_17_0 || holds_16_18_0 || holds_16_19_0 || holds_16_20_0 || holds_16_21_0 || holds_16_22_0 || holds_16_23_0 ) || ( holds_17_0_0 || holds_17_1_0 || holds_17_2_0 || holds_17_3_0 || holds_17_4_0 || holds_17_5_0 || holds_17_6_0 || holds_17_7_0 || holds_17_8_0 || holds_17_9_0 || holds_17_10_0 || holds_17_11_0 || holds_17_12_0 || holds_17_13_0 || holds_17_14_0 || holds_17_15_0 || holds_17_16_0 || holds_17_17_0 || holds_17_18_0 || holds_17_19_0 || holds_17_20_0 || holds_17_21_0 || holds_17_22_0 || holds_17_23_0 ) || ( holds_18_0_0 || holds_18_1_0 || holds_18_2_0 || holds_18_3_0 || holds_18_4_0 || holds_18_5_0 || holds_18_6_0 || holds_18_7_0 || holds_18_8_0 || holds_18_9_0 || holds_18_10_0 || holds_18_11_0 || holds_18_12_0 || holds_18_13_0 || holds_18_14_0 || holds_18_15_0 || holds_18_16_0 || holds_18_17_0 || holds_18_18_0 || holds_18_19_0 || holds_18_20_0 || holds_18_21_0 || holds_18_22_0 || holds_18_23_0 ) || ( holds_19_0_0 || holds_19_1_0 || holds_19_2_0 || holds_19_3_0 || holds_19_4_0 || holds_19_5_0 || holds_19_6_0 || holds_19_7_0 || holds_19_8_0 || holds_19_9_0 || holds_19_10_0 || holds_19_11_0 || holds_19_12_0 || holds_19_13_0 || holds_19_14_0 || holds_19_15_0 || holds_19_16_0 || holds_19_17_0 || holds_19_18_0 || holds_19_19_0 || holds_19_20_0 || holds_19_21_0 || holds_19_22_0 || holds_19_23_0 ) || ( holds_20_0_0 || holds_20_1_0 || holds_20_2_0 || holds_20_3_0 || holds_20_4_0 || holds_20_5_0 || holds_20_6_0 || holds_20_7_0 || holds_20_8_0 || holds_20_9_0 || holds_20_10_0 || holds_20_11_0 || holds_20_12_0 || holds_20_13_0 || holds_20_14_0 || holds_20_15_0 || holds_20_16_0 || holds_20_17_0 || holds_20_18_0 || holds_20_19_0 || holds_20_20_0 || holds_20_21_0 || holds_20_22_0 || holds_20_23_0 ) || ( holds_21_0_0 || holds_21_1_0 || holds_21_2_0 || holds_21_3_0 || holds_21_4_0 || holds_21_5_0 || holds_21_6_0 || holds_21_7_0 || holds_21_8_0 || holds_21_9_0 || holds_21_10_0 || holds_21_11_0 || holds_21_12_0 || holds_21_13_0 || holds_21_14_0 || holds_21_15_0 || holds_21_16_0 || holds_21_17_0 || holds_21_18_0 || holds_21_19_0 || holds_21_20_0 || holds_21_21_0 || holds_21_22_0 || holds_21_23_0 ) || ( holds_22_0_0 || holds_22_1_0 || holds_22_2_0 || holds_22_3_0 || holds_22_4_0 || holds_22_5_0 || holds_22_6_0 || holds_22_7_0 || holds_22_8_0 || holds_22_9_0 || holds_22_10_0 || holds_22_11_0 || holds_22_12_0 || holds_22_13_0 || holds_22_14_0 || holds_22_15_0 || holds_22_16_0 || holds_22_17_0 || holds_22_18_0 || holds_22_19_0 || holds_22_20_0 || holds_22_21_0 || holds_22_22_0 || holds_22_23_0 ) || ( holds_23_0_0 || holds_23_1_0 || holds_23_2_0 || holds_23_3_0 || holds_23_4_0 || holds_23_5_0 || holds_23_6_0 || holds_23_7_0 || holds_23_8_0 || holds_23_9_0 || holds_23_10_0 || holds_23_11_0 || holds_23_12_0 || holds_23_13_0 || holds_23_14_0 || holds_23_15_0 || holds_23_16_0 || holds_23_17_0 || holds_23_18_0 || holds_23_19_0 || holds_23_20_0 || holds_23_21_0 || holds_23_22_0 || holds_23_23_0 ) ) ;
    s.add(b);
    expr holds_0_0_2 = c.bool_const("holds_0_0_2");
    expr holds_1_0_2 = c.bool_const("holds_1_0_2");
    expr holds_2_0_2 = c.bool_const("holds_2_0_2");
    expr holds_3_0_2 = c.bool_const("holds_3_0_2");
    expr holds_4_0_2 = c.bool_const("holds_4_0_2");
    expr holds_5_0_2 = c.bool_const("holds_5_0_2");
    expr holds_6_0_2 = c.bool_const("holds_6_0_2");
    expr holds_7_0_2 = c.bool_const("holds_7_0_2");
    expr holds_8_0_2 = c.bool_const("holds_8_0_2");
    expr holds_9_0_2 = c.bool_const("holds_9_0_2");
    expr holds_10_0_2 = c.bool_const("holds_10_0_2");
    expr holds_11_0_2 = c.bool_const("holds_11_0_2");
    expr holds_12_0_2 = c.bool_const("holds_12_0_2");
    expr holds_13_0_2 = c.bool_const("holds_13_0_2");
    expr holds_14_0_2 = c.bool_const("holds_14_0_2");
    expr holds_15_0_2 = c.bool_const("holds_15_0_2");
    expr holds_16_0_2 = c.bool_const("holds_16_0_2");
    expr holds_17_0_2 = c.bool_const("holds_17_0_2");
    expr holds_18_0_2 = c.bool_const("holds_18_0_2");
    expr holds_19_0_2 = c.bool_const("holds_19_0_2");
    expr holds_20_0_2 = c.bool_const("holds_20_0_2");
    expr holds_21_0_2 = c.bool_const("holds_21_0_2");
    expr holds_22_0_2 = c.bool_const("holds_22_0_2");
    expr holds_23_0_2 = c.bool_const("holds_23_0_2");
    b = ((holds_0_0_2) && (!holds_16_0_2 && !holds_2_0_2 && !holds_5_0_2 && !holds_1_0_2 && !holds_18_0_2 && !holds_4_0_2 && !holds_19_0_2 && !holds_12_0_2 && !holds_15_0_2 && !holds_3_0_2 && !holds_10_0_2 && !holds_7_0_2 && !holds_9_0_2 && !holds_23_0_2 && !holds_11_0_2 && !holds_6_0_2 && !holds_17_0_2 && !holds_22_0_2 && !holds_21_0_2 && !holds_8_0_2 && !holds_14_0_2 && !holds_13_0_2 && !holds_20_0_2));
    s.add(b);
    expr holds_0_0_3 = c.bool_const("holds_0_0_3");
    expr holds_0_1_3 = c.bool_const("holds_0_1_3");
    expr holds_0_2_3 = c.bool_const("holds_0_2_3");
    expr holds_0_3_3 = c.bool_const("holds_0_3_3");
    expr holds_0_4_3 = c.bool_const("holds_0_4_3");
    expr holds_0_5_3 = c.bool_const("holds_0_5_3");
    expr holds_0_6_3 = c.bool_const("holds_0_6_3");
    expr holds_0_7_3 = c.bool_const("holds_0_7_3");
    expr holds_0_8_3 = c.bool_const("holds_0_8_3");
    expr holds_0_9_3 = c.bool_const("holds_0_9_3");
    expr holds_0_10_3 = c.bool_const("holds_0_10_3");
    expr holds_0_11_3 = c.bool_const("holds_0_11_3");
    expr holds_0_12_3 = c.bool_const("holds_0_12_3");
    expr holds_0_13_3 = c.bool_const("holds_0_13_3");
    expr holds_0_14_3 = c.bool_const("holds_0_14_3");
    expr holds_0_15_3 = c.bool_const("holds_0_15_3");
    expr holds_0_16_3 = c.bool_const("holds_0_16_3");
    expr holds_0_17_3 = c.bool_const("holds_0_17_3");
    expr holds_0_18_3 = c.bool_const("holds_0_18_3");
    expr holds_0_19_3 = c.bool_const("holds_0_19_3");
    expr holds_0_20_3 = c.bool_const("holds_0_20_3");
    expr holds_0_21_3 = c.bool_const("holds_0_21_3");
    expr holds_0_22_3 = c.bool_const("holds_0_22_3");
    expr holds_0_23_3 = c.bool_const("holds_0_23_3");
    b = ((holds_0_1_3) && (!holds_0_4_3 && !holds_0_16_3 && !holds_0_8_3 && !holds_0_5_3 && !holds_0_20_3 && !holds_0_9_3 && !holds_0_19_3 && !holds_0_14_3 && !holds_0_23_3 && !holds_0_10_3 && !holds_0_21_3 && !holds_0_2_3 && !holds_0_22_3 && !holds_0_7_3 && !holds_0_11_3 && !holds_0_13_3 && !holds_0_0_3 && !holds_0_18_3 && !holds_0_12_3 && !holds_0_6_3 && !holds_0_17_3 && !holds_0_15_3 && !holds_0_3_3));
    s.add(b);
    expr holds_0_0_1 = c.bool_const("holds_0_0_1");
    b = ((holds_0_0_1 && holds_0_0_2 && holds_0_0_3)) || ((!holds_0_0_1 && (!holds_0_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_0_1_1 = c.bool_const("holds_0_1_1");
    b = ((holds_0_1_1 && holds_0_0_2 && holds_0_1_3)) || ((!holds_0_1_1 && (!holds_0_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_0_2_1 = c.bool_const("holds_0_2_1");
    b = ((holds_0_2_1 && holds_0_0_2 && holds_0_2_3)) || ((!holds_0_2_1 && (!holds_0_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_0_3_1 = c.bool_const("holds_0_3_1");
    b = ((holds_0_3_1 && holds_0_0_2 && holds_0_3_3)) || ((!holds_0_3_1 && (!holds_0_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_0_4_1 = c.bool_const("holds_0_4_1");
    b = ((holds_0_4_1 && holds_0_0_2 && holds_0_4_3)) || ((!holds_0_4_1 && (!holds_0_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_0_5_1 = c.bool_const("holds_0_5_1");
    b = ((holds_0_5_1 && holds_0_0_2 && holds_0_5_3)) || ((!holds_0_5_1 && (!holds_0_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_0_6_1 = c.bool_const("holds_0_6_1");
    b = ((holds_0_6_1 && holds_0_0_2 && holds_0_6_3)) || ((!holds_0_6_1 && (!holds_0_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_0_7_1 = c.bool_const("holds_0_7_1");
    b = ((holds_0_7_1 && holds_0_0_2 && holds_0_7_3)) || ((!holds_0_7_1 && (!holds_0_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_0_8_1 = c.bool_const("holds_0_8_1");
    b = ((holds_0_8_1 && holds_0_0_2 && holds_0_8_3)) || ((!holds_0_8_1 && (!holds_0_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_0_9_1 = c.bool_const("holds_0_9_1");
    b = ((holds_0_9_1 && holds_0_0_2 && holds_0_9_3)) || ((!holds_0_9_1 && (!holds_0_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_0_10_1 = c.bool_const("holds_0_10_1");
    b = ((holds_0_10_1 && holds_0_0_2 && holds_0_10_3)) || ((!holds_0_10_1 && (!holds_0_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_0_11_1 = c.bool_const("holds_0_11_1");
    b = ((holds_0_11_1 && holds_0_0_2 && holds_0_11_3)) || ((!holds_0_11_1 && (!holds_0_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_0_12_1 = c.bool_const("holds_0_12_1");
    b = ((holds_0_12_1 && holds_0_0_2 && holds_0_12_3)) || ((!holds_0_12_1 && (!holds_0_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_0_13_1 = c.bool_const("holds_0_13_1");
    b = ((holds_0_13_1 && holds_0_0_2 && holds_0_13_3)) || ((!holds_0_13_1 && (!holds_0_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_0_14_1 = c.bool_const("holds_0_14_1");
    b = ((holds_0_14_1 && holds_0_0_2 && holds_0_14_3)) || ((!holds_0_14_1 && (!holds_0_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_0_15_1 = c.bool_const("holds_0_15_1");
    b = ((holds_0_15_1 && holds_0_0_2 && holds_0_15_3)) || ((!holds_0_15_1 && (!holds_0_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_0_16_1 = c.bool_const("holds_0_16_1");
    b = ((holds_0_16_1 && holds_0_0_2 && holds_0_16_3)) || ((!holds_0_16_1 && (!holds_0_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_0_17_1 = c.bool_const("holds_0_17_1");
    b = ((holds_0_17_1 && holds_0_0_2 && holds_0_17_3)) || ((!holds_0_17_1 && (!holds_0_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_0_18_1 = c.bool_const("holds_0_18_1");
    b = ((holds_0_18_1 && holds_0_0_2 && holds_0_18_3)) || ((!holds_0_18_1 && (!holds_0_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_0_19_1 = c.bool_const("holds_0_19_1");
    b = ((holds_0_19_1 && holds_0_0_2 && holds_0_19_3)) || ((!holds_0_19_1 && (!holds_0_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_0_20_1 = c.bool_const("holds_0_20_1");
    b = ((holds_0_20_1 && holds_0_0_2 && holds_0_20_3)) || ((!holds_0_20_1 && (!holds_0_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_0_21_1 = c.bool_const("holds_0_21_1");
    b = ((holds_0_21_1 && holds_0_0_2 && holds_0_21_3)) || ((!holds_0_21_1 && (!holds_0_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_0_22_1 = c.bool_const("holds_0_22_1");
    b = ((holds_0_22_1 && holds_0_0_2 && holds_0_22_3)) || ((!holds_0_22_1 && (!holds_0_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_0_23_1 = c.bool_const("holds_0_23_1");
    b = ((holds_0_23_1 && holds_0_0_2 && holds_0_23_3)) || ((!holds_0_23_1 && (!holds_0_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_1_0_1 = c.bool_const("holds_1_0_1");
    b = ((holds_1_0_1 && holds_1_0_2 && holds_0_0_3)) || ((!holds_1_0_1 && (!holds_1_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_1_1_1 = c.bool_const("holds_1_1_1");
    b = ((holds_1_1_1 && holds_1_0_2 && holds_0_1_3)) || ((!holds_1_1_1 && (!holds_1_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_1_2_1 = c.bool_const("holds_1_2_1");
    b = ((holds_1_2_1 && holds_1_0_2 && holds_0_2_3)) || ((!holds_1_2_1 && (!holds_1_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_1_3_1 = c.bool_const("holds_1_3_1");
    b = ((holds_1_3_1 && holds_1_0_2 && holds_0_3_3)) || ((!holds_1_3_1 && (!holds_1_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_1_4_1 = c.bool_const("holds_1_4_1");
    b = ((holds_1_4_1 && holds_1_0_2 && holds_0_4_3)) || ((!holds_1_4_1 && (!holds_1_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_1_5_1 = c.bool_const("holds_1_5_1");
    b = ((holds_1_5_1 && holds_1_0_2 && holds_0_5_3)) || ((!holds_1_5_1 && (!holds_1_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_1_6_1 = c.bool_const("holds_1_6_1");
    b = ((holds_1_6_1 && holds_1_0_2 && holds_0_6_3)) || ((!holds_1_6_1 && (!holds_1_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_1_7_1 = c.bool_const("holds_1_7_1");
    b = ((holds_1_7_1 && holds_1_0_2 && holds_0_7_3)) || ((!holds_1_7_1 && (!holds_1_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_1_8_1 = c.bool_const("holds_1_8_1");
    b = ((holds_1_8_1 && holds_1_0_2 && holds_0_8_3)) || ((!holds_1_8_1 && (!holds_1_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_1_9_1 = c.bool_const("holds_1_9_1");
    b = ((holds_1_9_1 && holds_1_0_2 && holds_0_9_3)) || ((!holds_1_9_1 && (!holds_1_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_1_10_1 = c.bool_const("holds_1_10_1");
    b = ((holds_1_10_1 && holds_1_0_2 && holds_0_10_3)) || ((!holds_1_10_1 && (!holds_1_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_1_11_1 = c.bool_const("holds_1_11_1");
    b = ((holds_1_11_1 && holds_1_0_2 && holds_0_11_3)) || ((!holds_1_11_1 && (!holds_1_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_1_12_1 = c.bool_const("holds_1_12_1");
    b = ((holds_1_12_1 && holds_1_0_2 && holds_0_12_3)) || ((!holds_1_12_1 && (!holds_1_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_1_13_1 = c.bool_const("holds_1_13_1");
    b = ((holds_1_13_1 && holds_1_0_2 && holds_0_13_3)) || ((!holds_1_13_1 && (!holds_1_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_1_14_1 = c.bool_const("holds_1_14_1");
    b = ((holds_1_14_1 && holds_1_0_2 && holds_0_14_3)) || ((!holds_1_14_1 && (!holds_1_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_1_15_1 = c.bool_const("holds_1_15_1");
    b = ((holds_1_15_1 && holds_1_0_2 && holds_0_15_3)) || ((!holds_1_15_1 && (!holds_1_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_1_16_1 = c.bool_const("holds_1_16_1");
    b = ((holds_1_16_1 && holds_1_0_2 && holds_0_16_3)) || ((!holds_1_16_1 && (!holds_1_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_1_17_1 = c.bool_const("holds_1_17_1");
    b = ((holds_1_17_1 && holds_1_0_2 && holds_0_17_3)) || ((!holds_1_17_1 && (!holds_1_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_1_18_1 = c.bool_const("holds_1_18_1");
    b = ((holds_1_18_1 && holds_1_0_2 && holds_0_18_3)) || ((!holds_1_18_1 && (!holds_1_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_1_19_1 = c.bool_const("holds_1_19_1");
    b = ((holds_1_19_1 && holds_1_0_2 && holds_0_19_3)) || ((!holds_1_19_1 && (!holds_1_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_1_20_1 = c.bool_const("holds_1_20_1");
    b = ((holds_1_20_1 && holds_1_0_2 && holds_0_20_3)) || ((!holds_1_20_1 && (!holds_1_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_1_21_1 = c.bool_const("holds_1_21_1");
    b = ((holds_1_21_1 && holds_1_0_2 && holds_0_21_3)) || ((!holds_1_21_1 && (!holds_1_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_1_22_1 = c.bool_const("holds_1_22_1");
    b = ((holds_1_22_1 && holds_1_0_2 && holds_0_22_3)) || ((!holds_1_22_1 && (!holds_1_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_1_23_1 = c.bool_const("holds_1_23_1");
    b = ((holds_1_23_1 && holds_1_0_2 && holds_0_23_3)) || ((!holds_1_23_1 && (!holds_1_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_2_0_1 = c.bool_const("holds_2_0_1");
    b = ((holds_2_0_1 && holds_2_0_2 && holds_0_0_3)) || ((!holds_2_0_1 && (!holds_2_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_2_1_1 = c.bool_const("holds_2_1_1");
    b = ((holds_2_1_1 && holds_2_0_2 && holds_0_1_3)) || ((!holds_2_1_1 && (!holds_2_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_2_2_1 = c.bool_const("holds_2_2_1");
    b = ((holds_2_2_1 && holds_2_0_2 && holds_0_2_3)) || ((!holds_2_2_1 && (!holds_2_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_2_3_1 = c.bool_const("holds_2_3_1");
    b = ((holds_2_3_1 && holds_2_0_2 && holds_0_3_3)) || ((!holds_2_3_1 && (!holds_2_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_2_4_1 = c.bool_const("holds_2_4_1");
    b = ((holds_2_4_1 && holds_2_0_2 && holds_0_4_3)) || ((!holds_2_4_1 && (!holds_2_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_2_5_1 = c.bool_const("holds_2_5_1");
    b = ((holds_2_5_1 && holds_2_0_2 && holds_0_5_3)) || ((!holds_2_5_1 && (!holds_2_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_2_6_1 = c.bool_const("holds_2_6_1");
    b = ((holds_2_6_1 && holds_2_0_2 && holds_0_6_3)) || ((!holds_2_6_1 && (!holds_2_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_2_7_1 = c.bool_const("holds_2_7_1");
    b = ((holds_2_7_1 && holds_2_0_2 && holds_0_7_3)) || ((!holds_2_7_1 && (!holds_2_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_2_8_1 = c.bool_const("holds_2_8_1");
    b = ((holds_2_8_1 && holds_2_0_2 && holds_0_8_3)) || ((!holds_2_8_1 && (!holds_2_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_2_9_1 = c.bool_const("holds_2_9_1");
    b = ((holds_2_9_1 && holds_2_0_2 && holds_0_9_3)) || ((!holds_2_9_1 && (!holds_2_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_2_10_1 = c.bool_const("holds_2_10_1");
    b = ((holds_2_10_1 && holds_2_0_2 && holds_0_10_3)) || ((!holds_2_10_1 && (!holds_2_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_2_11_1 = c.bool_const("holds_2_11_1");
    b = ((holds_2_11_1 && holds_2_0_2 && holds_0_11_3)) || ((!holds_2_11_1 && (!holds_2_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_2_12_1 = c.bool_const("holds_2_12_1");
    b = ((holds_2_12_1 && holds_2_0_2 && holds_0_12_3)) || ((!holds_2_12_1 && (!holds_2_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_2_13_1 = c.bool_const("holds_2_13_1");
    b = ((holds_2_13_1 && holds_2_0_2 && holds_0_13_3)) || ((!holds_2_13_1 && (!holds_2_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_2_14_1 = c.bool_const("holds_2_14_1");
    b = ((holds_2_14_1 && holds_2_0_2 && holds_0_14_3)) || ((!holds_2_14_1 && (!holds_2_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_2_15_1 = c.bool_const("holds_2_15_1");
    b = ((holds_2_15_1 && holds_2_0_2 && holds_0_15_3)) || ((!holds_2_15_1 && (!holds_2_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_2_16_1 = c.bool_const("holds_2_16_1");
    b = ((holds_2_16_1 && holds_2_0_2 && holds_0_16_3)) || ((!holds_2_16_1 && (!holds_2_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_2_17_1 = c.bool_const("holds_2_17_1");
    b = ((holds_2_17_1 && holds_2_0_2 && holds_0_17_3)) || ((!holds_2_17_1 && (!holds_2_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_2_18_1 = c.bool_const("holds_2_18_1");
    b = ((holds_2_18_1 && holds_2_0_2 && holds_0_18_3)) || ((!holds_2_18_1 && (!holds_2_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_2_19_1 = c.bool_const("holds_2_19_1");
    b = ((holds_2_19_1 && holds_2_0_2 && holds_0_19_3)) || ((!holds_2_19_1 && (!holds_2_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_2_20_1 = c.bool_const("holds_2_20_1");
    b = ((holds_2_20_1 && holds_2_0_2 && holds_0_20_3)) || ((!holds_2_20_1 && (!holds_2_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_2_21_1 = c.bool_const("holds_2_21_1");
    b = ((holds_2_21_1 && holds_2_0_2 && holds_0_21_3)) || ((!holds_2_21_1 && (!holds_2_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_2_22_1 = c.bool_const("holds_2_22_1");
    b = ((holds_2_22_1 && holds_2_0_2 && holds_0_22_3)) || ((!holds_2_22_1 && (!holds_2_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_2_23_1 = c.bool_const("holds_2_23_1");
    b = ((holds_2_23_1 && holds_2_0_2 && holds_0_23_3)) || ((!holds_2_23_1 && (!holds_2_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_3_0_1 = c.bool_const("holds_3_0_1");
    b = ((holds_3_0_1 && holds_3_0_2 && holds_0_0_3)) || ((!holds_3_0_1 && (!holds_3_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_3_1_1 = c.bool_const("holds_3_1_1");
    b = ((holds_3_1_1 && holds_3_0_2 && holds_0_1_3)) || ((!holds_3_1_1 && (!holds_3_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_3_2_1 = c.bool_const("holds_3_2_1");
    b = ((holds_3_2_1 && holds_3_0_2 && holds_0_2_3)) || ((!holds_3_2_1 && (!holds_3_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_3_3_1 = c.bool_const("holds_3_3_1");
    b = ((holds_3_3_1 && holds_3_0_2 && holds_0_3_3)) || ((!holds_3_3_1 && (!holds_3_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_3_4_1 = c.bool_const("holds_3_4_1");
    b = ((holds_3_4_1 && holds_3_0_2 && holds_0_4_3)) || ((!holds_3_4_1 && (!holds_3_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_3_5_1 = c.bool_const("holds_3_5_1");
    b = ((holds_3_5_1 && holds_3_0_2 && holds_0_5_3)) || ((!holds_3_5_1 && (!holds_3_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_3_6_1 = c.bool_const("holds_3_6_1");
    b = ((holds_3_6_1 && holds_3_0_2 && holds_0_6_3)) || ((!holds_3_6_1 && (!holds_3_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_3_7_1 = c.bool_const("holds_3_7_1");
    b = ((holds_3_7_1 && holds_3_0_2 && holds_0_7_3)) || ((!holds_3_7_1 && (!holds_3_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_3_8_1 = c.bool_const("holds_3_8_1");
    b = ((holds_3_8_1 && holds_3_0_2 && holds_0_8_3)) || ((!holds_3_8_1 && (!holds_3_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_3_9_1 = c.bool_const("holds_3_9_1");
    b = ((holds_3_9_1 && holds_3_0_2 && holds_0_9_3)) || ((!holds_3_9_1 && (!holds_3_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_3_10_1 = c.bool_const("holds_3_10_1");
    b = ((holds_3_10_1 && holds_3_0_2 && holds_0_10_3)) || ((!holds_3_10_1 && (!holds_3_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_3_11_1 = c.bool_const("holds_3_11_1");
    b = ((holds_3_11_1 && holds_3_0_2 && holds_0_11_3)) || ((!holds_3_11_1 && (!holds_3_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_3_12_1 = c.bool_const("holds_3_12_1");
    b = ((holds_3_12_1 && holds_3_0_2 && holds_0_12_3)) || ((!holds_3_12_1 && (!holds_3_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_3_13_1 = c.bool_const("holds_3_13_1");
    b = ((holds_3_13_1 && holds_3_0_2 && holds_0_13_3)) || ((!holds_3_13_1 && (!holds_3_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_3_14_1 = c.bool_const("holds_3_14_1");
    b = ((holds_3_14_1 && holds_3_0_2 && holds_0_14_3)) || ((!holds_3_14_1 && (!holds_3_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_3_15_1 = c.bool_const("holds_3_15_1");
    b = ((holds_3_15_1 && holds_3_0_2 && holds_0_15_3)) || ((!holds_3_15_1 && (!holds_3_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_3_16_1 = c.bool_const("holds_3_16_1");
    b = ((holds_3_16_1 && holds_3_0_2 && holds_0_16_3)) || ((!holds_3_16_1 && (!holds_3_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_3_17_1 = c.bool_const("holds_3_17_1");
    b = ((holds_3_17_1 && holds_3_0_2 && holds_0_17_3)) || ((!holds_3_17_1 && (!holds_3_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_3_18_1 = c.bool_const("holds_3_18_1");
    b = ((holds_3_18_1 && holds_3_0_2 && holds_0_18_3)) || ((!holds_3_18_1 && (!holds_3_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_3_19_1 = c.bool_const("holds_3_19_1");
    b = ((holds_3_19_1 && holds_3_0_2 && holds_0_19_3)) || ((!holds_3_19_1 && (!holds_3_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_3_20_1 = c.bool_const("holds_3_20_1");
    b = ((holds_3_20_1 && holds_3_0_2 && holds_0_20_3)) || ((!holds_3_20_1 && (!holds_3_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_3_21_1 = c.bool_const("holds_3_21_1");
    b = ((holds_3_21_1 && holds_3_0_2 && holds_0_21_3)) || ((!holds_3_21_1 && (!holds_3_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_3_22_1 = c.bool_const("holds_3_22_1");
    b = ((holds_3_22_1 && holds_3_0_2 && holds_0_22_3)) || ((!holds_3_22_1 && (!holds_3_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_3_23_1 = c.bool_const("holds_3_23_1");
    b = ((holds_3_23_1 && holds_3_0_2 && holds_0_23_3)) || ((!holds_3_23_1 && (!holds_3_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_4_0_1 = c.bool_const("holds_4_0_1");
    b = ((holds_4_0_1 && holds_4_0_2 && holds_0_0_3)) || ((!holds_4_0_1 && (!holds_4_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_4_1_1 = c.bool_const("holds_4_1_1");
    b = ((holds_4_1_1 && holds_4_0_2 && holds_0_1_3)) || ((!holds_4_1_1 && (!holds_4_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_4_2_1 = c.bool_const("holds_4_2_1");
    b = ((holds_4_2_1 && holds_4_0_2 && holds_0_2_3)) || ((!holds_4_2_1 && (!holds_4_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_4_3_1 = c.bool_const("holds_4_3_1");
    b = ((holds_4_3_1 && holds_4_0_2 && holds_0_3_3)) || ((!holds_4_3_1 && (!holds_4_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_4_4_1 = c.bool_const("holds_4_4_1");
    b = ((holds_4_4_1 && holds_4_0_2 && holds_0_4_3)) || ((!holds_4_4_1 && (!holds_4_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_4_5_1 = c.bool_const("holds_4_5_1");
    b = ((holds_4_5_1 && holds_4_0_2 && holds_0_5_3)) || ((!holds_4_5_1 && (!holds_4_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_4_6_1 = c.bool_const("holds_4_6_1");
    b = ((holds_4_6_1 && holds_4_0_2 && holds_0_6_3)) || ((!holds_4_6_1 && (!holds_4_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_4_7_1 = c.bool_const("holds_4_7_1");
    b = ((holds_4_7_1 && holds_4_0_2 && holds_0_7_3)) || ((!holds_4_7_1 && (!holds_4_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_4_8_1 = c.bool_const("holds_4_8_1");
    b = ((holds_4_8_1 && holds_4_0_2 && holds_0_8_3)) || ((!holds_4_8_1 && (!holds_4_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_4_9_1 = c.bool_const("holds_4_9_1");
    b = ((holds_4_9_1 && holds_4_0_2 && holds_0_9_3)) || ((!holds_4_9_1 && (!holds_4_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_4_10_1 = c.bool_const("holds_4_10_1");
    b = ((holds_4_10_1 && holds_4_0_2 && holds_0_10_3)) || ((!holds_4_10_1 && (!holds_4_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_4_11_1 = c.bool_const("holds_4_11_1");
    b = ((holds_4_11_1 && holds_4_0_2 && holds_0_11_3)) || ((!holds_4_11_1 && (!holds_4_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_4_12_1 = c.bool_const("holds_4_12_1");
    b = ((holds_4_12_1 && holds_4_0_2 && holds_0_12_3)) || ((!holds_4_12_1 && (!holds_4_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_4_13_1 = c.bool_const("holds_4_13_1");
    b = ((holds_4_13_1 && holds_4_0_2 && holds_0_13_3)) || ((!holds_4_13_1 && (!holds_4_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_4_14_1 = c.bool_const("holds_4_14_1");
    b = ((holds_4_14_1 && holds_4_0_2 && holds_0_14_3)) || ((!holds_4_14_1 && (!holds_4_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_4_15_1 = c.bool_const("holds_4_15_1");
    b = ((holds_4_15_1 && holds_4_0_2 && holds_0_15_3)) || ((!holds_4_15_1 && (!holds_4_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_4_16_1 = c.bool_const("holds_4_16_1");
    b = ((holds_4_16_1 && holds_4_0_2 && holds_0_16_3)) || ((!holds_4_16_1 && (!holds_4_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_4_17_1 = c.bool_const("holds_4_17_1");
    b = ((holds_4_17_1 && holds_4_0_2 && holds_0_17_3)) || ((!holds_4_17_1 && (!holds_4_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_4_18_1 = c.bool_const("holds_4_18_1");
    b = ((holds_4_18_1 && holds_4_0_2 && holds_0_18_3)) || ((!holds_4_18_1 && (!holds_4_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_4_19_1 = c.bool_const("holds_4_19_1");
    b = ((holds_4_19_1 && holds_4_0_2 && holds_0_19_3)) || ((!holds_4_19_1 && (!holds_4_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_4_20_1 = c.bool_const("holds_4_20_1");
    b = ((holds_4_20_1 && holds_4_0_2 && holds_0_20_3)) || ((!holds_4_20_1 && (!holds_4_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_4_21_1 = c.bool_const("holds_4_21_1");
    b = ((holds_4_21_1 && holds_4_0_2 && holds_0_21_3)) || ((!holds_4_21_1 && (!holds_4_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_4_22_1 = c.bool_const("holds_4_22_1");
    b = ((holds_4_22_1 && holds_4_0_2 && holds_0_22_3)) || ((!holds_4_22_1 && (!holds_4_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_4_23_1 = c.bool_const("holds_4_23_1");
    b = ((holds_4_23_1 && holds_4_0_2 && holds_0_23_3)) || ((!holds_4_23_1 && (!holds_4_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_5_0_1 = c.bool_const("holds_5_0_1");
    b = ((holds_5_0_1 && holds_5_0_2 && holds_0_0_3)) || ((!holds_5_0_1 && (!holds_5_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_5_1_1 = c.bool_const("holds_5_1_1");
    b = ((holds_5_1_1 && holds_5_0_2 && holds_0_1_3)) || ((!holds_5_1_1 && (!holds_5_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_5_2_1 = c.bool_const("holds_5_2_1");
    b = ((holds_5_2_1 && holds_5_0_2 && holds_0_2_3)) || ((!holds_5_2_1 && (!holds_5_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_5_3_1 = c.bool_const("holds_5_3_1");
    b = ((holds_5_3_1 && holds_5_0_2 && holds_0_3_3)) || ((!holds_5_3_1 && (!holds_5_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_5_4_1 = c.bool_const("holds_5_4_1");
    b = ((holds_5_4_1 && holds_5_0_2 && holds_0_4_3)) || ((!holds_5_4_1 && (!holds_5_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_5_5_1 = c.bool_const("holds_5_5_1");
    b = ((holds_5_5_1 && holds_5_0_2 && holds_0_5_3)) || ((!holds_5_5_1 && (!holds_5_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_5_6_1 = c.bool_const("holds_5_6_1");
    b = ((holds_5_6_1 && holds_5_0_2 && holds_0_6_3)) || ((!holds_5_6_1 && (!holds_5_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_5_7_1 = c.bool_const("holds_5_7_1");
    b = ((holds_5_7_1 && holds_5_0_2 && holds_0_7_3)) || ((!holds_5_7_1 && (!holds_5_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_5_8_1 = c.bool_const("holds_5_8_1");
    b = ((holds_5_8_1 && holds_5_0_2 && holds_0_8_3)) || ((!holds_5_8_1 && (!holds_5_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_5_9_1 = c.bool_const("holds_5_9_1");
    b = ((holds_5_9_1 && holds_5_0_2 && holds_0_9_3)) || ((!holds_5_9_1 && (!holds_5_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_5_10_1 = c.bool_const("holds_5_10_1");
    b = ((holds_5_10_1 && holds_5_0_2 && holds_0_10_3)) || ((!holds_5_10_1 && (!holds_5_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_5_11_1 = c.bool_const("holds_5_11_1");
    b = ((holds_5_11_1 && holds_5_0_2 && holds_0_11_3)) || ((!holds_5_11_1 && (!holds_5_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_5_12_1 = c.bool_const("holds_5_12_1");
    b = ((holds_5_12_1 && holds_5_0_2 && holds_0_12_3)) || ((!holds_5_12_1 && (!holds_5_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_5_13_1 = c.bool_const("holds_5_13_1");
    b = ((holds_5_13_1 && holds_5_0_2 && holds_0_13_3)) || ((!holds_5_13_1 && (!holds_5_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_5_14_1 = c.bool_const("holds_5_14_1");
    b = ((holds_5_14_1 && holds_5_0_2 && holds_0_14_3)) || ((!holds_5_14_1 && (!holds_5_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_5_15_1 = c.bool_const("holds_5_15_1");
    b = ((holds_5_15_1 && holds_5_0_2 && holds_0_15_3)) || ((!holds_5_15_1 && (!holds_5_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_5_16_1 = c.bool_const("holds_5_16_1");
    b = ((holds_5_16_1 && holds_5_0_2 && holds_0_16_3)) || ((!holds_5_16_1 && (!holds_5_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_5_17_1 = c.bool_const("holds_5_17_1");
    b = ((holds_5_17_1 && holds_5_0_2 && holds_0_17_3)) || ((!holds_5_17_1 && (!holds_5_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_5_18_1 = c.bool_const("holds_5_18_1");
    b = ((holds_5_18_1 && holds_5_0_2 && holds_0_18_3)) || ((!holds_5_18_1 && (!holds_5_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_5_19_1 = c.bool_const("holds_5_19_1");
    b = ((holds_5_19_1 && holds_5_0_2 && holds_0_19_3)) || ((!holds_5_19_1 && (!holds_5_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_5_20_1 = c.bool_const("holds_5_20_1");
    b = ((holds_5_20_1 && holds_5_0_2 && holds_0_20_3)) || ((!holds_5_20_1 && (!holds_5_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_5_21_1 = c.bool_const("holds_5_21_1");
    b = ((holds_5_21_1 && holds_5_0_2 && holds_0_21_3)) || ((!holds_5_21_1 && (!holds_5_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_5_22_1 = c.bool_const("holds_5_22_1");
    b = ((holds_5_22_1 && holds_5_0_2 && holds_0_22_3)) || ((!holds_5_22_1 && (!holds_5_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_5_23_1 = c.bool_const("holds_5_23_1");
    b = ((holds_5_23_1 && holds_5_0_2 && holds_0_23_3)) || ((!holds_5_23_1 && (!holds_5_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_6_0_1 = c.bool_const("holds_6_0_1");
    b = ((holds_6_0_1 && holds_6_0_2 && holds_0_0_3)) || ((!holds_6_0_1 && (!holds_6_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_6_1_1 = c.bool_const("holds_6_1_1");
    b = ((holds_6_1_1 && holds_6_0_2 && holds_0_1_3)) || ((!holds_6_1_1 && (!holds_6_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_6_2_1 = c.bool_const("holds_6_2_1");
    b = ((holds_6_2_1 && holds_6_0_2 && holds_0_2_3)) || ((!holds_6_2_1 && (!holds_6_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_6_3_1 = c.bool_const("holds_6_3_1");
    b = ((holds_6_3_1 && holds_6_0_2 && holds_0_3_3)) || ((!holds_6_3_1 && (!holds_6_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_6_4_1 = c.bool_const("holds_6_4_1");
    b = ((holds_6_4_1 && holds_6_0_2 && holds_0_4_3)) || ((!holds_6_4_1 && (!holds_6_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_6_5_1 = c.bool_const("holds_6_5_1");
    b = ((holds_6_5_1 && holds_6_0_2 && holds_0_5_3)) || ((!holds_6_5_1 && (!holds_6_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_6_6_1 = c.bool_const("holds_6_6_1");
    b = ((holds_6_6_1 && holds_6_0_2 && holds_0_6_3)) || ((!holds_6_6_1 && (!holds_6_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_6_7_1 = c.bool_const("holds_6_7_1");
    b = ((holds_6_7_1 && holds_6_0_2 && holds_0_7_3)) || ((!holds_6_7_1 && (!holds_6_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_6_8_1 = c.bool_const("holds_6_8_1");
    b = ((holds_6_8_1 && holds_6_0_2 && holds_0_8_3)) || ((!holds_6_8_1 && (!holds_6_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_6_9_1 = c.bool_const("holds_6_9_1");
    b = ((holds_6_9_1 && holds_6_0_2 && holds_0_9_3)) || ((!holds_6_9_1 && (!holds_6_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_6_10_1 = c.bool_const("holds_6_10_1");
    b = ((holds_6_10_1 && holds_6_0_2 && holds_0_10_3)) || ((!holds_6_10_1 && (!holds_6_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_6_11_1 = c.bool_const("holds_6_11_1");
    b = ((holds_6_11_1 && holds_6_0_2 && holds_0_11_3)) || ((!holds_6_11_1 && (!holds_6_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_6_12_1 = c.bool_const("holds_6_12_1");
    b = ((holds_6_12_1 && holds_6_0_2 && holds_0_12_3)) || ((!holds_6_12_1 && (!holds_6_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_6_13_1 = c.bool_const("holds_6_13_1");
    b = ((holds_6_13_1 && holds_6_0_2 && holds_0_13_3)) || ((!holds_6_13_1 && (!holds_6_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_6_14_1 = c.bool_const("holds_6_14_1");
    b = ((holds_6_14_1 && holds_6_0_2 && holds_0_14_3)) || ((!holds_6_14_1 && (!holds_6_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_6_15_1 = c.bool_const("holds_6_15_1");
    b = ((holds_6_15_1 && holds_6_0_2 && holds_0_15_3)) || ((!holds_6_15_1 && (!holds_6_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_6_16_1 = c.bool_const("holds_6_16_1");
    b = ((holds_6_16_1 && holds_6_0_2 && holds_0_16_3)) || ((!holds_6_16_1 && (!holds_6_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_6_17_1 = c.bool_const("holds_6_17_1");
    b = ((holds_6_17_1 && holds_6_0_2 && holds_0_17_3)) || ((!holds_6_17_1 && (!holds_6_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_6_18_1 = c.bool_const("holds_6_18_1");
    b = ((holds_6_18_1 && holds_6_0_2 && holds_0_18_3)) || ((!holds_6_18_1 && (!holds_6_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_6_19_1 = c.bool_const("holds_6_19_1");
    b = ((holds_6_19_1 && holds_6_0_2 && holds_0_19_3)) || ((!holds_6_19_1 && (!holds_6_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_6_20_1 = c.bool_const("holds_6_20_1");
    b = ((holds_6_20_1 && holds_6_0_2 && holds_0_20_3)) || ((!holds_6_20_1 && (!holds_6_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_6_21_1 = c.bool_const("holds_6_21_1");
    b = ((holds_6_21_1 && holds_6_0_2 && holds_0_21_3)) || ((!holds_6_21_1 && (!holds_6_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_6_22_1 = c.bool_const("holds_6_22_1");
    b = ((holds_6_22_1 && holds_6_0_2 && holds_0_22_3)) || ((!holds_6_22_1 && (!holds_6_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_6_23_1 = c.bool_const("holds_6_23_1");
    b = ((holds_6_23_1 && holds_6_0_2 && holds_0_23_3)) || ((!holds_6_23_1 && (!holds_6_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_7_0_1 = c.bool_const("holds_7_0_1");
    b = ((holds_7_0_1 && holds_7_0_2 && holds_0_0_3)) || ((!holds_7_0_1 && (!holds_7_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_7_1_1 = c.bool_const("holds_7_1_1");
    b = ((holds_7_1_1 && holds_7_0_2 && holds_0_1_3)) || ((!holds_7_1_1 && (!holds_7_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_7_2_1 = c.bool_const("holds_7_2_1");
    b = ((holds_7_2_1 && holds_7_0_2 && holds_0_2_3)) || ((!holds_7_2_1 && (!holds_7_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_7_3_1 = c.bool_const("holds_7_3_1");
    b = ((holds_7_3_1 && holds_7_0_2 && holds_0_3_3)) || ((!holds_7_3_1 && (!holds_7_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_7_4_1 = c.bool_const("holds_7_4_1");
    b = ((holds_7_4_1 && holds_7_0_2 && holds_0_4_3)) || ((!holds_7_4_1 && (!holds_7_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_7_5_1 = c.bool_const("holds_7_5_1");
    b = ((holds_7_5_1 && holds_7_0_2 && holds_0_5_3)) || ((!holds_7_5_1 && (!holds_7_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_7_6_1 = c.bool_const("holds_7_6_1");
    b = ((holds_7_6_1 && holds_7_0_2 && holds_0_6_3)) || ((!holds_7_6_1 && (!holds_7_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_7_7_1 = c.bool_const("holds_7_7_1");
    b = ((holds_7_7_1 && holds_7_0_2 && holds_0_7_3)) || ((!holds_7_7_1 && (!holds_7_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_7_8_1 = c.bool_const("holds_7_8_1");
    b = ((holds_7_8_1 && holds_7_0_2 && holds_0_8_3)) || ((!holds_7_8_1 && (!holds_7_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_7_9_1 = c.bool_const("holds_7_9_1");
    b = ((holds_7_9_1 && holds_7_0_2 && holds_0_9_3)) || ((!holds_7_9_1 && (!holds_7_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_7_10_1 = c.bool_const("holds_7_10_1");
    b = ((holds_7_10_1 && holds_7_0_2 && holds_0_10_3)) || ((!holds_7_10_1 && (!holds_7_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_7_11_1 = c.bool_const("holds_7_11_1");
    b = ((holds_7_11_1 && holds_7_0_2 && holds_0_11_3)) || ((!holds_7_11_1 && (!holds_7_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_7_12_1 = c.bool_const("holds_7_12_1");
    b = ((holds_7_12_1 && holds_7_0_2 && holds_0_12_3)) || ((!holds_7_12_1 && (!holds_7_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_7_13_1 = c.bool_const("holds_7_13_1");
    b = ((holds_7_13_1 && holds_7_0_2 && holds_0_13_3)) || ((!holds_7_13_1 && (!holds_7_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_7_14_1 = c.bool_const("holds_7_14_1");
    b = ((holds_7_14_1 && holds_7_0_2 && holds_0_14_3)) || ((!holds_7_14_1 && (!holds_7_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_7_15_1 = c.bool_const("holds_7_15_1");
    b = ((holds_7_15_1 && holds_7_0_2 && holds_0_15_3)) || ((!holds_7_15_1 && (!holds_7_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_7_16_1 = c.bool_const("holds_7_16_1");
    b = ((holds_7_16_1 && holds_7_0_2 && holds_0_16_3)) || ((!holds_7_16_1 && (!holds_7_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_7_17_1 = c.bool_const("holds_7_17_1");
    b = ((holds_7_17_1 && holds_7_0_2 && holds_0_17_3)) || ((!holds_7_17_1 && (!holds_7_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_7_18_1 = c.bool_const("holds_7_18_1");
    b = ((holds_7_18_1 && holds_7_0_2 && holds_0_18_3)) || ((!holds_7_18_1 && (!holds_7_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_7_19_1 = c.bool_const("holds_7_19_1");
    b = ((holds_7_19_1 && holds_7_0_2 && holds_0_19_3)) || ((!holds_7_19_1 && (!holds_7_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_7_20_1 = c.bool_const("holds_7_20_1");
    b = ((holds_7_20_1 && holds_7_0_2 && holds_0_20_3)) || ((!holds_7_20_1 && (!holds_7_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_7_21_1 = c.bool_const("holds_7_21_1");
    b = ((holds_7_21_1 && holds_7_0_2 && holds_0_21_3)) || ((!holds_7_21_1 && (!holds_7_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_7_22_1 = c.bool_const("holds_7_22_1");
    b = ((holds_7_22_1 && holds_7_0_2 && holds_0_22_3)) || ((!holds_7_22_1 && (!holds_7_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_7_23_1 = c.bool_const("holds_7_23_1");
    b = ((holds_7_23_1 && holds_7_0_2 && holds_0_23_3)) || ((!holds_7_23_1 && (!holds_7_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_8_0_1 = c.bool_const("holds_8_0_1");
    b = ((holds_8_0_1 && holds_8_0_2 && holds_0_0_3)) || ((!holds_8_0_1 && (!holds_8_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_8_1_1 = c.bool_const("holds_8_1_1");
    b = ((holds_8_1_1 && holds_8_0_2 && holds_0_1_3)) || ((!holds_8_1_1 && (!holds_8_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_8_2_1 = c.bool_const("holds_8_2_1");
    b = ((holds_8_2_1 && holds_8_0_2 && holds_0_2_3)) || ((!holds_8_2_1 && (!holds_8_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_8_3_1 = c.bool_const("holds_8_3_1");
    b = ((holds_8_3_1 && holds_8_0_2 && holds_0_3_3)) || ((!holds_8_3_1 && (!holds_8_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_8_4_1 = c.bool_const("holds_8_4_1");
    b = ((holds_8_4_1 && holds_8_0_2 && holds_0_4_3)) || ((!holds_8_4_1 && (!holds_8_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_8_5_1 = c.bool_const("holds_8_5_1");
    b = ((holds_8_5_1 && holds_8_0_2 && holds_0_5_3)) || ((!holds_8_5_1 && (!holds_8_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_8_6_1 = c.bool_const("holds_8_6_1");
    b = ((holds_8_6_1 && holds_8_0_2 && holds_0_6_3)) || ((!holds_8_6_1 && (!holds_8_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_8_7_1 = c.bool_const("holds_8_7_1");
    b = ((holds_8_7_1 && holds_8_0_2 && holds_0_7_3)) || ((!holds_8_7_1 && (!holds_8_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_8_8_1 = c.bool_const("holds_8_8_1");
    b = ((holds_8_8_1 && holds_8_0_2 && holds_0_8_3)) || ((!holds_8_8_1 && (!holds_8_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_8_9_1 = c.bool_const("holds_8_9_1");
    b = ((holds_8_9_1 && holds_8_0_2 && holds_0_9_3)) || ((!holds_8_9_1 && (!holds_8_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_8_10_1 = c.bool_const("holds_8_10_1");
    b = ((holds_8_10_1 && holds_8_0_2 && holds_0_10_3)) || ((!holds_8_10_1 && (!holds_8_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_8_11_1 = c.bool_const("holds_8_11_1");
    b = ((holds_8_11_1 && holds_8_0_2 && holds_0_11_3)) || ((!holds_8_11_1 && (!holds_8_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_8_12_1 = c.bool_const("holds_8_12_1");
    b = ((holds_8_12_1 && holds_8_0_2 && holds_0_12_3)) || ((!holds_8_12_1 && (!holds_8_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_8_13_1 = c.bool_const("holds_8_13_1");
    b = ((holds_8_13_1 && holds_8_0_2 && holds_0_13_3)) || ((!holds_8_13_1 && (!holds_8_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_8_14_1 = c.bool_const("holds_8_14_1");
    b = ((holds_8_14_1 && holds_8_0_2 && holds_0_14_3)) || ((!holds_8_14_1 && (!holds_8_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_8_15_1 = c.bool_const("holds_8_15_1");
    b = ((holds_8_15_1 && holds_8_0_2 && holds_0_15_3)) || ((!holds_8_15_1 && (!holds_8_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_8_16_1 = c.bool_const("holds_8_16_1");
    b = ((holds_8_16_1 && holds_8_0_2 && holds_0_16_3)) || ((!holds_8_16_1 && (!holds_8_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_8_17_1 = c.bool_const("holds_8_17_1");
    b = ((holds_8_17_1 && holds_8_0_2 && holds_0_17_3)) || ((!holds_8_17_1 && (!holds_8_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_8_18_1 = c.bool_const("holds_8_18_1");
    b = ((holds_8_18_1 && holds_8_0_2 && holds_0_18_3)) || ((!holds_8_18_1 && (!holds_8_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_8_19_1 = c.bool_const("holds_8_19_1");
    b = ((holds_8_19_1 && holds_8_0_2 && holds_0_19_3)) || ((!holds_8_19_1 && (!holds_8_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_8_20_1 = c.bool_const("holds_8_20_1");
    b = ((holds_8_20_1 && holds_8_0_2 && holds_0_20_3)) || ((!holds_8_20_1 && (!holds_8_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_8_21_1 = c.bool_const("holds_8_21_1");
    b = ((holds_8_21_1 && holds_8_0_2 && holds_0_21_3)) || ((!holds_8_21_1 && (!holds_8_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_8_22_1 = c.bool_const("holds_8_22_1");
    b = ((holds_8_22_1 && holds_8_0_2 && holds_0_22_3)) || ((!holds_8_22_1 && (!holds_8_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_8_23_1 = c.bool_const("holds_8_23_1");
    b = ((holds_8_23_1 && holds_8_0_2 && holds_0_23_3)) || ((!holds_8_23_1 && (!holds_8_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_9_0_1 = c.bool_const("holds_9_0_1");
    b = ((holds_9_0_1 && holds_9_0_2 && holds_0_0_3)) || ((!holds_9_0_1 && (!holds_9_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_9_1_1 = c.bool_const("holds_9_1_1");
    b = ((holds_9_1_1 && holds_9_0_2 && holds_0_1_3)) || ((!holds_9_1_1 && (!holds_9_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_9_2_1 = c.bool_const("holds_9_2_1");
    b = ((holds_9_2_1 && holds_9_0_2 && holds_0_2_3)) || ((!holds_9_2_1 && (!holds_9_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_9_3_1 = c.bool_const("holds_9_3_1");
    b = ((holds_9_3_1 && holds_9_0_2 && holds_0_3_3)) || ((!holds_9_3_1 && (!holds_9_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_9_4_1 = c.bool_const("holds_9_4_1");
    b = ((holds_9_4_1 && holds_9_0_2 && holds_0_4_3)) || ((!holds_9_4_1 && (!holds_9_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_9_5_1 = c.bool_const("holds_9_5_1");
    b = ((holds_9_5_1 && holds_9_0_2 && holds_0_5_3)) || ((!holds_9_5_1 && (!holds_9_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_9_6_1 = c.bool_const("holds_9_6_1");
    b = ((holds_9_6_1 && holds_9_0_2 && holds_0_6_3)) || ((!holds_9_6_1 && (!holds_9_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_9_7_1 = c.bool_const("holds_9_7_1");
    b = ((holds_9_7_1 && holds_9_0_2 && holds_0_7_3)) || ((!holds_9_7_1 && (!holds_9_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_9_8_1 = c.bool_const("holds_9_8_1");
    b = ((holds_9_8_1 && holds_9_0_2 && holds_0_8_3)) || ((!holds_9_8_1 && (!holds_9_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_9_9_1 = c.bool_const("holds_9_9_1");
    b = ((holds_9_9_1 && holds_9_0_2 && holds_0_9_3)) || ((!holds_9_9_1 && (!holds_9_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_9_10_1 = c.bool_const("holds_9_10_1");
    b = ((holds_9_10_1 && holds_9_0_2 && holds_0_10_3)) || ((!holds_9_10_1 && (!holds_9_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_9_11_1 = c.bool_const("holds_9_11_1");
    b = ((holds_9_11_1 && holds_9_0_2 && holds_0_11_3)) || ((!holds_9_11_1 && (!holds_9_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_9_12_1 = c.bool_const("holds_9_12_1");
    b = ((holds_9_12_1 && holds_9_0_2 && holds_0_12_3)) || ((!holds_9_12_1 && (!holds_9_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_9_13_1 = c.bool_const("holds_9_13_1");
    b = ((holds_9_13_1 && holds_9_0_2 && holds_0_13_3)) || ((!holds_9_13_1 && (!holds_9_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_9_14_1 = c.bool_const("holds_9_14_1");
    b = ((holds_9_14_1 && holds_9_0_2 && holds_0_14_3)) || ((!holds_9_14_1 && (!holds_9_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_9_15_1 = c.bool_const("holds_9_15_1");
    b = ((holds_9_15_1 && holds_9_0_2 && holds_0_15_3)) || ((!holds_9_15_1 && (!holds_9_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_9_16_1 = c.bool_const("holds_9_16_1");
    b = ((holds_9_16_1 && holds_9_0_2 && holds_0_16_3)) || ((!holds_9_16_1 && (!holds_9_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_9_17_1 = c.bool_const("holds_9_17_1");
    b = ((holds_9_17_1 && holds_9_0_2 && holds_0_17_3)) || ((!holds_9_17_1 && (!holds_9_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_9_18_1 = c.bool_const("holds_9_18_1");
    b = ((holds_9_18_1 && holds_9_0_2 && holds_0_18_3)) || ((!holds_9_18_1 && (!holds_9_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_9_19_1 = c.bool_const("holds_9_19_1");
    b = ((holds_9_19_1 && holds_9_0_2 && holds_0_19_3)) || ((!holds_9_19_1 && (!holds_9_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_9_20_1 = c.bool_const("holds_9_20_1");
    b = ((holds_9_20_1 && holds_9_0_2 && holds_0_20_3)) || ((!holds_9_20_1 && (!holds_9_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_9_21_1 = c.bool_const("holds_9_21_1");
    b = ((holds_9_21_1 && holds_9_0_2 && holds_0_21_3)) || ((!holds_9_21_1 && (!holds_9_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_9_22_1 = c.bool_const("holds_9_22_1");
    b = ((holds_9_22_1 && holds_9_0_2 && holds_0_22_3)) || ((!holds_9_22_1 && (!holds_9_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_9_23_1 = c.bool_const("holds_9_23_1");
    b = ((holds_9_23_1 && holds_9_0_2 && holds_0_23_3)) || ((!holds_9_23_1 && (!holds_9_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_10_0_1 = c.bool_const("holds_10_0_1");
    b = ((holds_10_0_1 && holds_10_0_2 && holds_0_0_3)) || ((!holds_10_0_1 && (!holds_10_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_10_1_1 = c.bool_const("holds_10_1_1");
    b = ((holds_10_1_1 && holds_10_0_2 && holds_0_1_3)) || ((!holds_10_1_1 && (!holds_10_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_10_2_1 = c.bool_const("holds_10_2_1");
    b = ((holds_10_2_1 && holds_10_0_2 && holds_0_2_3)) || ((!holds_10_2_1 && (!holds_10_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_10_3_1 = c.bool_const("holds_10_3_1");
    b = ((holds_10_3_1 && holds_10_0_2 && holds_0_3_3)) || ((!holds_10_3_1 && (!holds_10_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_10_4_1 = c.bool_const("holds_10_4_1");
    b = ((holds_10_4_1 && holds_10_0_2 && holds_0_4_3)) || ((!holds_10_4_1 && (!holds_10_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_10_5_1 = c.bool_const("holds_10_5_1");
    b = ((holds_10_5_1 && holds_10_0_2 && holds_0_5_3)) || ((!holds_10_5_1 && (!holds_10_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_10_6_1 = c.bool_const("holds_10_6_1");
    b = ((holds_10_6_1 && holds_10_0_2 && holds_0_6_3)) || ((!holds_10_6_1 && (!holds_10_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_10_7_1 = c.bool_const("holds_10_7_1");
    b = ((holds_10_7_1 && holds_10_0_2 && holds_0_7_3)) || ((!holds_10_7_1 && (!holds_10_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_10_8_1 = c.bool_const("holds_10_8_1");
    b = ((holds_10_8_1 && holds_10_0_2 && holds_0_8_3)) || ((!holds_10_8_1 && (!holds_10_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_10_9_1 = c.bool_const("holds_10_9_1");
    b = ((holds_10_9_1 && holds_10_0_2 && holds_0_9_3)) || ((!holds_10_9_1 && (!holds_10_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_10_10_1 = c.bool_const("holds_10_10_1");
    b = ((holds_10_10_1 && holds_10_0_2 && holds_0_10_3)) || ((!holds_10_10_1 && (!holds_10_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_10_11_1 = c.bool_const("holds_10_11_1");
    b = ((holds_10_11_1 && holds_10_0_2 && holds_0_11_3)) || ((!holds_10_11_1 && (!holds_10_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_10_12_1 = c.bool_const("holds_10_12_1");
    b = ((holds_10_12_1 && holds_10_0_2 && holds_0_12_3)) || ((!holds_10_12_1 && (!holds_10_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_10_13_1 = c.bool_const("holds_10_13_1");
    b = ((holds_10_13_1 && holds_10_0_2 && holds_0_13_3)) || ((!holds_10_13_1 && (!holds_10_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_10_14_1 = c.bool_const("holds_10_14_1");
    b = ((holds_10_14_1 && holds_10_0_2 && holds_0_14_3)) || ((!holds_10_14_1 && (!holds_10_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_10_15_1 = c.bool_const("holds_10_15_1");
    b = ((holds_10_15_1 && holds_10_0_2 && holds_0_15_3)) || ((!holds_10_15_1 && (!holds_10_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_10_16_1 = c.bool_const("holds_10_16_1");
    b = ((holds_10_16_1 && holds_10_0_2 && holds_0_16_3)) || ((!holds_10_16_1 && (!holds_10_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_10_17_1 = c.bool_const("holds_10_17_1");
    b = ((holds_10_17_1 && holds_10_0_2 && holds_0_17_3)) || ((!holds_10_17_1 && (!holds_10_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_10_18_1 = c.bool_const("holds_10_18_1");
    b = ((holds_10_18_1 && holds_10_0_2 && holds_0_18_3)) || ((!holds_10_18_1 && (!holds_10_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_10_19_1 = c.bool_const("holds_10_19_1");
    b = ((holds_10_19_1 && holds_10_0_2 && holds_0_19_3)) || ((!holds_10_19_1 && (!holds_10_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_10_20_1 = c.bool_const("holds_10_20_1");
    b = ((holds_10_20_1 && holds_10_0_2 && holds_0_20_3)) || ((!holds_10_20_1 && (!holds_10_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_10_21_1 = c.bool_const("holds_10_21_1");
    b = ((holds_10_21_1 && holds_10_0_2 && holds_0_21_3)) || ((!holds_10_21_1 && (!holds_10_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_10_22_1 = c.bool_const("holds_10_22_1");
    b = ((holds_10_22_1 && holds_10_0_2 && holds_0_22_3)) || ((!holds_10_22_1 && (!holds_10_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_10_23_1 = c.bool_const("holds_10_23_1");
    b = ((holds_10_23_1 && holds_10_0_2 && holds_0_23_3)) || ((!holds_10_23_1 && (!holds_10_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_11_0_1 = c.bool_const("holds_11_0_1");
    b = ((holds_11_0_1 && holds_11_0_2 && holds_0_0_3)) || ((!holds_11_0_1 && (!holds_11_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_11_1_1 = c.bool_const("holds_11_1_1");
    b = ((holds_11_1_1 && holds_11_0_2 && holds_0_1_3)) || ((!holds_11_1_1 && (!holds_11_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_11_2_1 = c.bool_const("holds_11_2_1");
    b = ((holds_11_2_1 && holds_11_0_2 && holds_0_2_3)) || ((!holds_11_2_1 && (!holds_11_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_11_3_1 = c.bool_const("holds_11_3_1");
    b = ((holds_11_3_1 && holds_11_0_2 && holds_0_3_3)) || ((!holds_11_3_1 && (!holds_11_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_11_4_1 = c.bool_const("holds_11_4_1");
    b = ((holds_11_4_1 && holds_11_0_2 && holds_0_4_3)) || ((!holds_11_4_1 && (!holds_11_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_11_5_1 = c.bool_const("holds_11_5_1");
    b = ((holds_11_5_1 && holds_11_0_2 && holds_0_5_3)) || ((!holds_11_5_1 && (!holds_11_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_11_6_1 = c.bool_const("holds_11_6_1");
    b = ((holds_11_6_1 && holds_11_0_2 && holds_0_6_3)) || ((!holds_11_6_1 && (!holds_11_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_11_7_1 = c.bool_const("holds_11_7_1");
    b = ((holds_11_7_1 && holds_11_0_2 && holds_0_7_3)) || ((!holds_11_7_1 && (!holds_11_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_11_8_1 = c.bool_const("holds_11_8_1");
    b = ((holds_11_8_1 && holds_11_0_2 && holds_0_8_3)) || ((!holds_11_8_1 && (!holds_11_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_11_9_1 = c.bool_const("holds_11_9_1");
    b = ((holds_11_9_1 && holds_11_0_2 && holds_0_9_3)) || ((!holds_11_9_1 && (!holds_11_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_11_10_1 = c.bool_const("holds_11_10_1");
    b = ((holds_11_10_1 && holds_11_0_2 && holds_0_10_3)) || ((!holds_11_10_1 && (!holds_11_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_11_11_1 = c.bool_const("holds_11_11_1");
    b = ((holds_11_11_1 && holds_11_0_2 && holds_0_11_3)) || ((!holds_11_11_1 && (!holds_11_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_11_12_1 = c.bool_const("holds_11_12_1");
    b = ((holds_11_12_1 && holds_11_0_2 && holds_0_12_3)) || ((!holds_11_12_1 && (!holds_11_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_11_13_1 = c.bool_const("holds_11_13_1");
    b = ((holds_11_13_1 && holds_11_0_2 && holds_0_13_3)) || ((!holds_11_13_1 && (!holds_11_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_11_14_1 = c.bool_const("holds_11_14_1");
    b = ((holds_11_14_1 && holds_11_0_2 && holds_0_14_3)) || ((!holds_11_14_1 && (!holds_11_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_11_15_1 = c.bool_const("holds_11_15_1");
    b = ((holds_11_15_1 && holds_11_0_2 && holds_0_15_3)) || ((!holds_11_15_1 && (!holds_11_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_11_16_1 = c.bool_const("holds_11_16_1");
    b = ((holds_11_16_1 && holds_11_0_2 && holds_0_16_3)) || ((!holds_11_16_1 && (!holds_11_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_11_17_1 = c.bool_const("holds_11_17_1");
    b = ((holds_11_17_1 && holds_11_0_2 && holds_0_17_3)) || ((!holds_11_17_1 && (!holds_11_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_11_18_1 = c.bool_const("holds_11_18_1");
    b = ((holds_11_18_1 && holds_11_0_2 && holds_0_18_3)) || ((!holds_11_18_1 && (!holds_11_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_11_19_1 = c.bool_const("holds_11_19_1");
    b = ((holds_11_19_1 && holds_11_0_2 && holds_0_19_3)) || ((!holds_11_19_1 && (!holds_11_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_11_20_1 = c.bool_const("holds_11_20_1");
    b = ((holds_11_20_1 && holds_11_0_2 && holds_0_20_3)) || ((!holds_11_20_1 && (!holds_11_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_11_21_1 = c.bool_const("holds_11_21_1");
    b = ((holds_11_21_1 && holds_11_0_2 && holds_0_21_3)) || ((!holds_11_21_1 && (!holds_11_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_11_22_1 = c.bool_const("holds_11_22_1");
    b = ((holds_11_22_1 && holds_11_0_2 && holds_0_22_3)) || ((!holds_11_22_1 && (!holds_11_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_11_23_1 = c.bool_const("holds_11_23_1");
    b = ((holds_11_23_1 && holds_11_0_2 && holds_0_23_3)) || ((!holds_11_23_1 && (!holds_11_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_12_0_1 = c.bool_const("holds_12_0_1");
    b = ((holds_12_0_1 && holds_12_0_2 && holds_0_0_3)) || ((!holds_12_0_1 && (!holds_12_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_12_1_1 = c.bool_const("holds_12_1_1");
    b = ((holds_12_1_1 && holds_12_0_2 && holds_0_1_3)) || ((!holds_12_1_1 && (!holds_12_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_12_2_1 = c.bool_const("holds_12_2_1");
    b = ((holds_12_2_1 && holds_12_0_2 && holds_0_2_3)) || ((!holds_12_2_1 && (!holds_12_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_12_3_1 = c.bool_const("holds_12_3_1");
    b = ((holds_12_3_1 && holds_12_0_2 && holds_0_3_3)) || ((!holds_12_3_1 && (!holds_12_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_12_4_1 = c.bool_const("holds_12_4_1");
    b = ((holds_12_4_1 && holds_12_0_2 && holds_0_4_3)) || ((!holds_12_4_1 && (!holds_12_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_12_5_1 = c.bool_const("holds_12_5_1");
    b = ((holds_12_5_1 && holds_12_0_2 && holds_0_5_3)) || ((!holds_12_5_1 && (!holds_12_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_12_6_1 = c.bool_const("holds_12_6_1");
    b = ((holds_12_6_1 && holds_12_0_2 && holds_0_6_3)) || ((!holds_12_6_1 && (!holds_12_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_12_7_1 = c.bool_const("holds_12_7_1");
    b = ((holds_12_7_1 && holds_12_0_2 && holds_0_7_3)) || ((!holds_12_7_1 && (!holds_12_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_12_8_1 = c.bool_const("holds_12_8_1");
    b = ((holds_12_8_1 && holds_12_0_2 && holds_0_8_3)) || ((!holds_12_8_1 && (!holds_12_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_12_9_1 = c.bool_const("holds_12_9_1");
    b = ((holds_12_9_1 && holds_12_0_2 && holds_0_9_3)) || ((!holds_12_9_1 && (!holds_12_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_12_10_1 = c.bool_const("holds_12_10_1");
    b = ((holds_12_10_1 && holds_12_0_2 && holds_0_10_3)) || ((!holds_12_10_1 && (!holds_12_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_12_11_1 = c.bool_const("holds_12_11_1");
    b = ((holds_12_11_1 && holds_12_0_2 && holds_0_11_3)) || ((!holds_12_11_1 && (!holds_12_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_12_12_1 = c.bool_const("holds_12_12_1");
    b = ((holds_12_12_1 && holds_12_0_2 && holds_0_12_3)) || ((!holds_12_12_1 && (!holds_12_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_12_13_1 = c.bool_const("holds_12_13_1");
    b = ((holds_12_13_1 && holds_12_0_2 && holds_0_13_3)) || ((!holds_12_13_1 && (!holds_12_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_12_14_1 = c.bool_const("holds_12_14_1");
    b = ((holds_12_14_1 && holds_12_0_2 && holds_0_14_3)) || ((!holds_12_14_1 && (!holds_12_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_12_15_1 = c.bool_const("holds_12_15_1");
    b = ((holds_12_15_1 && holds_12_0_2 && holds_0_15_3)) || ((!holds_12_15_1 && (!holds_12_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_12_16_1 = c.bool_const("holds_12_16_1");
    b = ((holds_12_16_1 && holds_12_0_2 && holds_0_16_3)) || ((!holds_12_16_1 && (!holds_12_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_12_17_1 = c.bool_const("holds_12_17_1");
    b = ((holds_12_17_1 && holds_12_0_2 && holds_0_17_3)) || ((!holds_12_17_1 && (!holds_12_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_12_18_1 = c.bool_const("holds_12_18_1");
    b = ((holds_12_18_1 && holds_12_0_2 && holds_0_18_3)) || ((!holds_12_18_1 && (!holds_12_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_12_19_1 = c.bool_const("holds_12_19_1");
    b = ((holds_12_19_1 && holds_12_0_2 && holds_0_19_3)) || ((!holds_12_19_1 && (!holds_12_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_12_20_1 = c.bool_const("holds_12_20_1");
    b = ((holds_12_20_1 && holds_12_0_2 && holds_0_20_3)) || ((!holds_12_20_1 && (!holds_12_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_12_21_1 = c.bool_const("holds_12_21_1");
    b = ((holds_12_21_1 && holds_12_0_2 && holds_0_21_3)) || ((!holds_12_21_1 && (!holds_12_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_12_22_1 = c.bool_const("holds_12_22_1");
    b = ((holds_12_22_1 && holds_12_0_2 && holds_0_22_3)) || ((!holds_12_22_1 && (!holds_12_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_12_23_1 = c.bool_const("holds_12_23_1");
    b = ((holds_12_23_1 && holds_12_0_2 && holds_0_23_3)) || ((!holds_12_23_1 && (!holds_12_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_13_0_1 = c.bool_const("holds_13_0_1");
    b = ((holds_13_0_1 && holds_13_0_2 && holds_0_0_3)) || ((!holds_13_0_1 && (!holds_13_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_13_1_1 = c.bool_const("holds_13_1_1");
    b = ((holds_13_1_1 && holds_13_0_2 && holds_0_1_3)) || ((!holds_13_1_1 && (!holds_13_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_13_2_1 = c.bool_const("holds_13_2_1");
    b = ((holds_13_2_1 && holds_13_0_2 && holds_0_2_3)) || ((!holds_13_2_1 && (!holds_13_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_13_3_1 = c.bool_const("holds_13_3_1");
    b = ((holds_13_3_1 && holds_13_0_2 && holds_0_3_3)) || ((!holds_13_3_1 && (!holds_13_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_13_4_1 = c.bool_const("holds_13_4_1");
    b = ((holds_13_4_1 && holds_13_0_2 && holds_0_4_3)) || ((!holds_13_4_1 && (!holds_13_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_13_5_1 = c.bool_const("holds_13_5_1");
    b = ((holds_13_5_1 && holds_13_0_2 && holds_0_5_3)) || ((!holds_13_5_1 && (!holds_13_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_13_6_1 = c.bool_const("holds_13_6_1");
    b = ((holds_13_6_1 && holds_13_0_2 && holds_0_6_3)) || ((!holds_13_6_1 && (!holds_13_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_13_7_1 = c.bool_const("holds_13_7_1");
    b = ((holds_13_7_1 && holds_13_0_2 && holds_0_7_3)) || ((!holds_13_7_1 && (!holds_13_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_13_8_1 = c.bool_const("holds_13_8_1");
    b = ((holds_13_8_1 && holds_13_0_2 && holds_0_8_3)) || ((!holds_13_8_1 && (!holds_13_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_13_9_1 = c.bool_const("holds_13_9_1");
    b = ((holds_13_9_1 && holds_13_0_2 && holds_0_9_3)) || ((!holds_13_9_1 && (!holds_13_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_13_10_1 = c.bool_const("holds_13_10_1");
    b = ((holds_13_10_1 && holds_13_0_2 && holds_0_10_3)) || ((!holds_13_10_1 && (!holds_13_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_13_11_1 = c.bool_const("holds_13_11_1");
    b = ((holds_13_11_1 && holds_13_0_2 && holds_0_11_3)) || ((!holds_13_11_1 && (!holds_13_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_13_12_1 = c.bool_const("holds_13_12_1");
    b = ((holds_13_12_1 && holds_13_0_2 && holds_0_12_3)) || ((!holds_13_12_1 && (!holds_13_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_13_13_1 = c.bool_const("holds_13_13_1");
    b = ((holds_13_13_1 && holds_13_0_2 && holds_0_13_3)) || ((!holds_13_13_1 && (!holds_13_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_13_14_1 = c.bool_const("holds_13_14_1");
    b = ((holds_13_14_1 && holds_13_0_2 && holds_0_14_3)) || ((!holds_13_14_1 && (!holds_13_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_13_15_1 = c.bool_const("holds_13_15_1");
    b = ((holds_13_15_1 && holds_13_0_2 && holds_0_15_3)) || ((!holds_13_15_1 && (!holds_13_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_13_16_1 = c.bool_const("holds_13_16_1");
    b = ((holds_13_16_1 && holds_13_0_2 && holds_0_16_3)) || ((!holds_13_16_1 && (!holds_13_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_13_17_1 = c.bool_const("holds_13_17_1");
    b = ((holds_13_17_1 && holds_13_0_2 && holds_0_17_3)) || ((!holds_13_17_1 && (!holds_13_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_13_18_1 = c.bool_const("holds_13_18_1");
    b = ((holds_13_18_1 && holds_13_0_2 && holds_0_18_3)) || ((!holds_13_18_1 && (!holds_13_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_13_19_1 = c.bool_const("holds_13_19_1");
    b = ((holds_13_19_1 && holds_13_0_2 && holds_0_19_3)) || ((!holds_13_19_1 && (!holds_13_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_13_20_1 = c.bool_const("holds_13_20_1");
    b = ((holds_13_20_1 && holds_13_0_2 && holds_0_20_3)) || ((!holds_13_20_1 && (!holds_13_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_13_21_1 = c.bool_const("holds_13_21_1");
    b = ((holds_13_21_1 && holds_13_0_2 && holds_0_21_3)) || ((!holds_13_21_1 && (!holds_13_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_13_22_1 = c.bool_const("holds_13_22_1");
    b = ((holds_13_22_1 && holds_13_0_2 && holds_0_22_3)) || ((!holds_13_22_1 && (!holds_13_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_13_23_1 = c.bool_const("holds_13_23_1");
    b = ((holds_13_23_1 && holds_13_0_2 && holds_0_23_3)) || ((!holds_13_23_1 && (!holds_13_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_14_0_1 = c.bool_const("holds_14_0_1");
    b = ((holds_14_0_1 && holds_14_0_2 && holds_0_0_3)) || ((!holds_14_0_1 && (!holds_14_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_14_1_1 = c.bool_const("holds_14_1_1");
    b = ((holds_14_1_1 && holds_14_0_2 && holds_0_1_3)) || ((!holds_14_1_1 && (!holds_14_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_14_2_1 = c.bool_const("holds_14_2_1");
    b = ((holds_14_2_1 && holds_14_0_2 && holds_0_2_3)) || ((!holds_14_2_1 && (!holds_14_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_14_3_1 = c.bool_const("holds_14_3_1");
    b = ((holds_14_3_1 && holds_14_0_2 && holds_0_3_3)) || ((!holds_14_3_1 && (!holds_14_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_14_4_1 = c.bool_const("holds_14_4_1");
    b = ((holds_14_4_1 && holds_14_0_2 && holds_0_4_3)) || ((!holds_14_4_1 && (!holds_14_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_14_5_1 = c.bool_const("holds_14_5_1");
    b = ((holds_14_5_1 && holds_14_0_2 && holds_0_5_3)) || ((!holds_14_5_1 && (!holds_14_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_14_6_1 = c.bool_const("holds_14_6_1");
    b = ((holds_14_6_1 && holds_14_0_2 && holds_0_6_3)) || ((!holds_14_6_1 && (!holds_14_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_14_7_1 = c.bool_const("holds_14_7_1");
    b = ((holds_14_7_1 && holds_14_0_2 && holds_0_7_3)) || ((!holds_14_7_1 && (!holds_14_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_14_8_1 = c.bool_const("holds_14_8_1");
    b = ((holds_14_8_1 && holds_14_0_2 && holds_0_8_3)) || ((!holds_14_8_1 && (!holds_14_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_14_9_1 = c.bool_const("holds_14_9_1");
    b = ((holds_14_9_1 && holds_14_0_2 && holds_0_9_3)) || ((!holds_14_9_1 && (!holds_14_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_14_10_1 = c.bool_const("holds_14_10_1");
    b = ((holds_14_10_1 && holds_14_0_2 && holds_0_10_3)) || ((!holds_14_10_1 && (!holds_14_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_14_11_1 = c.bool_const("holds_14_11_1");
    b = ((holds_14_11_1 && holds_14_0_2 && holds_0_11_3)) || ((!holds_14_11_1 && (!holds_14_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_14_12_1 = c.bool_const("holds_14_12_1");
    b = ((holds_14_12_1 && holds_14_0_2 && holds_0_12_3)) || ((!holds_14_12_1 && (!holds_14_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_14_13_1 = c.bool_const("holds_14_13_1");
    b = ((holds_14_13_1 && holds_14_0_2 && holds_0_13_3)) || ((!holds_14_13_1 && (!holds_14_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_14_14_1 = c.bool_const("holds_14_14_1");
    b = ((holds_14_14_1 && holds_14_0_2 && holds_0_14_3)) || ((!holds_14_14_1 && (!holds_14_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_14_15_1 = c.bool_const("holds_14_15_1");
    b = ((holds_14_15_1 && holds_14_0_2 && holds_0_15_3)) || ((!holds_14_15_1 && (!holds_14_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_14_16_1 = c.bool_const("holds_14_16_1");
    b = ((holds_14_16_1 && holds_14_0_2 && holds_0_16_3)) || ((!holds_14_16_1 && (!holds_14_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_14_17_1 = c.bool_const("holds_14_17_1");
    b = ((holds_14_17_1 && holds_14_0_2 && holds_0_17_3)) || ((!holds_14_17_1 && (!holds_14_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_14_18_1 = c.bool_const("holds_14_18_1");
    b = ((holds_14_18_1 && holds_14_0_2 && holds_0_18_3)) || ((!holds_14_18_1 && (!holds_14_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_14_19_1 = c.bool_const("holds_14_19_1");
    b = ((holds_14_19_1 && holds_14_0_2 && holds_0_19_3)) || ((!holds_14_19_1 && (!holds_14_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_14_20_1 = c.bool_const("holds_14_20_1");
    b = ((holds_14_20_1 && holds_14_0_2 && holds_0_20_3)) || ((!holds_14_20_1 && (!holds_14_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_14_21_1 = c.bool_const("holds_14_21_1");
    b = ((holds_14_21_1 && holds_14_0_2 && holds_0_21_3)) || ((!holds_14_21_1 && (!holds_14_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_14_22_1 = c.bool_const("holds_14_22_1");
    b = ((holds_14_22_1 && holds_14_0_2 && holds_0_22_3)) || ((!holds_14_22_1 && (!holds_14_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_14_23_1 = c.bool_const("holds_14_23_1");
    b = ((holds_14_23_1 && holds_14_0_2 && holds_0_23_3)) || ((!holds_14_23_1 && (!holds_14_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_15_0_1 = c.bool_const("holds_15_0_1");
    b = ((holds_15_0_1 && holds_15_0_2 && holds_0_0_3)) || ((!holds_15_0_1 && (!holds_15_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_15_1_1 = c.bool_const("holds_15_1_1");
    b = ((holds_15_1_1 && holds_15_0_2 && holds_0_1_3)) || ((!holds_15_1_1 && (!holds_15_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_15_2_1 = c.bool_const("holds_15_2_1");
    b = ((holds_15_2_1 && holds_15_0_2 && holds_0_2_3)) || ((!holds_15_2_1 && (!holds_15_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_15_3_1 = c.bool_const("holds_15_3_1");
    b = ((holds_15_3_1 && holds_15_0_2 && holds_0_3_3)) || ((!holds_15_3_1 && (!holds_15_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_15_4_1 = c.bool_const("holds_15_4_1");
    b = ((holds_15_4_1 && holds_15_0_2 && holds_0_4_3)) || ((!holds_15_4_1 && (!holds_15_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_15_5_1 = c.bool_const("holds_15_5_1");
    b = ((holds_15_5_1 && holds_15_0_2 && holds_0_5_3)) || ((!holds_15_5_1 && (!holds_15_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_15_6_1 = c.bool_const("holds_15_6_1");
    b = ((holds_15_6_1 && holds_15_0_2 && holds_0_6_3)) || ((!holds_15_6_1 && (!holds_15_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_15_7_1 = c.bool_const("holds_15_7_1");
    b = ((holds_15_7_1 && holds_15_0_2 && holds_0_7_3)) || ((!holds_15_7_1 && (!holds_15_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_15_8_1 = c.bool_const("holds_15_8_1");
    b = ((holds_15_8_1 && holds_15_0_2 && holds_0_8_3)) || ((!holds_15_8_1 && (!holds_15_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_15_9_1 = c.bool_const("holds_15_9_1");
    b = ((holds_15_9_1 && holds_15_0_2 && holds_0_9_3)) || ((!holds_15_9_1 && (!holds_15_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_15_10_1 = c.bool_const("holds_15_10_1");
    b = ((holds_15_10_1 && holds_15_0_2 && holds_0_10_3)) || ((!holds_15_10_1 && (!holds_15_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_15_11_1 = c.bool_const("holds_15_11_1");
    b = ((holds_15_11_1 && holds_15_0_2 && holds_0_11_3)) || ((!holds_15_11_1 && (!holds_15_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_15_12_1 = c.bool_const("holds_15_12_1");
    b = ((holds_15_12_1 && holds_15_0_2 && holds_0_12_3)) || ((!holds_15_12_1 && (!holds_15_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_15_13_1 = c.bool_const("holds_15_13_1");
    b = ((holds_15_13_1 && holds_15_0_2 && holds_0_13_3)) || ((!holds_15_13_1 && (!holds_15_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_15_14_1 = c.bool_const("holds_15_14_1");
    b = ((holds_15_14_1 && holds_15_0_2 && holds_0_14_3)) || ((!holds_15_14_1 && (!holds_15_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_15_15_1 = c.bool_const("holds_15_15_1");
    b = ((holds_15_15_1 && holds_15_0_2 && holds_0_15_3)) || ((!holds_15_15_1 && (!holds_15_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_15_16_1 = c.bool_const("holds_15_16_1");
    b = ((holds_15_16_1 && holds_15_0_2 && holds_0_16_3)) || ((!holds_15_16_1 && (!holds_15_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_15_17_1 = c.bool_const("holds_15_17_1");
    b = ((holds_15_17_1 && holds_15_0_2 && holds_0_17_3)) || ((!holds_15_17_1 && (!holds_15_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_15_18_1 = c.bool_const("holds_15_18_1");
    b = ((holds_15_18_1 && holds_15_0_2 && holds_0_18_3)) || ((!holds_15_18_1 && (!holds_15_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_15_19_1 = c.bool_const("holds_15_19_1");
    b = ((holds_15_19_1 && holds_15_0_2 && holds_0_19_3)) || ((!holds_15_19_1 && (!holds_15_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_15_20_1 = c.bool_const("holds_15_20_1");
    b = ((holds_15_20_1 && holds_15_0_2 && holds_0_20_3)) || ((!holds_15_20_1 && (!holds_15_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_15_21_1 = c.bool_const("holds_15_21_1");
    b = ((holds_15_21_1 && holds_15_0_2 && holds_0_21_3)) || ((!holds_15_21_1 && (!holds_15_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_15_22_1 = c.bool_const("holds_15_22_1");
    b = ((holds_15_22_1 && holds_15_0_2 && holds_0_22_3)) || ((!holds_15_22_1 && (!holds_15_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_15_23_1 = c.bool_const("holds_15_23_1");
    b = ((holds_15_23_1 && holds_15_0_2 && holds_0_23_3)) || ((!holds_15_23_1 && (!holds_15_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_16_0_1 = c.bool_const("holds_16_0_1");
    b = ((holds_16_0_1 && holds_16_0_2 && holds_0_0_3)) || ((!holds_16_0_1 && (!holds_16_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_16_1_1 = c.bool_const("holds_16_1_1");
    b = ((holds_16_1_1 && holds_16_0_2 && holds_0_1_3)) || ((!holds_16_1_1 && (!holds_16_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_16_2_1 = c.bool_const("holds_16_2_1");
    b = ((holds_16_2_1 && holds_16_0_2 && holds_0_2_3)) || ((!holds_16_2_1 && (!holds_16_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_16_3_1 = c.bool_const("holds_16_3_1");
    b = ((holds_16_3_1 && holds_16_0_2 && holds_0_3_3)) || ((!holds_16_3_1 && (!holds_16_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_16_4_1 = c.bool_const("holds_16_4_1");
    b = ((holds_16_4_1 && holds_16_0_2 && holds_0_4_3)) || ((!holds_16_4_1 && (!holds_16_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_16_5_1 = c.bool_const("holds_16_5_1");
    b = ((holds_16_5_1 && holds_16_0_2 && holds_0_5_3)) || ((!holds_16_5_1 && (!holds_16_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_16_6_1 = c.bool_const("holds_16_6_1");
    b = ((holds_16_6_1 && holds_16_0_2 && holds_0_6_3)) || ((!holds_16_6_1 && (!holds_16_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_16_7_1 = c.bool_const("holds_16_7_1");
    b = ((holds_16_7_1 && holds_16_0_2 && holds_0_7_3)) || ((!holds_16_7_1 && (!holds_16_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_16_8_1 = c.bool_const("holds_16_8_1");
    b = ((holds_16_8_1 && holds_16_0_2 && holds_0_8_3)) || ((!holds_16_8_1 && (!holds_16_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_16_9_1 = c.bool_const("holds_16_9_1");
    b = ((holds_16_9_1 && holds_16_0_2 && holds_0_9_3)) || ((!holds_16_9_1 && (!holds_16_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_16_10_1 = c.bool_const("holds_16_10_1");
    b = ((holds_16_10_1 && holds_16_0_2 && holds_0_10_3)) || ((!holds_16_10_1 && (!holds_16_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_16_11_1 = c.bool_const("holds_16_11_1");
    b = ((holds_16_11_1 && holds_16_0_2 && holds_0_11_3)) || ((!holds_16_11_1 && (!holds_16_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_16_12_1 = c.bool_const("holds_16_12_1");
    b = ((holds_16_12_1 && holds_16_0_2 && holds_0_12_3)) || ((!holds_16_12_1 && (!holds_16_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_16_13_1 = c.bool_const("holds_16_13_1");
    b = ((holds_16_13_1 && holds_16_0_2 && holds_0_13_3)) || ((!holds_16_13_1 && (!holds_16_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_16_14_1 = c.bool_const("holds_16_14_1");
    b = ((holds_16_14_1 && holds_16_0_2 && holds_0_14_3)) || ((!holds_16_14_1 && (!holds_16_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_16_15_1 = c.bool_const("holds_16_15_1");
    b = ((holds_16_15_1 && holds_16_0_2 && holds_0_15_3)) || ((!holds_16_15_1 && (!holds_16_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_16_16_1 = c.bool_const("holds_16_16_1");
    b = ((holds_16_16_1 && holds_16_0_2 && holds_0_16_3)) || ((!holds_16_16_1 && (!holds_16_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_16_17_1 = c.bool_const("holds_16_17_1");
    b = ((holds_16_17_1 && holds_16_0_2 && holds_0_17_3)) || ((!holds_16_17_1 && (!holds_16_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_16_18_1 = c.bool_const("holds_16_18_1");
    b = ((holds_16_18_1 && holds_16_0_2 && holds_0_18_3)) || ((!holds_16_18_1 && (!holds_16_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_16_19_1 = c.bool_const("holds_16_19_1");
    b = ((holds_16_19_1 && holds_16_0_2 && holds_0_19_3)) || ((!holds_16_19_1 && (!holds_16_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_16_20_1 = c.bool_const("holds_16_20_1");
    b = ((holds_16_20_1 && holds_16_0_2 && holds_0_20_3)) || ((!holds_16_20_1 && (!holds_16_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_16_21_1 = c.bool_const("holds_16_21_1");
    b = ((holds_16_21_1 && holds_16_0_2 && holds_0_21_3)) || ((!holds_16_21_1 && (!holds_16_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_16_22_1 = c.bool_const("holds_16_22_1");
    b = ((holds_16_22_1 && holds_16_0_2 && holds_0_22_3)) || ((!holds_16_22_1 && (!holds_16_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_16_23_1 = c.bool_const("holds_16_23_1");
    b = ((holds_16_23_1 && holds_16_0_2 && holds_0_23_3)) || ((!holds_16_23_1 && (!holds_16_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_17_0_1 = c.bool_const("holds_17_0_1");
    b = ((holds_17_0_1 && holds_17_0_2 && holds_0_0_3)) || ((!holds_17_0_1 && (!holds_17_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_17_1_1 = c.bool_const("holds_17_1_1");
    b = ((holds_17_1_1 && holds_17_0_2 && holds_0_1_3)) || ((!holds_17_1_1 && (!holds_17_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_17_2_1 = c.bool_const("holds_17_2_1");
    b = ((holds_17_2_1 && holds_17_0_2 && holds_0_2_3)) || ((!holds_17_2_1 && (!holds_17_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_17_3_1 = c.bool_const("holds_17_3_1");
    b = ((holds_17_3_1 && holds_17_0_2 && holds_0_3_3)) || ((!holds_17_3_1 && (!holds_17_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_17_4_1 = c.bool_const("holds_17_4_1");
    b = ((holds_17_4_1 && holds_17_0_2 && holds_0_4_3)) || ((!holds_17_4_1 && (!holds_17_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_17_5_1 = c.bool_const("holds_17_5_1");
    b = ((holds_17_5_1 && holds_17_0_2 && holds_0_5_3)) || ((!holds_17_5_1 && (!holds_17_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_17_6_1 = c.bool_const("holds_17_6_1");
    b = ((holds_17_6_1 && holds_17_0_2 && holds_0_6_3)) || ((!holds_17_6_1 && (!holds_17_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_17_7_1 = c.bool_const("holds_17_7_1");
    b = ((holds_17_7_1 && holds_17_0_2 && holds_0_7_3)) || ((!holds_17_7_1 && (!holds_17_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_17_8_1 = c.bool_const("holds_17_8_1");
    b = ((holds_17_8_1 && holds_17_0_2 && holds_0_8_3)) || ((!holds_17_8_1 && (!holds_17_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_17_9_1 = c.bool_const("holds_17_9_1");
    b = ((holds_17_9_1 && holds_17_0_2 && holds_0_9_3)) || ((!holds_17_9_1 && (!holds_17_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_17_10_1 = c.bool_const("holds_17_10_1");
    b = ((holds_17_10_1 && holds_17_0_2 && holds_0_10_3)) || ((!holds_17_10_1 && (!holds_17_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_17_11_1 = c.bool_const("holds_17_11_1");
    b = ((holds_17_11_1 && holds_17_0_2 && holds_0_11_3)) || ((!holds_17_11_1 && (!holds_17_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_17_12_1 = c.bool_const("holds_17_12_1");
    b = ((holds_17_12_1 && holds_17_0_2 && holds_0_12_3)) || ((!holds_17_12_1 && (!holds_17_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_17_13_1 = c.bool_const("holds_17_13_1");
    b = ((holds_17_13_1 && holds_17_0_2 && holds_0_13_3)) || ((!holds_17_13_1 && (!holds_17_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_17_14_1 = c.bool_const("holds_17_14_1");
    b = ((holds_17_14_1 && holds_17_0_2 && holds_0_14_3)) || ((!holds_17_14_1 && (!holds_17_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_17_15_1 = c.bool_const("holds_17_15_1");
    b = ((holds_17_15_1 && holds_17_0_2 && holds_0_15_3)) || ((!holds_17_15_1 && (!holds_17_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_17_16_1 = c.bool_const("holds_17_16_1");
    b = ((holds_17_16_1 && holds_17_0_2 && holds_0_16_3)) || ((!holds_17_16_1 && (!holds_17_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_17_17_1 = c.bool_const("holds_17_17_1");
    b = ((holds_17_17_1 && holds_17_0_2 && holds_0_17_3)) || ((!holds_17_17_1 && (!holds_17_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_17_18_1 = c.bool_const("holds_17_18_1");
    b = ((holds_17_18_1 && holds_17_0_2 && holds_0_18_3)) || ((!holds_17_18_1 && (!holds_17_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_17_19_1 = c.bool_const("holds_17_19_1");
    b = ((holds_17_19_1 && holds_17_0_2 && holds_0_19_3)) || ((!holds_17_19_1 && (!holds_17_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_17_20_1 = c.bool_const("holds_17_20_1");
    b = ((holds_17_20_1 && holds_17_0_2 && holds_0_20_3)) || ((!holds_17_20_1 && (!holds_17_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_17_21_1 = c.bool_const("holds_17_21_1");
    b = ((holds_17_21_1 && holds_17_0_2 && holds_0_21_3)) || ((!holds_17_21_1 && (!holds_17_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_17_22_1 = c.bool_const("holds_17_22_1");
    b = ((holds_17_22_1 && holds_17_0_2 && holds_0_22_3)) || ((!holds_17_22_1 && (!holds_17_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_17_23_1 = c.bool_const("holds_17_23_1");
    b = ((holds_17_23_1 && holds_17_0_2 && holds_0_23_3)) || ((!holds_17_23_1 && (!holds_17_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_18_0_1 = c.bool_const("holds_18_0_1");
    b = ((holds_18_0_1 && holds_18_0_2 && holds_0_0_3)) || ((!holds_18_0_1 && (!holds_18_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_18_1_1 = c.bool_const("holds_18_1_1");
    b = ((holds_18_1_1 && holds_18_0_2 && holds_0_1_3)) || ((!holds_18_1_1 && (!holds_18_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_18_2_1 = c.bool_const("holds_18_2_1");
    b = ((holds_18_2_1 && holds_18_0_2 && holds_0_2_3)) || ((!holds_18_2_1 && (!holds_18_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_18_3_1 = c.bool_const("holds_18_3_1");
    b = ((holds_18_3_1 && holds_18_0_2 && holds_0_3_3)) || ((!holds_18_3_1 && (!holds_18_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_18_4_1 = c.bool_const("holds_18_4_1");
    b = ((holds_18_4_1 && holds_18_0_2 && holds_0_4_3)) || ((!holds_18_4_1 && (!holds_18_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_18_5_1 = c.bool_const("holds_18_5_1");
    b = ((holds_18_5_1 && holds_18_0_2 && holds_0_5_3)) || ((!holds_18_5_1 && (!holds_18_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_18_6_1 = c.bool_const("holds_18_6_1");
    b = ((holds_18_6_1 && holds_18_0_2 && holds_0_6_3)) || ((!holds_18_6_1 && (!holds_18_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_18_7_1 = c.bool_const("holds_18_7_1");
    b = ((holds_18_7_1 && holds_18_0_2 && holds_0_7_3)) || ((!holds_18_7_1 && (!holds_18_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_18_8_1 = c.bool_const("holds_18_8_1");
    b = ((holds_18_8_1 && holds_18_0_2 && holds_0_8_3)) || ((!holds_18_8_1 && (!holds_18_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_18_9_1 = c.bool_const("holds_18_9_1");
    b = ((holds_18_9_1 && holds_18_0_2 && holds_0_9_3)) || ((!holds_18_9_1 && (!holds_18_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_18_10_1 = c.bool_const("holds_18_10_1");
    b = ((holds_18_10_1 && holds_18_0_2 && holds_0_10_3)) || ((!holds_18_10_1 && (!holds_18_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_18_11_1 = c.bool_const("holds_18_11_1");
    b = ((holds_18_11_1 && holds_18_0_2 && holds_0_11_3)) || ((!holds_18_11_1 && (!holds_18_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_18_12_1 = c.bool_const("holds_18_12_1");
    b = ((holds_18_12_1 && holds_18_0_2 && holds_0_12_3)) || ((!holds_18_12_1 && (!holds_18_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_18_13_1 = c.bool_const("holds_18_13_1");
    b = ((holds_18_13_1 && holds_18_0_2 && holds_0_13_3)) || ((!holds_18_13_1 && (!holds_18_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_18_14_1 = c.bool_const("holds_18_14_1");
    b = ((holds_18_14_1 && holds_18_0_2 && holds_0_14_3)) || ((!holds_18_14_1 && (!holds_18_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_18_15_1 = c.bool_const("holds_18_15_1");
    b = ((holds_18_15_1 && holds_18_0_2 && holds_0_15_3)) || ((!holds_18_15_1 && (!holds_18_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_18_16_1 = c.bool_const("holds_18_16_1");
    b = ((holds_18_16_1 && holds_18_0_2 && holds_0_16_3)) || ((!holds_18_16_1 && (!holds_18_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_18_17_1 = c.bool_const("holds_18_17_1");
    b = ((holds_18_17_1 && holds_18_0_2 && holds_0_17_3)) || ((!holds_18_17_1 && (!holds_18_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_18_18_1 = c.bool_const("holds_18_18_1");
    b = ((holds_18_18_1 && holds_18_0_2 && holds_0_18_3)) || ((!holds_18_18_1 && (!holds_18_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_18_19_1 = c.bool_const("holds_18_19_1");
    b = ((holds_18_19_1 && holds_18_0_2 && holds_0_19_3)) || ((!holds_18_19_1 && (!holds_18_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_18_20_1 = c.bool_const("holds_18_20_1");
    b = ((holds_18_20_1 && holds_18_0_2 && holds_0_20_3)) || ((!holds_18_20_1 && (!holds_18_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_18_21_1 = c.bool_const("holds_18_21_1");
    b = ((holds_18_21_1 && holds_18_0_2 && holds_0_21_3)) || ((!holds_18_21_1 && (!holds_18_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_18_22_1 = c.bool_const("holds_18_22_1");
    b = ((holds_18_22_1 && holds_18_0_2 && holds_0_22_3)) || ((!holds_18_22_1 && (!holds_18_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_18_23_1 = c.bool_const("holds_18_23_1");
    b = ((holds_18_23_1 && holds_18_0_2 && holds_0_23_3)) || ((!holds_18_23_1 && (!holds_18_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_19_0_1 = c.bool_const("holds_19_0_1");
    b = ((holds_19_0_1 && holds_19_0_2 && holds_0_0_3)) || ((!holds_19_0_1 && (!holds_19_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_19_1_1 = c.bool_const("holds_19_1_1");
    b = ((holds_19_1_1 && holds_19_0_2 && holds_0_1_3)) || ((!holds_19_1_1 && (!holds_19_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_19_2_1 = c.bool_const("holds_19_2_1");
    b = ((holds_19_2_1 && holds_19_0_2 && holds_0_2_3)) || ((!holds_19_2_1 && (!holds_19_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_19_3_1 = c.bool_const("holds_19_3_1");
    b = ((holds_19_3_1 && holds_19_0_2 && holds_0_3_3)) || ((!holds_19_3_1 && (!holds_19_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_19_4_1 = c.bool_const("holds_19_4_1");
    b = ((holds_19_4_1 && holds_19_0_2 && holds_0_4_3)) || ((!holds_19_4_1 && (!holds_19_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_19_5_1 = c.bool_const("holds_19_5_1");
    b = ((holds_19_5_1 && holds_19_0_2 && holds_0_5_3)) || ((!holds_19_5_1 && (!holds_19_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_19_6_1 = c.bool_const("holds_19_6_1");
    b = ((holds_19_6_1 && holds_19_0_2 && holds_0_6_3)) || ((!holds_19_6_1 && (!holds_19_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_19_7_1 = c.bool_const("holds_19_7_1");
    b = ((holds_19_7_1 && holds_19_0_2 && holds_0_7_3)) || ((!holds_19_7_1 && (!holds_19_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_19_8_1 = c.bool_const("holds_19_8_1");
    b = ((holds_19_8_1 && holds_19_0_2 && holds_0_8_3)) || ((!holds_19_8_1 && (!holds_19_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_19_9_1 = c.bool_const("holds_19_9_1");
    b = ((holds_19_9_1 && holds_19_0_2 && holds_0_9_3)) || ((!holds_19_9_1 && (!holds_19_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_19_10_1 = c.bool_const("holds_19_10_1");
    b = ((holds_19_10_1 && holds_19_0_2 && holds_0_10_3)) || ((!holds_19_10_1 && (!holds_19_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_19_11_1 = c.bool_const("holds_19_11_1");
    b = ((holds_19_11_1 && holds_19_0_2 && holds_0_11_3)) || ((!holds_19_11_1 && (!holds_19_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_19_12_1 = c.bool_const("holds_19_12_1");
    b = ((holds_19_12_1 && holds_19_0_2 && holds_0_12_3)) || ((!holds_19_12_1 && (!holds_19_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_19_13_1 = c.bool_const("holds_19_13_1");
    b = ((holds_19_13_1 && holds_19_0_2 && holds_0_13_3)) || ((!holds_19_13_1 && (!holds_19_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_19_14_1 = c.bool_const("holds_19_14_1");
    b = ((holds_19_14_1 && holds_19_0_2 && holds_0_14_3)) || ((!holds_19_14_1 && (!holds_19_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_19_15_1 = c.bool_const("holds_19_15_1");
    b = ((holds_19_15_1 && holds_19_0_2 && holds_0_15_3)) || ((!holds_19_15_1 && (!holds_19_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_19_16_1 = c.bool_const("holds_19_16_1");
    b = ((holds_19_16_1 && holds_19_0_2 && holds_0_16_3)) || ((!holds_19_16_1 && (!holds_19_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_19_17_1 = c.bool_const("holds_19_17_1");
    b = ((holds_19_17_1 && holds_19_0_2 && holds_0_17_3)) || ((!holds_19_17_1 && (!holds_19_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_19_18_1 = c.bool_const("holds_19_18_1");
    b = ((holds_19_18_1 && holds_19_0_2 && holds_0_18_3)) || ((!holds_19_18_1 && (!holds_19_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_19_19_1 = c.bool_const("holds_19_19_1");
    b = ((holds_19_19_1 && holds_19_0_2 && holds_0_19_3)) || ((!holds_19_19_1 && (!holds_19_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_19_20_1 = c.bool_const("holds_19_20_1");
    b = ((holds_19_20_1 && holds_19_0_2 && holds_0_20_3)) || ((!holds_19_20_1 && (!holds_19_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_19_21_1 = c.bool_const("holds_19_21_1");
    b = ((holds_19_21_1 && holds_19_0_2 && holds_0_21_3)) || ((!holds_19_21_1 && (!holds_19_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_19_22_1 = c.bool_const("holds_19_22_1");
    b = ((holds_19_22_1 && holds_19_0_2 && holds_0_22_3)) || ((!holds_19_22_1 && (!holds_19_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_19_23_1 = c.bool_const("holds_19_23_1");
    b = ((holds_19_23_1 && holds_19_0_2 && holds_0_23_3)) || ((!holds_19_23_1 && (!holds_19_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_20_0_1 = c.bool_const("holds_20_0_1");
    b = ((holds_20_0_1 && holds_20_0_2 && holds_0_0_3)) || ((!holds_20_0_1 && (!holds_20_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_20_1_1 = c.bool_const("holds_20_1_1");
    b = ((holds_20_1_1 && holds_20_0_2 && holds_0_1_3)) || ((!holds_20_1_1 && (!holds_20_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_20_2_1 = c.bool_const("holds_20_2_1");
    b = ((holds_20_2_1 && holds_20_0_2 && holds_0_2_3)) || ((!holds_20_2_1 && (!holds_20_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_20_3_1 = c.bool_const("holds_20_3_1");
    b = ((holds_20_3_1 && holds_20_0_2 && holds_0_3_3)) || ((!holds_20_3_1 && (!holds_20_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_20_4_1 = c.bool_const("holds_20_4_1");
    b = ((holds_20_4_1 && holds_20_0_2 && holds_0_4_3)) || ((!holds_20_4_1 && (!holds_20_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_20_5_1 = c.bool_const("holds_20_5_1");
    b = ((holds_20_5_1 && holds_20_0_2 && holds_0_5_3)) || ((!holds_20_5_1 && (!holds_20_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_20_6_1 = c.bool_const("holds_20_6_1");
    b = ((holds_20_6_1 && holds_20_0_2 && holds_0_6_3)) || ((!holds_20_6_1 && (!holds_20_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_20_7_1 = c.bool_const("holds_20_7_1");
    b = ((holds_20_7_1 && holds_20_0_2 && holds_0_7_3)) || ((!holds_20_7_1 && (!holds_20_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_20_8_1 = c.bool_const("holds_20_8_1");
    b = ((holds_20_8_1 && holds_20_0_2 && holds_0_8_3)) || ((!holds_20_8_1 && (!holds_20_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_20_9_1 = c.bool_const("holds_20_9_1");
    b = ((holds_20_9_1 && holds_20_0_2 && holds_0_9_3)) || ((!holds_20_9_1 && (!holds_20_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_20_10_1 = c.bool_const("holds_20_10_1");
    b = ((holds_20_10_1 && holds_20_0_2 && holds_0_10_3)) || ((!holds_20_10_1 && (!holds_20_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_20_11_1 = c.bool_const("holds_20_11_1");
    b = ((holds_20_11_1 && holds_20_0_2 && holds_0_11_3)) || ((!holds_20_11_1 && (!holds_20_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_20_12_1 = c.bool_const("holds_20_12_1");
    b = ((holds_20_12_1 && holds_20_0_2 && holds_0_12_3)) || ((!holds_20_12_1 && (!holds_20_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_20_13_1 = c.bool_const("holds_20_13_1");
    b = ((holds_20_13_1 && holds_20_0_2 && holds_0_13_3)) || ((!holds_20_13_1 && (!holds_20_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_20_14_1 = c.bool_const("holds_20_14_1");
    b = ((holds_20_14_1 && holds_20_0_2 && holds_0_14_3)) || ((!holds_20_14_1 && (!holds_20_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_20_15_1 = c.bool_const("holds_20_15_1");
    b = ((holds_20_15_1 && holds_20_0_2 && holds_0_15_3)) || ((!holds_20_15_1 && (!holds_20_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_20_16_1 = c.bool_const("holds_20_16_1");
    b = ((holds_20_16_1 && holds_20_0_2 && holds_0_16_3)) || ((!holds_20_16_1 && (!holds_20_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_20_17_1 = c.bool_const("holds_20_17_1");
    b = ((holds_20_17_1 && holds_20_0_2 && holds_0_17_3)) || ((!holds_20_17_1 && (!holds_20_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_20_18_1 = c.bool_const("holds_20_18_1");
    b = ((holds_20_18_1 && holds_20_0_2 && holds_0_18_3)) || ((!holds_20_18_1 && (!holds_20_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_20_19_1 = c.bool_const("holds_20_19_1");
    b = ((holds_20_19_1 && holds_20_0_2 && holds_0_19_3)) || ((!holds_20_19_1 && (!holds_20_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_20_20_1 = c.bool_const("holds_20_20_1");
    b = ((holds_20_20_1 && holds_20_0_2 && holds_0_20_3)) || ((!holds_20_20_1 && (!holds_20_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_20_21_1 = c.bool_const("holds_20_21_1");
    b = ((holds_20_21_1 && holds_20_0_2 && holds_0_21_3)) || ((!holds_20_21_1 && (!holds_20_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_20_22_1 = c.bool_const("holds_20_22_1");
    b = ((holds_20_22_1 && holds_20_0_2 && holds_0_22_3)) || ((!holds_20_22_1 && (!holds_20_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_20_23_1 = c.bool_const("holds_20_23_1");
    b = ((holds_20_23_1 && holds_20_0_2 && holds_0_23_3)) || ((!holds_20_23_1 && (!holds_20_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_21_0_1 = c.bool_const("holds_21_0_1");
    b = ((holds_21_0_1 && holds_21_0_2 && holds_0_0_3)) || ((!holds_21_0_1 && (!holds_21_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_21_1_1 = c.bool_const("holds_21_1_1");
    b = ((holds_21_1_1 && holds_21_0_2 && holds_0_1_3)) || ((!holds_21_1_1 && (!holds_21_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_21_2_1 = c.bool_const("holds_21_2_1");
    b = ((holds_21_2_1 && holds_21_0_2 && holds_0_2_3)) || ((!holds_21_2_1 && (!holds_21_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_21_3_1 = c.bool_const("holds_21_3_1");
    b = ((holds_21_3_1 && holds_21_0_2 && holds_0_3_3)) || ((!holds_21_3_1 && (!holds_21_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_21_4_1 = c.bool_const("holds_21_4_1");
    b = ((holds_21_4_1 && holds_21_0_2 && holds_0_4_3)) || ((!holds_21_4_1 && (!holds_21_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_21_5_1 = c.bool_const("holds_21_5_1");
    b = ((holds_21_5_1 && holds_21_0_2 && holds_0_5_3)) || ((!holds_21_5_1 && (!holds_21_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_21_6_1 = c.bool_const("holds_21_6_1");
    b = ((holds_21_6_1 && holds_21_0_2 && holds_0_6_3)) || ((!holds_21_6_1 && (!holds_21_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_21_7_1 = c.bool_const("holds_21_7_1");
    b = ((holds_21_7_1 && holds_21_0_2 && holds_0_7_3)) || ((!holds_21_7_1 && (!holds_21_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_21_8_1 = c.bool_const("holds_21_8_1");
    b = ((holds_21_8_1 && holds_21_0_2 && holds_0_8_3)) || ((!holds_21_8_1 && (!holds_21_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_21_9_1 = c.bool_const("holds_21_9_1");
    b = ((holds_21_9_1 && holds_21_0_2 && holds_0_9_3)) || ((!holds_21_9_1 && (!holds_21_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_21_10_1 = c.bool_const("holds_21_10_1");
    b = ((holds_21_10_1 && holds_21_0_2 && holds_0_10_3)) || ((!holds_21_10_1 && (!holds_21_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_21_11_1 = c.bool_const("holds_21_11_1");
    b = ((holds_21_11_1 && holds_21_0_2 && holds_0_11_3)) || ((!holds_21_11_1 && (!holds_21_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_21_12_1 = c.bool_const("holds_21_12_1");
    b = ((holds_21_12_1 && holds_21_0_2 && holds_0_12_3)) || ((!holds_21_12_1 && (!holds_21_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_21_13_1 = c.bool_const("holds_21_13_1");
    b = ((holds_21_13_1 && holds_21_0_2 && holds_0_13_3)) || ((!holds_21_13_1 && (!holds_21_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_21_14_1 = c.bool_const("holds_21_14_1");
    b = ((holds_21_14_1 && holds_21_0_2 && holds_0_14_3)) || ((!holds_21_14_1 && (!holds_21_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_21_15_1 = c.bool_const("holds_21_15_1");
    b = ((holds_21_15_1 && holds_21_0_2 && holds_0_15_3)) || ((!holds_21_15_1 && (!holds_21_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_21_16_1 = c.bool_const("holds_21_16_1");
    b = ((holds_21_16_1 && holds_21_0_2 && holds_0_16_3)) || ((!holds_21_16_1 && (!holds_21_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_21_17_1 = c.bool_const("holds_21_17_1");
    b = ((holds_21_17_1 && holds_21_0_2 && holds_0_17_3)) || ((!holds_21_17_1 && (!holds_21_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_21_18_1 = c.bool_const("holds_21_18_1");
    b = ((holds_21_18_1 && holds_21_0_2 && holds_0_18_3)) || ((!holds_21_18_1 && (!holds_21_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_21_19_1 = c.bool_const("holds_21_19_1");
    b = ((holds_21_19_1 && holds_21_0_2 && holds_0_19_3)) || ((!holds_21_19_1 && (!holds_21_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_21_20_1 = c.bool_const("holds_21_20_1");
    b = ((holds_21_20_1 && holds_21_0_2 && holds_0_20_3)) || ((!holds_21_20_1 && (!holds_21_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_21_21_1 = c.bool_const("holds_21_21_1");
    b = ((holds_21_21_1 && holds_21_0_2 && holds_0_21_3)) || ((!holds_21_21_1 && (!holds_21_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_21_22_1 = c.bool_const("holds_21_22_1");
    b = ((holds_21_22_1 && holds_21_0_2 && holds_0_22_3)) || ((!holds_21_22_1 && (!holds_21_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_21_23_1 = c.bool_const("holds_21_23_1");
    b = ((holds_21_23_1 && holds_21_0_2 && holds_0_23_3)) || ((!holds_21_23_1 && (!holds_21_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_22_0_1 = c.bool_const("holds_22_0_1");
    b = ((holds_22_0_1 && holds_22_0_2 && holds_0_0_3)) || ((!holds_22_0_1 && (!holds_22_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_22_1_1 = c.bool_const("holds_22_1_1");
    b = ((holds_22_1_1 && holds_22_0_2 && holds_0_1_3)) || ((!holds_22_1_1 && (!holds_22_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_22_2_1 = c.bool_const("holds_22_2_1");
    b = ((holds_22_2_1 && holds_22_0_2 && holds_0_2_3)) || ((!holds_22_2_1 && (!holds_22_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_22_3_1 = c.bool_const("holds_22_3_1");
    b = ((holds_22_3_1 && holds_22_0_2 && holds_0_3_3)) || ((!holds_22_3_1 && (!holds_22_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_22_4_1 = c.bool_const("holds_22_4_1");
    b = ((holds_22_4_1 && holds_22_0_2 && holds_0_4_3)) || ((!holds_22_4_1 && (!holds_22_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_22_5_1 = c.bool_const("holds_22_5_1");
    b = ((holds_22_5_1 && holds_22_0_2 && holds_0_5_3)) || ((!holds_22_5_1 && (!holds_22_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_22_6_1 = c.bool_const("holds_22_6_1");
    b = ((holds_22_6_1 && holds_22_0_2 && holds_0_6_3)) || ((!holds_22_6_1 && (!holds_22_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_22_7_1 = c.bool_const("holds_22_7_1");
    b = ((holds_22_7_1 && holds_22_0_2 && holds_0_7_3)) || ((!holds_22_7_1 && (!holds_22_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_22_8_1 = c.bool_const("holds_22_8_1");
    b = ((holds_22_8_1 && holds_22_0_2 && holds_0_8_3)) || ((!holds_22_8_1 && (!holds_22_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_22_9_1 = c.bool_const("holds_22_9_1");
    b = ((holds_22_9_1 && holds_22_0_2 && holds_0_9_3)) || ((!holds_22_9_1 && (!holds_22_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_22_10_1 = c.bool_const("holds_22_10_1");
    b = ((holds_22_10_1 && holds_22_0_2 && holds_0_10_3)) || ((!holds_22_10_1 && (!holds_22_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_22_11_1 = c.bool_const("holds_22_11_1");
    b = ((holds_22_11_1 && holds_22_0_2 && holds_0_11_3)) || ((!holds_22_11_1 && (!holds_22_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_22_12_1 = c.bool_const("holds_22_12_1");
    b = ((holds_22_12_1 && holds_22_0_2 && holds_0_12_3)) || ((!holds_22_12_1 && (!holds_22_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_22_13_1 = c.bool_const("holds_22_13_1");
    b = ((holds_22_13_1 && holds_22_0_2 && holds_0_13_3)) || ((!holds_22_13_1 && (!holds_22_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_22_14_1 = c.bool_const("holds_22_14_1");
    b = ((holds_22_14_1 && holds_22_0_2 && holds_0_14_3)) || ((!holds_22_14_1 && (!holds_22_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_22_15_1 = c.bool_const("holds_22_15_1");
    b = ((holds_22_15_1 && holds_22_0_2 && holds_0_15_3)) || ((!holds_22_15_1 && (!holds_22_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_22_16_1 = c.bool_const("holds_22_16_1");
    b = ((holds_22_16_1 && holds_22_0_2 && holds_0_16_3)) || ((!holds_22_16_1 && (!holds_22_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_22_17_1 = c.bool_const("holds_22_17_1");
    b = ((holds_22_17_1 && holds_22_0_2 && holds_0_17_3)) || ((!holds_22_17_1 && (!holds_22_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_22_18_1 = c.bool_const("holds_22_18_1");
    b = ((holds_22_18_1 && holds_22_0_2 && holds_0_18_3)) || ((!holds_22_18_1 && (!holds_22_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_22_19_1 = c.bool_const("holds_22_19_1");
    b = ((holds_22_19_1 && holds_22_0_2 && holds_0_19_3)) || ((!holds_22_19_1 && (!holds_22_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_22_20_1 = c.bool_const("holds_22_20_1");
    b = ((holds_22_20_1 && holds_22_0_2 && holds_0_20_3)) || ((!holds_22_20_1 && (!holds_22_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_22_21_1 = c.bool_const("holds_22_21_1");
    b = ((holds_22_21_1 && holds_22_0_2 && holds_0_21_3)) || ((!holds_22_21_1 && (!holds_22_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_22_22_1 = c.bool_const("holds_22_22_1");
    b = ((holds_22_22_1 && holds_22_0_2 && holds_0_22_3)) || ((!holds_22_22_1 && (!holds_22_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_22_23_1 = c.bool_const("holds_22_23_1");
    b = ((holds_22_23_1 && holds_22_0_2 && holds_0_23_3)) || ((!holds_22_23_1 && (!holds_22_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_23_0_1 = c.bool_const("holds_23_0_1");
    b = ((holds_23_0_1 && holds_23_0_2 && holds_0_0_3)) || ((!holds_23_0_1 && (!holds_23_0_2 || !holds_0_0_3)));
    s.add(b);
    expr holds_23_1_1 = c.bool_const("holds_23_1_1");
    b = ((holds_23_1_1 && holds_23_0_2 && holds_0_1_3)) || ((!holds_23_1_1 && (!holds_23_0_2 || !holds_0_1_3)));
    s.add(b);
    expr holds_23_2_1 = c.bool_const("holds_23_2_1");
    b = ((holds_23_2_1 && holds_23_0_2 && holds_0_2_3)) || ((!holds_23_2_1 && (!holds_23_0_2 || !holds_0_2_3)));
    s.add(b);
    expr holds_23_3_1 = c.bool_const("holds_23_3_1");
    b = ((holds_23_3_1 && holds_23_0_2 && holds_0_3_3)) || ((!holds_23_3_1 && (!holds_23_0_2 || !holds_0_3_3)));
    s.add(b);
    expr holds_23_4_1 = c.bool_const("holds_23_4_1");
    b = ((holds_23_4_1 && holds_23_0_2 && holds_0_4_3)) || ((!holds_23_4_1 && (!holds_23_0_2 || !holds_0_4_3)));
    s.add(b);
    expr holds_23_5_1 = c.bool_const("holds_23_5_1");
    b = ((holds_23_5_1 && holds_23_0_2 && holds_0_5_3)) || ((!holds_23_5_1 && (!holds_23_0_2 || !holds_0_5_3)));
    s.add(b);
    expr holds_23_6_1 = c.bool_const("holds_23_6_1");
    b = ((holds_23_6_1 && holds_23_0_2 && holds_0_6_3)) || ((!holds_23_6_1 && (!holds_23_0_2 || !holds_0_6_3)));
    s.add(b);
    expr holds_23_7_1 = c.bool_const("holds_23_7_1");
    b = ((holds_23_7_1 && holds_23_0_2 && holds_0_7_3)) || ((!holds_23_7_1 && (!holds_23_0_2 || !holds_0_7_3)));
    s.add(b);
    expr holds_23_8_1 = c.bool_const("holds_23_8_1");
    b = ((holds_23_8_1 && holds_23_0_2 && holds_0_8_3)) || ((!holds_23_8_1 && (!holds_23_0_2 || !holds_0_8_3)));
    s.add(b);
    expr holds_23_9_1 = c.bool_const("holds_23_9_1");
    b = ((holds_23_9_1 && holds_23_0_2 && holds_0_9_3)) || ((!holds_23_9_1 && (!holds_23_0_2 || !holds_0_9_3)));
    s.add(b);
    expr holds_23_10_1 = c.bool_const("holds_23_10_1");
    b = ((holds_23_10_1 && holds_23_0_2 && holds_0_10_3)) || ((!holds_23_10_1 && (!holds_23_0_2 || !holds_0_10_3)));
    s.add(b);
    expr holds_23_11_1 = c.bool_const("holds_23_11_1");
    b = ((holds_23_11_1 && holds_23_0_2 && holds_0_11_3)) || ((!holds_23_11_1 && (!holds_23_0_2 || !holds_0_11_3)));
    s.add(b);
    expr holds_23_12_1 = c.bool_const("holds_23_12_1");
    b = ((holds_23_12_1 && holds_23_0_2 && holds_0_12_3)) || ((!holds_23_12_1 && (!holds_23_0_2 || !holds_0_12_3)));
    s.add(b);
    expr holds_23_13_1 = c.bool_const("holds_23_13_1");
    b = ((holds_23_13_1 && holds_23_0_2 && holds_0_13_3)) || ((!holds_23_13_1 && (!holds_23_0_2 || !holds_0_13_3)));
    s.add(b);
    expr holds_23_14_1 = c.bool_const("holds_23_14_1");
    b = ((holds_23_14_1 && holds_23_0_2 && holds_0_14_3)) || ((!holds_23_14_1 && (!holds_23_0_2 || !holds_0_14_3)));
    s.add(b);
    expr holds_23_15_1 = c.bool_const("holds_23_15_1");
    b = ((holds_23_15_1 && holds_23_0_2 && holds_0_15_3)) || ((!holds_23_15_1 && (!holds_23_0_2 || !holds_0_15_3)));
    s.add(b);
    expr holds_23_16_1 = c.bool_const("holds_23_16_1");
    b = ((holds_23_16_1 && holds_23_0_2 && holds_0_16_3)) || ((!holds_23_16_1 && (!holds_23_0_2 || !holds_0_16_3)));
    s.add(b);
    expr holds_23_17_1 = c.bool_const("holds_23_17_1");
    b = ((holds_23_17_1 && holds_23_0_2 && holds_0_17_3)) || ((!holds_23_17_1 && (!holds_23_0_2 || !holds_0_17_3)));
    s.add(b);
    expr holds_23_18_1 = c.bool_const("holds_23_18_1");
    b = ((holds_23_18_1 && holds_23_0_2 && holds_0_18_3)) || ((!holds_23_18_1 && (!holds_23_0_2 || !holds_0_18_3)));
    s.add(b);
    expr holds_23_19_1 = c.bool_const("holds_23_19_1");
    b = ((holds_23_19_1 && holds_23_0_2 && holds_0_19_3)) || ((!holds_23_19_1 && (!holds_23_0_2 || !holds_0_19_3)));
    s.add(b);
    expr holds_23_20_1 = c.bool_const("holds_23_20_1");
    b = ((holds_23_20_1 && holds_23_0_2 && holds_0_20_3)) || ((!holds_23_20_1 && (!holds_23_0_2 || !holds_0_20_3)));
    s.add(b);
    expr holds_23_21_1 = c.bool_const("holds_23_21_1");
    b = ((holds_23_21_1 && holds_23_0_2 && holds_0_21_3)) || ((!holds_23_21_1 && (!holds_23_0_2 || !holds_0_21_3)));
    s.add(b);
    expr holds_23_22_1 = c.bool_const("holds_23_22_1");
    b = ((holds_23_22_1 && holds_23_0_2 && holds_0_22_3)) || ((!holds_23_22_1 && (!holds_23_0_2 || !holds_0_22_3)));
    s.add(b);
    expr holds_23_23_1 = c.bool_const("holds_23_23_1");
    b = ((holds_23_23_1 && holds_23_0_2 && holds_0_23_3)) || ((!holds_23_23_1 && (!holds_23_0_2 || !holds_0_23_3)));
    s.add(b);
    expr holds_0_0_8 = c.bool_const("holds_0_0_8");
    expr holds_1_0_8 = c.bool_const("holds_1_0_8");
    expr holds_2_0_8 = c.bool_const("holds_2_0_8");
    expr holds_3_0_8 = c.bool_const("holds_3_0_8");
    expr holds_4_0_8 = c.bool_const("holds_4_0_8");
    expr holds_5_0_8 = c.bool_const("holds_5_0_8");
    expr holds_6_0_8 = c.bool_const("holds_6_0_8");
    expr holds_7_0_8 = c.bool_const("holds_7_0_8");
    expr holds_8_0_8 = c.bool_const("holds_8_0_8");
    expr holds_9_0_8 = c.bool_const("holds_9_0_8");
    expr holds_10_0_8 = c.bool_const("holds_10_0_8");
    expr holds_11_0_8 = c.bool_const("holds_11_0_8");
    expr holds_12_0_8 = c.bool_const("holds_12_0_8");
    expr holds_13_0_8 = c.bool_const("holds_13_0_8");
    expr holds_14_0_8 = c.bool_const("holds_14_0_8");
    expr holds_15_0_8 = c.bool_const("holds_15_0_8");
    expr holds_16_0_8 = c.bool_const("holds_16_0_8");
    expr holds_17_0_8 = c.bool_const("holds_17_0_8");
    expr holds_18_0_8 = c.bool_const("holds_18_0_8");
    expr holds_19_0_8 = c.bool_const("holds_19_0_8");
    expr holds_20_0_8 = c.bool_const("holds_20_0_8");
    expr holds_21_0_8 = c.bool_const("holds_21_0_8");
    expr holds_22_0_8 = c.bool_const("holds_22_0_8");
    expr holds_23_0_8 = c.bool_const("holds_23_0_8");
    b = ((holds_11_0_8 && holds_15_0_8) && (!holds_16_0_8 && !holds_9_0_8 && !holds_0_0_8 && !holds_1_0_8 && !holds_10_0_8 && !holds_14_0_8 && !holds_23_0_8 && !holds_21_0_8 && !holds_17_0_8 && !holds_18_0_8 && !holds_19_0_8 && !holds_22_0_8 && !holds_5_0_8 && !holds_4_0_8 && !holds_8_0_8 && !holds_2_0_8 && !holds_13_0_8 && !holds_6_0_8 && !holds_7_0_8 && !holds_3_0_8 && !holds_20_0_8 && !holds_12_0_8));
    s.add(b);
    expr prob_0_0_6 = c.real_const("prob_0_0_6");
    expr prob_2_0_6 = c.real_const("prob_2_0_6");
    expr d_0_0_8 = c.real_const("d_0_0_8");
    expr d_2_0_8 = c.real_const("d_2_0_8");
    expr prob_3_0_6 = c.real_const("prob_3_0_6");
    expr d_3_0_8 = c.real_const("d_3_0_8");
    b = ((implies(holds_0_0_8, prob_0_0_6 == 1) && (prob_0_0_6 >= 0)) && (implies((!holds_0_0_8 && (a_0 == 0)), ((prob_0_0_6 == 1/2*prob_2_0_6 + 1/2*prob_3_0_6) && implies(prob_0_0_6 > 0, ((holds_2_0_8 || (d_0_0_8 > d_2_0_8)) || (holds_3_0_8 || (d_0_0_8 > d_3_0_8))))))));
    s.add(b);
    expr prob_4_0_6 = c.real_const("prob_4_0_6");
    expr d_4_0_8 = c.real_const("d_4_0_8");
    b = ((implies(holds_0_0_8, prob_0_0_6 == 1) && (prob_0_0_6 >= 0)) && (implies((!holds_0_0_8 && (a_0 == 1)), ((prob_0_0_6 == 1/2*prob_3_0_6 + 1/2*prob_4_0_6) && implies(prob_0_0_6 > 0, ((holds_3_0_8 || (d_0_0_8 > d_3_0_8)) || (holds_4_0_8 || (d_0_0_8 > d_4_0_8))))))));
    s.add(b);
    expr prob_1_0_6 = c.real_const("prob_1_0_6");
    expr prob_5_0_6 = c.real_const("prob_5_0_6");
    expr d_1_0_8 = c.real_const("d_1_0_8");
    expr d_5_0_8 = c.real_const("d_5_0_8");
    expr prob_6_0_6 = c.real_const("prob_6_0_6");
    expr d_6_0_8 = c.real_const("d_6_0_8");
    b = ((implies(holds_1_0_8, prob_1_0_6 == 1) && (prob_1_0_6 >= 0)) && (implies((!holds_1_0_8 && (a_1 == 0)), ((prob_1_0_6 == 1/2*prob_5_0_6 + 1/2*prob_6_0_6) && implies(prob_1_0_6 > 0, ((holds_5_0_8 || (d_1_0_8 > d_5_0_8)) || (holds_6_0_8 || (d_1_0_8 > d_6_0_8))))))));
    s.add(b);
    expr prob_7_0_6 = c.real_const("prob_7_0_6");
    expr d_7_0_8 = c.real_const("d_7_0_8");
    b = ((implies(holds_1_0_8, prob_1_0_6 == 1) && (prob_1_0_6 >= 0)) && (implies((!holds_1_0_8 && (a_1 == 1)), ((prob_1_0_6 == 1/2*prob_6_0_6 + 1/2*prob_7_0_6) && implies(prob_1_0_6 > 0, ((holds_6_0_8 || (d_1_0_8 > d_6_0_8)) || (holds_7_0_8 || (d_1_0_8 > d_7_0_8))))))));
    s.add(b);
    expr prob_8_0_6 = c.real_const("prob_8_0_6");
    expr d_8_0_8 = c.real_const("d_8_0_8");
    b = ((implies(holds_2_0_8, prob_2_0_6 == 1) && (prob_2_0_6 >= 0)) && (implies((!holds_2_0_8 && (a_2 == 0)), ((prob_2_0_6 == 1/2*prob_4_0_6 + 1/2*prob_8_0_6) && implies(prob_2_0_6 > 0, ((holds_4_0_8 || (d_2_0_8 > d_4_0_8)) || (holds_8_0_8 || (d_2_0_8 > d_8_0_8))))))));
    s.add(b);
    expr prob_9_0_6 = c.real_const("prob_9_0_6");
    expr d_9_0_8 = c.real_const("d_9_0_8");
    b = ((implies(holds_3_0_8, prob_3_0_6 == 1) && (prob_3_0_6 >= 0)) && (implies((!holds_3_0_8 && (a_3 == 0)), ((prob_3_0_6 == 1/2*prob_8_0_6 + 1/2*prob_9_0_6) && implies(prob_3_0_6 > 0, ((holds_8_0_8 || (d_3_0_8 > d_8_0_8)) || (holds_9_0_8 || (d_3_0_8 > d_9_0_8))))))));
    s.add(b);
    expr prob_10_0_6 = c.real_const("prob_10_0_6");
    expr d_10_0_8 = c.real_const("d_10_0_8");
    b = ((implies(holds_3_0_8, prob_3_0_6 == 1) && (prob_3_0_6 >= 0)) && (implies((!holds_3_0_8 && (a_3 == 1)), ((prob_3_0_6 == 1/2*prob_9_0_6 + 1/2*prob_10_0_6) && implies(prob_3_0_6 > 0, ((holds_9_0_8 || (d_3_0_8 > d_9_0_8)) || (holds_10_0_8 || (d_3_0_8 > d_10_0_8))))))));
    s.add(b);
    expr prob_11_0_6 = c.real_const("prob_11_0_6");
    expr d_11_0_8 = c.real_const("d_11_0_8");
    b = ((implies(holds_4_0_8, prob_4_0_6 == 1) && (prob_4_0_6 >= 0)) && (implies((!holds_4_0_8 && (a_4 == 0)), ((prob_4_0_6 == 1/2*prob_10_0_6 + 1/2*prob_11_0_6) && implies(prob_4_0_6 > 0, ((holds_10_0_8 || (d_4_0_8 > d_10_0_8)) || (holds_11_0_8 || (d_4_0_8 > d_11_0_8))))))));
    s.add(b);
    expr prob_12_0_6 = c.real_const("prob_12_0_6");
    expr d_12_0_8 = c.real_const("d_12_0_8");
    b = ((implies(holds_5_0_8, prob_5_0_6 == 1) && (prob_5_0_6 >= 0)) && (implies((!holds_5_0_8 && (a_5 == 0)), ((prob_5_0_6 == 1/2*prob_7_0_6 + 1/2*prob_12_0_6) && implies(prob_5_0_6 > 0, ((holds_7_0_8 || (d_5_0_8 > d_7_0_8)) || (holds_12_0_8 || (d_5_0_8 > d_12_0_8))))))));
    s.add(b);
    expr prob_13_0_6 = c.real_const("prob_13_0_6");
    expr d_13_0_8 = c.real_const("d_13_0_8");
    b = ((implies(holds_6_0_8, prob_6_0_6 == 1) && (prob_6_0_6 >= 0)) && (implies((!holds_6_0_8 && (a_6 == 0)), ((prob_6_0_6 == 1/2*prob_12_0_6 + 1/2*prob_13_0_6) && implies(prob_6_0_6 > 0, ((holds_12_0_8 || (d_6_0_8 > d_12_0_8)) || (holds_13_0_8 || (d_6_0_8 > d_13_0_8))))))));
    s.add(b);
    expr prob_14_0_6 = c.real_const("prob_14_0_6");
    expr d_14_0_8 = c.real_const("d_14_0_8");
    b = ((implies(holds_6_0_8, prob_6_0_6 == 1) && (prob_6_0_6 >= 0)) && (implies((!holds_6_0_8 && (a_6 == 1)), ((prob_6_0_6 == 1/2*prob_13_0_6 + 1/2*prob_14_0_6) && implies(prob_6_0_6 > 0, ((holds_13_0_8 || (d_6_0_8 > d_13_0_8)) || (holds_14_0_8 || (d_6_0_8 > d_14_0_8))))))));
    s.add(b);
    expr prob_15_0_6 = c.real_const("prob_15_0_6");
    expr d_15_0_8 = c.real_const("d_15_0_8");
    b = ((implies(holds_7_0_8, prob_7_0_6 == 1) && (prob_7_0_6 >= 0)) && (implies((!holds_7_0_8 && (a_7 == 0)), ((prob_7_0_6 == 1/2*prob_14_0_6 + 1/2*prob_15_0_6) && implies(prob_7_0_6 > 0, ((holds_14_0_8 || (d_7_0_8 > d_14_0_8)) || (holds_15_0_8 || (d_7_0_8 > d_15_0_8))))))));
    s.add(b);
    expr prob_16_0_6 = c.real_const("prob_16_0_6");
    expr d_16_0_8 = c.real_const("d_16_0_8");
    b = ((implies(holds_8_0_8, prob_8_0_6 == 1) && (prob_8_0_6 >= 0)) && (implies((!holds_8_0_8 && (a_8 == 0)), ((prob_8_0_6 == 1/2*prob_10_0_6 + 1/2*prob_16_0_6) && implies(prob_8_0_6 > 0, ((holds_10_0_8 || (d_8_0_8 > d_10_0_8)) || (holds_16_0_8 || (d_8_0_8 > d_16_0_8))))))));
    s.add(b);
    b = ((implies(holds_9_0_8, prob_9_0_6 == 1) && (prob_9_0_6 >= 0)) && (implies((!holds_9_0_8 && (a_9 == 0)), ((prob_9_0_6 == 1*prob_16_0_6) && implies(prob_9_0_6 > 0, ((holds_16_0_8 || (d_9_0_8 > d_16_0_8))))))));
    s.add(b);
    expr prob_17_0_6 = c.real_const("prob_17_0_6");
    expr d_17_0_8 = c.real_const("d_17_0_8");
    b = ((implies(holds_9_0_8, prob_9_0_6 == 1) && (prob_9_0_6 >= 0)) && (implies((!holds_9_0_8 && (a_9 == 1)), ((prob_9_0_6 == 1*prob_17_0_6) && implies(prob_9_0_6 > 0, ((holds_17_0_8 || (d_9_0_8 > d_17_0_8))))))));
    s.add(b);
    expr prob_18_0_6 = c.real_const("prob_18_0_6");
    expr d_18_0_8 = c.real_const("d_18_0_8");
    b = ((implies(holds_10_0_8, prob_10_0_6 == 1) && (prob_10_0_6 >= 0)) && (implies((!holds_10_0_8 && (a_10 == 0)), ((prob_10_0_6 == 1/2*prob_17_0_6 + 1/2*prob_18_0_6) && implies(prob_10_0_6 > 0, ((holds_17_0_8 || (d_10_0_8 > d_17_0_8)) || (holds_18_0_8 || (d_10_0_8 > d_18_0_8))))))));
    s.add(b);
    b = ((implies(holds_11_0_8, prob_11_0_6 == 1) && (prob_11_0_6 >= 0)) && (implies((!holds_11_0_8 && (a_11 == 0)), ((prob_11_0_6 == 1*prob_11_0_6) && implies(prob_11_0_6 > 0, ((holds_11_0_8 || (d_11_0_8 > d_11_0_8))))))));
    s.add(b);
    expr prob_19_0_6 = c.real_const("prob_19_0_6");
    expr d_19_0_8 = c.real_const("d_19_0_8");
    b = ((implies(holds_12_0_8, prob_12_0_6 == 1) && (prob_12_0_6 >= 0)) && (implies((!holds_12_0_8 && (a_12 == 0)), ((prob_12_0_6 == 1/2*prob_14_0_6 + 1/2*prob_19_0_6) && implies(prob_12_0_6 > 0, ((holds_14_0_8 || (d_12_0_8 > d_14_0_8)) || (holds_19_0_8 || (d_12_0_8 > d_19_0_8))))))));
    s.add(b);
    b = ((implies(holds_13_0_8, prob_13_0_6 == 1) && (prob_13_0_6 >= 0)) && (implies((!holds_13_0_8 && (a_13 == 0)), ((prob_13_0_6 == 1*prob_19_0_6) && implies(prob_13_0_6 > 0, ((holds_19_0_8 || (d_13_0_8 > d_19_0_8))))))));
    s.add(b);
    expr prob_20_0_6 = c.real_const("prob_20_0_6");
    expr d_20_0_8 = c.real_const("d_20_0_8");
    b = ((implies(holds_13_0_8, prob_13_0_6 == 1) && (prob_13_0_6 >= 0)) && (implies((!holds_13_0_8 && (a_13 == 1)), ((prob_13_0_6 == 1*prob_20_0_6) && implies(prob_13_0_6 > 0, ((holds_20_0_8 || (d_13_0_8 > d_20_0_8))))))));
    s.add(b);
    expr prob_21_0_6 = c.real_const("prob_21_0_6");
    expr d_21_0_8 = c.real_const("d_21_0_8");
    b = ((implies(holds_14_0_8, prob_14_0_6 == 1) && (prob_14_0_6 >= 0)) && (implies((!holds_14_0_8 && (a_14 == 0)), ((prob_14_0_6 == 1/2*prob_20_0_6 + 1/2*prob_21_0_6) && implies(prob_14_0_6 > 0, ((holds_20_0_8 || (d_14_0_8 > d_20_0_8)) || (holds_21_0_8 || (d_14_0_8 > d_21_0_8))))))));
    s.add(b);
    b = ((implies(holds_15_0_8, prob_15_0_6 == 1) && (prob_15_0_6 >= 0)) && (implies((!holds_15_0_8 && (a_15 == 0)), ((prob_15_0_6 == 1*prob_15_0_6) && implies(prob_15_0_6 > 0, ((holds_15_0_8 || (d_15_0_8 > d_15_0_8))))))));
    s.add(b);
    b = ((implies(holds_16_0_8, prob_16_0_6 == 1) && (prob_16_0_6 >= 0)) && (implies((!holds_16_0_8 && (a_16 == 0)), ((prob_16_0_6 == 1*prob_17_0_6) && implies(prob_16_0_6 > 0, ((holds_17_0_8 || (d_16_0_8 > d_17_0_8))))))));
    s.add(b);
    expr prob_22_0_6 = c.real_const("prob_22_0_6");
    expr d_22_0_8 = c.real_const("d_22_0_8");
    b = ((implies(holds_17_0_8, prob_17_0_6 == 1) && (prob_17_0_6 >= 0)) && (implies((!holds_17_0_8 && (a_17 == 0)), ((prob_17_0_6 == 1*prob_22_0_6) && implies(prob_17_0_6 > 0, ((holds_22_0_8 || (d_17_0_8 > d_22_0_8))))))));
    s.add(b);
    b = ((implies(holds_18_0_8, prob_18_0_6 == 1) && (prob_18_0_6 >= 0)) && (implies((!holds_18_0_8 && (a_18 == 0)), ((prob_18_0_6 == 1*prob_18_0_6) && implies(prob_18_0_6 > 0, ((holds_18_0_8 || (d_18_0_8 > d_18_0_8))))))));
    s.add(b);
    b = ((implies(holds_19_0_8, prob_19_0_6 == 1) && (prob_19_0_6 >= 0)) && (implies((!holds_19_0_8 && (a_19 == 0)), ((prob_19_0_6 == 1*prob_20_0_6) && implies(prob_19_0_6 > 0, ((holds_20_0_8 || (d_19_0_8 > d_20_0_8))))))));
    s.add(b);
    expr prob_23_0_6 = c.real_const("prob_23_0_6");
    expr d_23_0_8 = c.real_const("d_23_0_8");
    b = ((implies(holds_20_0_8, prob_20_0_6 == 1) && (prob_20_0_6 >= 0)) && (implies((!holds_20_0_8 && (a_20 == 0)), ((prob_20_0_6 == 1*prob_23_0_6) && implies(prob_20_0_6 > 0, ((holds_23_0_8 || (d_20_0_8 > d_23_0_8))))))));
    s.add(b);
    b = ((implies(holds_21_0_8, prob_21_0_6 == 1) && (prob_21_0_6 >= 0)) && (implies((!holds_21_0_8 && (a_21 == 0)), ((prob_21_0_6 == 1*prob_21_0_6) && implies(prob_21_0_6 > 0, ((holds_21_0_8 || (d_21_0_8 > d_21_0_8))))))));
    s.add(b);
    b = ((implies(holds_22_0_8, prob_22_0_6 == 1) && (prob_22_0_6 >= 0)) && (implies((!holds_22_0_8 && (a_22 == 0)), ((prob_22_0_6 == 1*prob_22_0_6) && implies(prob_22_0_6 > 0, ((holds_22_0_8 || (d_22_0_8 > d_22_0_8))))))));
    s.add(b);
    b = ((implies(holds_23_0_8, prob_23_0_6 == 1) && (prob_23_0_6 >= 0)) && (implies((!holds_23_0_8 && (a_23 == 0)), ((prob_23_0_6 == 1*prob_23_0_6) && implies(prob_23_0_6 > 0, ((holds_23_0_8 || (d_23_0_8 > d_23_0_8))))))));
    s.add(b);
    expr holds_0_0_11 = c.bool_const("holds_0_0_11");
    expr holds_0_1_11 = c.bool_const("holds_0_1_11");
    expr holds_0_2_11 = c.bool_const("holds_0_2_11");
    expr holds_0_3_11 = c.bool_const("holds_0_3_11");
    expr holds_0_4_11 = c.bool_const("holds_0_4_11");
    expr holds_0_5_11 = c.bool_const("holds_0_5_11");
    expr holds_0_6_11 = c.bool_const("holds_0_6_11");
    expr holds_0_7_11 = c.bool_const("holds_0_7_11");
    expr holds_0_8_11 = c.bool_const("holds_0_8_11");
    expr holds_0_9_11 = c.bool_const("holds_0_9_11");
    expr holds_0_10_11 = c.bool_const("holds_0_10_11");
    expr holds_0_11_11 = c.bool_const("holds_0_11_11");
    expr holds_0_12_11 = c.bool_const("holds_0_12_11");
    expr holds_0_13_11 = c.bool_const("holds_0_13_11");
    expr holds_0_14_11 = c.bool_const("holds_0_14_11");
    expr holds_0_15_11 = c.bool_const("holds_0_15_11");
    expr holds_0_16_11 = c.bool_const("holds_0_16_11");
    expr holds_0_17_11 = c.bool_const("holds_0_17_11");
    expr holds_0_18_11 = c.bool_const("holds_0_18_11");
    expr holds_0_19_11 = c.bool_const("holds_0_19_11");
    expr holds_0_20_11 = c.bool_const("holds_0_20_11");
    expr holds_0_21_11 = c.bool_const("holds_0_21_11");
    expr holds_0_22_11 = c.bool_const("holds_0_22_11");
    expr holds_0_23_11 = c.bool_const("holds_0_23_11");
    b = ((holds_0_15_11 && holds_0_11_11) && (!holds_0_1_11 && !holds_0_8_11 && !holds_0_18_11 && !holds_0_6_11 && !holds_0_5_11 && !holds_0_23_11 && !holds_0_0_11 && !holds_0_13_11 && !holds_0_17_11 && !holds_0_3_11 && !holds_0_7_11 && !holds_0_21_11 && !holds_0_22_11 && !holds_0_9_11 && !holds_0_16_11 && !holds_0_2_11 && !holds_0_20_11 && !holds_0_12_11 && !holds_0_10_11 && !holds_0_14_11 && !holds_0_19_11 && !holds_0_4_11));
    s.add(b);
    expr prob_0_0_9 = c.real_const("prob_0_0_9");
    expr prob_0_2_9 = c.real_const("prob_0_2_9");
    expr d_0_0_11 = c.real_const("d_0_0_11");
    expr d_0_2_11 = c.real_const("d_0_2_11");
    expr prob_0_3_9 = c.real_const("prob_0_3_9");
    expr d_0_3_11 = c.real_const("d_0_3_11");
    b = ((implies(holds_0_0_11, prob_0_0_9 == 1) && (prob_0_0_9 >= 0)) && (implies((!holds_0_0_11 && (a_0 == 0)), ((prob_0_0_9 == 1/2*prob_0_2_9 + 1/2*prob_0_3_9) && implies(prob_0_0_9 > 0, ((holds_0_2_11 || (d_0_0_11 > d_0_2_11)) || (holds_0_3_11 || (d_0_0_11 > d_0_3_11))))))));
    s.add(b);
    expr prob_0_4_9 = c.real_const("prob_0_4_9");
    expr d_0_4_11 = c.real_const("d_0_4_11");
    b = ((implies(holds_0_0_11, prob_0_0_9 == 1) && (prob_0_0_9 >= 0)) && (implies((!holds_0_0_11 && (a_0 == 1)), ((prob_0_0_9 == 1/2*prob_0_3_9 + 1/2*prob_0_4_9) && implies(prob_0_0_9 > 0, ((holds_0_3_11 || (d_0_0_11 > d_0_3_11)) || (holds_0_4_11 || (d_0_0_11 > d_0_4_11))))))));
    s.add(b);
    expr prob_0_1_9 = c.real_const("prob_0_1_9");
    expr prob_0_5_9 = c.real_const("prob_0_5_9");
    expr d_0_1_11 = c.real_const("d_0_1_11");
    expr d_0_5_11 = c.real_const("d_0_5_11");
    expr prob_0_6_9 = c.real_const("prob_0_6_9");
    expr d_0_6_11 = c.real_const("d_0_6_11");
    b = ((implies(holds_0_1_11, prob_0_1_9 == 1) && (prob_0_1_9 >= 0)) && (implies((!holds_0_1_11 && (a_1 == 0)), ((prob_0_1_9 == 1/2*prob_0_5_9 + 1/2*prob_0_6_9) && implies(prob_0_1_9 > 0, ((holds_0_5_11 || (d_0_1_11 > d_0_5_11)) || (holds_0_6_11 || (d_0_1_11 > d_0_6_11))))))));
    s.add(b);
    expr prob_0_7_9 = c.real_const("prob_0_7_9");
    expr d_0_7_11 = c.real_const("d_0_7_11");
    b = ((implies(holds_0_1_11, prob_0_1_9 == 1) && (prob_0_1_9 >= 0)) && (implies((!holds_0_1_11 && (a_1 == 1)), ((prob_0_1_9 == 1/2*prob_0_6_9 + 1/2*prob_0_7_9) && implies(prob_0_1_9 > 0, ((holds_0_6_11 || (d_0_1_11 > d_0_6_11)) || (holds_0_7_11 || (d_0_1_11 > d_0_7_11))))))));
    s.add(b);
    expr prob_0_8_9 = c.real_const("prob_0_8_9");
    expr d_0_8_11 = c.real_const("d_0_8_11");
    b = ((implies(holds_0_2_11, prob_0_2_9 == 1) && (prob_0_2_9 >= 0)) && (implies((!holds_0_2_11 && (a_2 == 0)), ((prob_0_2_9 == 1/2*prob_0_4_9 + 1/2*prob_0_8_9) && implies(prob_0_2_9 > 0, ((holds_0_4_11 || (d_0_2_11 > d_0_4_11)) || (holds_0_8_11 || (d_0_2_11 > d_0_8_11))))))));
    s.add(b);
    expr prob_0_9_9 = c.real_const("prob_0_9_9");
    expr d_0_9_11 = c.real_const("d_0_9_11");
    b = ((implies(holds_0_3_11, prob_0_3_9 == 1) && (prob_0_3_9 >= 0)) && (implies((!holds_0_3_11 && (a_3 == 0)), ((prob_0_3_9 == 1/2*prob_0_8_9 + 1/2*prob_0_9_9) && implies(prob_0_3_9 > 0, ((holds_0_8_11 || (d_0_3_11 > d_0_8_11)) || (holds_0_9_11 || (d_0_3_11 > d_0_9_11))))))));
    s.add(b);
    expr prob_0_10_9 = c.real_const("prob_0_10_9");
    expr d_0_10_11 = c.real_const("d_0_10_11");
    b = ((implies(holds_0_3_11, prob_0_3_9 == 1) && (prob_0_3_9 >= 0)) && (implies((!holds_0_3_11 && (a_3 == 1)), ((prob_0_3_9 == 1/2*prob_0_9_9 + 1/2*prob_0_10_9) && implies(prob_0_3_9 > 0, ((holds_0_9_11 || (d_0_3_11 > d_0_9_11)) || (holds_0_10_11 || (d_0_3_11 > d_0_10_11))))))));
    s.add(b);
    expr prob_0_11_9 = c.real_const("prob_0_11_9");
    expr d_0_11_11 = c.real_const("d_0_11_11");
    b = ((implies(holds_0_4_11, prob_0_4_9 == 1) && (prob_0_4_9 >= 0)) && (implies((!holds_0_4_11 && (a_4 == 0)), ((prob_0_4_9 == 1/2*prob_0_10_9 + 1/2*prob_0_11_9) && implies(prob_0_4_9 > 0, ((holds_0_10_11 || (d_0_4_11 > d_0_10_11)) || (holds_0_11_11 || (d_0_4_11 > d_0_11_11))))))));
    s.add(b);
    expr prob_0_12_9 = c.real_const("prob_0_12_9");
    expr d_0_12_11 = c.real_const("d_0_12_11");
    b = ((implies(holds_0_5_11, prob_0_5_9 == 1) && (prob_0_5_9 >= 0)) && (implies((!holds_0_5_11 && (a_5 == 0)), ((prob_0_5_9 == 1/2*prob_0_7_9 + 1/2*prob_0_12_9) && implies(prob_0_5_9 > 0, ((holds_0_7_11 || (d_0_5_11 > d_0_7_11)) || (holds_0_12_11 || (d_0_5_11 > d_0_12_11))))))));
    s.add(b);
    expr prob_0_13_9 = c.real_const("prob_0_13_9");
    expr d_0_13_11 = c.real_const("d_0_13_11");
    b = ((implies(holds_0_6_11, prob_0_6_9 == 1) && (prob_0_6_9 >= 0)) && (implies((!holds_0_6_11 && (a_6 == 0)), ((prob_0_6_9 == 1/2*prob_0_12_9 + 1/2*prob_0_13_9) && implies(prob_0_6_9 > 0, ((holds_0_12_11 || (d_0_6_11 > d_0_12_11)) || (holds_0_13_11 || (d_0_6_11 > d_0_13_11))))))));
    s.add(b);
    expr prob_0_14_9 = c.real_const("prob_0_14_9");
    expr d_0_14_11 = c.real_const("d_0_14_11");
    b = ((implies(holds_0_6_11, prob_0_6_9 == 1) && (prob_0_6_9 >= 0)) && (implies((!holds_0_6_11 && (a_6 == 1)), ((prob_0_6_9 == 1/2*prob_0_13_9 + 1/2*prob_0_14_9) && implies(prob_0_6_9 > 0, ((holds_0_13_11 || (d_0_6_11 > d_0_13_11)) || (holds_0_14_11 || (d_0_6_11 > d_0_14_11))))))));
    s.add(b);
    expr prob_0_15_9 = c.real_const("prob_0_15_9");
    expr d_0_15_11 = c.real_const("d_0_15_11");
    b = ((implies(holds_0_7_11, prob_0_7_9 == 1) && (prob_0_7_9 >= 0)) && (implies((!holds_0_7_11 && (a_7 == 0)), ((prob_0_7_9 == 1/2*prob_0_14_9 + 1/2*prob_0_15_9) && implies(prob_0_7_9 > 0, ((holds_0_14_11 || (d_0_7_11 > d_0_14_11)) || (holds_0_15_11 || (d_0_7_11 > d_0_15_11))))))));
    s.add(b);
    expr prob_0_16_9 = c.real_const("prob_0_16_9");
    expr d_0_16_11 = c.real_const("d_0_16_11");
    b = ((implies(holds_0_8_11, prob_0_8_9 == 1) && (prob_0_8_9 >= 0)) && (implies((!holds_0_8_11 && (a_8 == 0)), ((prob_0_8_9 == 1/2*prob_0_10_9 + 1/2*prob_0_16_9) && implies(prob_0_8_9 > 0, ((holds_0_10_11 || (d_0_8_11 > d_0_10_11)) || (holds_0_16_11 || (d_0_8_11 > d_0_16_11))))))));
    s.add(b);
    b = ((implies(holds_0_9_11, prob_0_9_9 == 1) && (prob_0_9_9 >= 0)) && (implies((!holds_0_9_11 && (a_9 == 0)), ((prob_0_9_9 == 1*prob_0_16_9) && implies(prob_0_9_9 > 0, ((holds_0_16_11 || (d_0_9_11 > d_0_16_11))))))));
    s.add(b);
    expr prob_0_17_9 = c.real_const("prob_0_17_9");
    expr d_0_17_11 = c.real_const("d_0_17_11");
    b = ((implies(holds_0_9_11, prob_0_9_9 == 1) && (prob_0_9_9 >= 0)) && (implies((!holds_0_9_11 && (a_9 == 1)), ((prob_0_9_9 == 1*prob_0_17_9) && implies(prob_0_9_9 > 0, ((holds_0_17_11 || (d_0_9_11 > d_0_17_11))))))));
    s.add(b);
    expr prob_0_18_9 = c.real_const("prob_0_18_9");
    expr d_0_18_11 = c.real_const("d_0_18_11");
    b = ((implies(holds_0_10_11, prob_0_10_9 == 1) && (prob_0_10_9 >= 0)) && (implies((!holds_0_10_11 && (a_10 == 0)), ((prob_0_10_9 == 1/2*prob_0_17_9 + 1/2*prob_0_18_9) && implies(prob_0_10_9 > 0, ((holds_0_17_11 || (d_0_10_11 > d_0_17_11)) || (holds_0_18_11 || (d_0_10_11 > d_0_18_11))))))));
    s.add(b);
    b = ((implies(holds_0_11_11, prob_0_11_9 == 1) && (prob_0_11_9 >= 0)) && (implies((!holds_0_11_11 && (a_11 == 0)), ((prob_0_11_9 == 1*prob_0_11_9) && implies(prob_0_11_9 > 0, ((holds_0_11_11 || (d_0_11_11 > d_0_11_11))))))));
    s.add(b);
    expr prob_0_19_9 = c.real_const("prob_0_19_9");
    expr d_0_19_11 = c.real_const("d_0_19_11");
    b = ((implies(holds_0_12_11, prob_0_12_9 == 1) && (prob_0_12_9 >= 0)) && (implies((!holds_0_12_11 && (a_12 == 0)), ((prob_0_12_9 == 1/2*prob_0_14_9 + 1/2*prob_0_19_9) && implies(prob_0_12_9 > 0, ((holds_0_14_11 || (d_0_12_11 > d_0_14_11)) || (holds_0_19_11 || (d_0_12_11 > d_0_19_11))))))));
    s.add(b);
    b = ((implies(holds_0_13_11, prob_0_13_9 == 1) && (prob_0_13_9 >= 0)) && (implies((!holds_0_13_11 && (a_13 == 0)), ((prob_0_13_9 == 1*prob_0_19_9) && implies(prob_0_13_9 > 0, ((holds_0_19_11 || (d_0_13_11 > d_0_19_11))))))));
    s.add(b);
    expr prob_0_20_9 = c.real_const("prob_0_20_9");
    expr d_0_20_11 = c.real_const("d_0_20_11");
    b = ((implies(holds_0_13_11, prob_0_13_9 == 1) && (prob_0_13_9 >= 0)) && (implies((!holds_0_13_11 && (a_13 == 1)), ((prob_0_13_9 == 1*prob_0_20_9) && implies(prob_0_13_9 > 0, ((holds_0_20_11 || (d_0_13_11 > d_0_20_11))))))));
    s.add(b);
    expr prob_0_21_9 = c.real_const("prob_0_21_9");
    expr d_0_21_11 = c.real_const("d_0_21_11");
    b = ((implies(holds_0_14_11, prob_0_14_9 == 1) && (prob_0_14_9 >= 0)) && (implies((!holds_0_14_11 && (a_14 == 0)), ((prob_0_14_9 == 1/2*prob_0_20_9 + 1/2*prob_0_21_9) && implies(prob_0_14_9 > 0, ((holds_0_20_11 || (d_0_14_11 > d_0_20_11)) || (holds_0_21_11 || (d_0_14_11 > d_0_21_11))))))));
    s.add(b);
    b = ((implies(holds_0_15_11, prob_0_15_9 == 1) && (prob_0_15_9 >= 0)) && (implies((!holds_0_15_11 && (a_15 == 0)), ((prob_0_15_9 == 1*prob_0_15_9) && implies(prob_0_15_9 > 0, ((holds_0_15_11 || (d_0_15_11 > d_0_15_11))))))));
    s.add(b);
    b = ((implies(holds_0_16_11, prob_0_16_9 == 1) && (prob_0_16_9 >= 0)) && (implies((!holds_0_16_11 && (a_16 == 0)), ((prob_0_16_9 == 1*prob_0_17_9) && implies(prob_0_16_9 > 0, ((holds_0_17_11 || (d_0_16_11 > d_0_17_11))))))));
    s.add(b);
    expr prob_0_22_9 = c.real_const("prob_0_22_9");
    expr d_0_22_11 = c.real_const("d_0_22_11");
    b = ((implies(holds_0_17_11, prob_0_17_9 == 1) && (prob_0_17_9 >= 0)) && (implies((!holds_0_17_11 && (a_17 == 0)), ((prob_0_17_9 == 1*prob_0_22_9) && implies(prob_0_17_9 > 0, ((holds_0_22_11 || (d_0_17_11 > d_0_22_11))))))));
    s.add(b);
    b = ((implies(holds_0_18_11, prob_0_18_9 == 1) && (prob_0_18_9 >= 0)) && (implies((!holds_0_18_11 && (a_18 == 0)), ((prob_0_18_9 == 1*prob_0_18_9) && implies(prob_0_18_9 > 0, ((holds_0_18_11 || (d_0_18_11 > d_0_18_11))))))));
    s.add(b);
    b = ((implies(holds_0_19_11, prob_0_19_9 == 1) && (prob_0_19_9 >= 0)) && (implies((!holds_0_19_11 && (a_19 == 0)), ((prob_0_19_9 == 1*prob_0_20_9) && implies(prob_0_19_9 > 0, ((holds_0_20_11 || (d_0_19_11 > d_0_20_11))))))));
    s.add(b);
    expr prob_0_23_9 = c.real_const("prob_0_23_9");
    expr d_0_23_11 = c.real_const("d_0_23_11");
    b = ((implies(holds_0_20_11, prob_0_20_9 == 1) && (prob_0_20_9 >= 0)) && (implies((!holds_0_20_11 && (a_20 == 0)), ((prob_0_20_9 == 1*prob_0_23_9) && implies(prob_0_20_9 > 0, ((holds_0_23_11 || (d_0_20_11 > d_0_23_11))))))));
    s.add(b);
    b = ((implies(holds_0_21_11, prob_0_21_9 == 1) && (prob_0_21_9 >= 0)) && (implies((!holds_0_21_11 && (a_21 == 0)), ((prob_0_21_9 == 1*prob_0_21_9) && implies(prob_0_21_9 > 0, ((holds_0_21_11 || (d_0_21_11 > d_0_21_11))))))));
    s.add(b);
    b = ((implies(holds_0_22_11, prob_0_22_9 == 1) && (prob_0_22_9 >= 0)) && (implies((!holds_0_22_11 && (a_22 == 0)), ((prob_0_22_9 == 1*prob_0_22_9) && implies(prob_0_22_9 > 0, ((holds_0_22_11 || (d_0_22_11 > d_0_22_11))))))));
    s.add(b);
    b = ((implies(holds_0_23_11, prob_0_23_9 == 1) && (prob_0_23_9 >= 0)) && (implies((!holds_0_23_11 && (a_23 == 0)), ((prob_0_23_9 == 1*prob_0_23_9) && implies(prob_0_23_9 > 0, ((holds_0_23_11 || (d_0_23_11 > d_0_23_11))))))));
    s.add(b);
    expr holds_0_0_5 = c.bool_const("holds_0_0_5");
    expr holds_0_1_5 = c.bool_const("holds_0_1_5");
    expr holds_0_2_5 = c.bool_const("holds_0_2_5");
    expr holds_0_3_5 = c.bool_const("holds_0_3_5");
    expr holds_0_4_5 = c.bool_const("holds_0_4_5");
    expr holds_0_5_5 = c.bool_const("holds_0_5_5");
    expr holds_0_6_5 = c.bool_const("holds_0_6_5");
    expr holds_0_7_5 = c.bool_const("holds_0_7_5");
    expr holds_0_8_5 = c.bool_const("holds_0_8_5");
    expr holds_0_9_5 = c.bool_const("holds_0_9_5");
    expr holds_0_10_5 = c.bool_const("holds_0_10_5");
    expr holds_0_11_5 = c.bool_const("holds_0_11_5");
    expr holds_0_12_5 = c.bool_const("holds_0_12_5");
    expr holds_0_13_5 = c.bool_const("holds_0_13_5");
    expr holds_0_14_5 = c.bool_const("holds_0_14_5");
    expr holds_0_15_5 = c.bool_const("holds_0_15_5");
    expr holds_0_16_5 = c.bool_const("holds_0_16_5");
    expr holds_0_17_5 = c.bool_const("holds_0_17_5");
    expr holds_0_18_5 = c.bool_const("holds_0_18_5");
    expr holds_0_19_5 = c.bool_const("holds_0_19_5");
    expr holds_0_20_5 = c.bool_const("holds_0_20_5");
    expr holds_0_21_5 = c.bool_const("holds_0_21_5");
    expr holds_0_22_5 = c.bool_const("holds_0_22_5");
    expr holds_0_23_5 = c.bool_const("holds_0_23_5");
    expr holds_1_0_5 = c.bool_const("holds_1_0_5");
    expr holds_1_1_5 = c.bool_const("holds_1_1_5");
    expr holds_1_2_5 = c.bool_const("holds_1_2_5");
    expr holds_1_3_5 = c.bool_const("holds_1_3_5");
    expr holds_1_4_5 = c.bool_const("holds_1_4_5");
    expr holds_1_5_5 = c.bool_const("holds_1_5_5");
    expr holds_1_6_5 = c.bool_const("holds_1_6_5");
    expr holds_1_7_5 = c.bool_const("holds_1_7_5");
    expr holds_1_8_5 = c.bool_const("holds_1_8_5");
    expr holds_1_9_5 = c.bool_const("holds_1_9_5");
    expr holds_1_10_5 = c.bool_const("holds_1_10_5");
    expr holds_1_11_5 = c.bool_const("holds_1_11_5");
    expr holds_1_12_5 = c.bool_const("holds_1_12_5");
    expr holds_1_13_5 = c.bool_const("holds_1_13_5");
    expr holds_1_14_5 = c.bool_const("holds_1_14_5");
    expr holds_1_15_5 = c.bool_const("holds_1_15_5");
    expr holds_1_16_5 = c.bool_const("holds_1_16_5");
    expr holds_1_17_5 = c.bool_const("holds_1_17_5");
    expr holds_1_18_5 = c.bool_const("holds_1_18_5");
    expr holds_1_19_5 = c.bool_const("holds_1_19_5");
    expr holds_1_20_5 = c.bool_const("holds_1_20_5");
    expr holds_1_21_5 = c.bool_const("holds_1_21_5");
    expr holds_1_22_5 = c.bool_const("holds_1_22_5");
    expr holds_1_23_5 = c.bool_const("holds_1_23_5");
    expr holds_2_0_5 = c.bool_const("holds_2_0_5");
    expr holds_2_1_5 = c.bool_const("holds_2_1_5");
    expr holds_2_2_5 = c.bool_const("holds_2_2_5");
    expr holds_2_3_5 = c.bool_const("holds_2_3_5");
    expr holds_2_4_5 = c.bool_const("holds_2_4_5");
    expr holds_2_5_5 = c.bool_const("holds_2_5_5");
    expr holds_2_6_5 = c.bool_const("holds_2_6_5");
    expr holds_2_7_5 = c.bool_const("holds_2_7_5");
    expr holds_2_8_5 = c.bool_const("holds_2_8_5");
    expr holds_2_9_5 = c.bool_const("holds_2_9_5");
    expr holds_2_10_5 = c.bool_const("holds_2_10_5");
    expr holds_2_11_5 = c.bool_const("holds_2_11_5");
    expr holds_2_12_5 = c.bool_const("holds_2_12_5");
    expr holds_2_13_5 = c.bool_const("holds_2_13_5");
    expr holds_2_14_5 = c.bool_const("holds_2_14_5");
    expr holds_2_15_5 = c.bool_const("holds_2_15_5");
    expr holds_2_16_5 = c.bool_const("holds_2_16_5");
    expr holds_2_17_5 = c.bool_const("holds_2_17_5");
    expr holds_2_18_5 = c.bool_const("holds_2_18_5");
    expr holds_2_19_5 = c.bool_const("holds_2_19_5");
    expr holds_2_20_5 = c.bool_const("holds_2_20_5");
    expr holds_2_21_5 = c.bool_const("holds_2_21_5");
    expr holds_2_22_5 = c.bool_const("holds_2_22_5");
    expr holds_2_23_5 = c.bool_const("holds_2_23_5");
    expr holds_3_0_5 = c.bool_const("holds_3_0_5");
    expr holds_3_1_5 = c.bool_const("holds_3_1_5");
    expr holds_3_2_5 = c.bool_const("holds_3_2_5");
    expr holds_3_3_5 = c.bool_const("holds_3_3_5");
    expr holds_3_4_5 = c.bool_const("holds_3_4_5");
    expr holds_3_5_5 = c.bool_const("holds_3_5_5");
    expr holds_3_6_5 = c.bool_const("holds_3_6_5");
    expr holds_3_7_5 = c.bool_const("holds_3_7_5");
    expr holds_3_8_5 = c.bool_const("holds_3_8_5");
    expr holds_3_9_5 = c.bool_const("holds_3_9_5");
    expr holds_3_10_5 = c.bool_const("holds_3_10_5");
    expr holds_3_11_5 = c.bool_const("holds_3_11_5");
    expr holds_3_12_5 = c.bool_const("holds_3_12_5");
    expr holds_3_13_5 = c.bool_const("holds_3_13_5");
    expr holds_3_14_5 = c.bool_const("holds_3_14_5");
    expr holds_3_15_5 = c.bool_const("holds_3_15_5");
    expr holds_3_16_5 = c.bool_const("holds_3_16_5");
    expr holds_3_17_5 = c.bool_const("holds_3_17_5");
    expr holds_3_18_5 = c.bool_const("holds_3_18_5");
    expr holds_3_19_5 = c.bool_const("holds_3_19_5");
    expr holds_3_20_5 = c.bool_const("holds_3_20_5");
    expr holds_3_21_5 = c.bool_const("holds_3_21_5");
    expr holds_3_22_5 = c.bool_const("holds_3_22_5");
    expr holds_3_23_5 = c.bool_const("holds_3_23_5");
    expr holds_4_0_5 = c.bool_const("holds_4_0_5");
    expr holds_4_1_5 = c.bool_const("holds_4_1_5");
    expr holds_4_2_5 = c.bool_const("holds_4_2_5");
    expr holds_4_3_5 = c.bool_const("holds_4_3_5");
    expr holds_4_4_5 = c.bool_const("holds_4_4_5");
    expr holds_4_5_5 = c.bool_const("holds_4_5_5");
    expr holds_4_6_5 = c.bool_const("holds_4_6_5");
    expr holds_4_7_5 = c.bool_const("holds_4_7_5");
    expr holds_4_8_5 = c.bool_const("holds_4_8_5");
    expr holds_4_9_5 = c.bool_const("holds_4_9_5");
    expr holds_4_10_5 = c.bool_const("holds_4_10_5");
    expr holds_4_11_5 = c.bool_const("holds_4_11_5");
    expr holds_4_12_5 = c.bool_const("holds_4_12_5");
    expr holds_4_13_5 = c.bool_const("holds_4_13_5");
    expr holds_4_14_5 = c.bool_const("holds_4_14_5");
    expr holds_4_15_5 = c.bool_const("holds_4_15_5");
    expr holds_4_16_5 = c.bool_const("holds_4_16_5");
    expr holds_4_17_5 = c.bool_const("holds_4_17_5");
    expr holds_4_18_5 = c.bool_const("holds_4_18_5");
    expr holds_4_19_5 = c.bool_const("holds_4_19_5");
    expr holds_4_20_5 = c.bool_const("holds_4_20_5");
    expr holds_4_21_5 = c.bool_const("holds_4_21_5");
    expr holds_4_22_5 = c.bool_const("holds_4_22_5");
    expr holds_4_23_5 = c.bool_const("holds_4_23_5");
    expr holds_5_0_5 = c.bool_const("holds_5_0_5");
    expr holds_5_1_5 = c.bool_const("holds_5_1_5");
    expr holds_5_2_5 = c.bool_const("holds_5_2_5");
    expr holds_5_3_5 = c.bool_const("holds_5_3_5");
    expr holds_5_4_5 = c.bool_const("holds_5_4_5");
    expr holds_5_5_5 = c.bool_const("holds_5_5_5");
    expr holds_5_6_5 = c.bool_const("holds_5_6_5");
    expr holds_5_7_5 = c.bool_const("holds_5_7_5");
    expr holds_5_8_5 = c.bool_const("holds_5_8_5");
    expr holds_5_9_5 = c.bool_const("holds_5_9_5");
    expr holds_5_10_5 = c.bool_const("holds_5_10_5");
    expr holds_5_11_5 = c.bool_const("holds_5_11_5");
    expr holds_5_12_5 = c.bool_const("holds_5_12_5");
    expr holds_5_13_5 = c.bool_const("holds_5_13_5");
    expr holds_5_14_5 = c.bool_const("holds_5_14_5");
    expr holds_5_15_5 = c.bool_const("holds_5_15_5");
    expr holds_5_16_5 = c.bool_const("holds_5_16_5");
    expr holds_5_17_5 = c.bool_const("holds_5_17_5");
    expr holds_5_18_5 = c.bool_const("holds_5_18_5");
    expr holds_5_19_5 = c.bool_const("holds_5_19_5");
    expr holds_5_20_5 = c.bool_const("holds_5_20_5");
    expr holds_5_21_5 = c.bool_const("holds_5_21_5");
    expr holds_5_22_5 = c.bool_const("holds_5_22_5");
    expr holds_5_23_5 = c.bool_const("holds_5_23_5");
    expr holds_6_0_5 = c.bool_const("holds_6_0_5");
    expr holds_6_1_5 = c.bool_const("holds_6_1_5");
    expr holds_6_2_5 = c.bool_const("holds_6_2_5");
    expr holds_6_3_5 = c.bool_const("holds_6_3_5");
    expr holds_6_4_5 = c.bool_const("holds_6_4_5");
    expr holds_6_5_5 = c.bool_const("holds_6_5_5");
    expr holds_6_6_5 = c.bool_const("holds_6_6_5");
    expr holds_6_7_5 = c.bool_const("holds_6_7_5");
    expr holds_6_8_5 = c.bool_const("holds_6_8_5");
    expr holds_6_9_5 = c.bool_const("holds_6_9_5");
    expr holds_6_10_5 = c.bool_const("holds_6_10_5");
    expr holds_6_11_5 = c.bool_const("holds_6_11_5");
    expr holds_6_12_5 = c.bool_const("holds_6_12_5");
    expr holds_6_13_5 = c.bool_const("holds_6_13_5");
    expr holds_6_14_5 = c.bool_const("holds_6_14_5");
    expr holds_6_15_5 = c.bool_const("holds_6_15_5");
    expr holds_6_16_5 = c.bool_const("holds_6_16_5");
    expr holds_6_17_5 = c.bool_const("holds_6_17_5");
    expr holds_6_18_5 = c.bool_const("holds_6_18_5");
    expr holds_6_19_5 = c.bool_const("holds_6_19_5");
    expr holds_6_20_5 = c.bool_const("holds_6_20_5");
    expr holds_6_21_5 = c.bool_const("holds_6_21_5");
    expr holds_6_22_5 = c.bool_const("holds_6_22_5");
    expr holds_6_23_5 = c.bool_const("holds_6_23_5");
    expr holds_7_0_5 = c.bool_const("holds_7_0_5");
    expr holds_7_1_5 = c.bool_const("holds_7_1_5");
    expr holds_7_2_5 = c.bool_const("holds_7_2_5");
    expr holds_7_3_5 = c.bool_const("holds_7_3_5");
    expr holds_7_4_5 = c.bool_const("holds_7_4_5");
    expr holds_7_5_5 = c.bool_const("holds_7_5_5");
    expr holds_7_6_5 = c.bool_const("holds_7_6_5");
    expr holds_7_7_5 = c.bool_const("holds_7_7_5");
    expr holds_7_8_5 = c.bool_const("holds_7_8_5");
    expr holds_7_9_5 = c.bool_const("holds_7_9_5");
    expr holds_7_10_5 = c.bool_const("holds_7_10_5");
    expr holds_7_11_5 = c.bool_const("holds_7_11_5");
    expr holds_7_12_5 = c.bool_const("holds_7_12_5");
    expr holds_7_13_5 = c.bool_const("holds_7_13_5");
    expr holds_7_14_5 = c.bool_const("holds_7_14_5");
    expr holds_7_15_5 = c.bool_const("holds_7_15_5");
    expr holds_7_16_5 = c.bool_const("holds_7_16_5");
    expr holds_7_17_5 = c.bool_const("holds_7_17_5");
    expr holds_7_18_5 = c.bool_const("holds_7_18_5");
    expr holds_7_19_5 = c.bool_const("holds_7_19_5");
    expr holds_7_20_5 = c.bool_const("holds_7_20_5");
    expr holds_7_21_5 = c.bool_const("holds_7_21_5");
    expr holds_7_22_5 = c.bool_const("holds_7_22_5");
    expr holds_7_23_5 = c.bool_const("holds_7_23_5");
    expr holds_8_0_5 = c.bool_const("holds_8_0_5");
    expr holds_8_1_5 = c.bool_const("holds_8_1_5");
    expr holds_8_2_5 = c.bool_const("holds_8_2_5");
    expr holds_8_3_5 = c.bool_const("holds_8_3_5");
    expr holds_8_4_5 = c.bool_const("holds_8_4_5");
    expr holds_8_5_5 = c.bool_const("holds_8_5_5");
    expr holds_8_6_5 = c.bool_const("holds_8_6_5");
    expr holds_8_7_5 = c.bool_const("holds_8_7_5");
    expr holds_8_8_5 = c.bool_const("holds_8_8_5");
    expr holds_8_9_5 = c.bool_const("holds_8_9_5");
    expr holds_8_10_5 = c.bool_const("holds_8_10_5");
    expr holds_8_11_5 = c.bool_const("holds_8_11_5");
    expr holds_8_12_5 = c.bool_const("holds_8_12_5");
    expr holds_8_13_5 = c.bool_const("holds_8_13_5");
    expr holds_8_14_5 = c.bool_const("holds_8_14_5");
    expr holds_8_15_5 = c.bool_const("holds_8_15_5");
    expr holds_8_16_5 = c.bool_const("holds_8_16_5");
    expr holds_8_17_5 = c.bool_const("holds_8_17_5");
    expr holds_8_18_5 = c.bool_const("holds_8_18_5");
    expr holds_8_19_5 = c.bool_const("holds_8_19_5");
    expr holds_8_20_5 = c.bool_const("holds_8_20_5");
    expr holds_8_21_5 = c.bool_const("holds_8_21_5");
    expr holds_8_22_5 = c.bool_const("holds_8_22_5");
    expr holds_8_23_5 = c.bool_const("holds_8_23_5");
    expr holds_9_0_5 = c.bool_const("holds_9_0_5");
    expr holds_9_1_5 = c.bool_const("holds_9_1_5");
    expr holds_9_2_5 = c.bool_const("holds_9_2_5");
    expr holds_9_3_5 = c.bool_const("holds_9_3_5");
    expr holds_9_4_5 = c.bool_const("holds_9_4_5");
    expr holds_9_5_5 = c.bool_const("holds_9_5_5");
    expr holds_9_6_5 = c.bool_const("holds_9_6_5");
    expr holds_9_7_5 = c.bool_const("holds_9_7_5");
    expr holds_9_8_5 = c.bool_const("holds_9_8_5");
    expr holds_9_9_5 = c.bool_const("holds_9_9_5");
    expr holds_9_10_5 = c.bool_const("holds_9_10_5");
    expr holds_9_11_5 = c.bool_const("holds_9_11_5");
    expr holds_9_12_5 = c.bool_const("holds_9_12_5");
    expr holds_9_13_5 = c.bool_const("holds_9_13_5");
    expr holds_9_14_5 = c.bool_const("holds_9_14_5");
    expr holds_9_15_5 = c.bool_const("holds_9_15_5");
    expr holds_9_16_5 = c.bool_const("holds_9_16_5");
    expr holds_9_17_5 = c.bool_const("holds_9_17_5");
    expr holds_9_18_5 = c.bool_const("holds_9_18_5");
    expr holds_9_19_5 = c.bool_const("holds_9_19_5");
    expr holds_9_20_5 = c.bool_const("holds_9_20_5");
    expr holds_9_21_5 = c.bool_const("holds_9_21_5");
    expr holds_9_22_5 = c.bool_const("holds_9_22_5");
    expr holds_9_23_5 = c.bool_const("holds_9_23_5");
    expr holds_10_0_5 = c.bool_const("holds_10_0_5");
    expr holds_10_1_5 = c.bool_const("holds_10_1_5");
    expr holds_10_2_5 = c.bool_const("holds_10_2_5");
    expr holds_10_3_5 = c.bool_const("holds_10_3_5");
    expr holds_10_4_5 = c.bool_const("holds_10_4_5");
    expr holds_10_5_5 = c.bool_const("holds_10_5_5");
    expr holds_10_6_5 = c.bool_const("holds_10_6_5");
    expr holds_10_7_5 = c.bool_const("holds_10_7_5");
    expr holds_10_8_5 = c.bool_const("holds_10_8_5");
    expr holds_10_9_5 = c.bool_const("holds_10_9_5");
    expr holds_10_10_5 = c.bool_const("holds_10_10_5");
    expr holds_10_11_5 = c.bool_const("holds_10_11_5");
    expr holds_10_12_5 = c.bool_const("holds_10_12_5");
    expr holds_10_13_5 = c.bool_const("holds_10_13_5");
    expr holds_10_14_5 = c.bool_const("holds_10_14_5");
    expr holds_10_15_5 = c.bool_const("holds_10_15_5");
    expr holds_10_16_5 = c.bool_const("holds_10_16_5");
    expr holds_10_17_5 = c.bool_const("holds_10_17_5");
    expr holds_10_18_5 = c.bool_const("holds_10_18_5");
    expr holds_10_19_5 = c.bool_const("holds_10_19_5");
    expr holds_10_20_5 = c.bool_const("holds_10_20_5");
    expr holds_10_21_5 = c.bool_const("holds_10_21_5");
    expr holds_10_22_5 = c.bool_const("holds_10_22_5");
    expr holds_10_23_5 = c.bool_const("holds_10_23_5");
    expr holds_11_0_5 = c.bool_const("holds_11_0_5");
    expr holds_11_1_5 = c.bool_const("holds_11_1_5");
    expr holds_11_2_5 = c.bool_const("holds_11_2_5");
    expr holds_11_3_5 = c.bool_const("holds_11_3_5");
    expr holds_11_4_5 = c.bool_const("holds_11_4_5");
    expr holds_11_5_5 = c.bool_const("holds_11_5_5");
    expr holds_11_6_5 = c.bool_const("holds_11_6_5");
    expr holds_11_7_5 = c.bool_const("holds_11_7_5");
    expr holds_11_8_5 = c.bool_const("holds_11_8_5");
    expr holds_11_9_5 = c.bool_const("holds_11_9_5");
    expr holds_11_10_5 = c.bool_const("holds_11_10_5");
    expr holds_11_11_5 = c.bool_const("holds_11_11_5");
    expr holds_11_12_5 = c.bool_const("holds_11_12_5");
    expr holds_11_13_5 = c.bool_const("holds_11_13_5");
    expr holds_11_14_5 = c.bool_const("holds_11_14_5");
    expr holds_11_15_5 = c.bool_const("holds_11_15_5");
    expr holds_11_16_5 = c.bool_const("holds_11_16_5");
    expr holds_11_17_5 = c.bool_const("holds_11_17_5");
    expr holds_11_18_5 = c.bool_const("holds_11_18_5");
    expr holds_11_19_5 = c.bool_const("holds_11_19_5");
    expr holds_11_20_5 = c.bool_const("holds_11_20_5");
    expr holds_11_21_5 = c.bool_const("holds_11_21_5");
    expr holds_11_22_5 = c.bool_const("holds_11_22_5");
    expr holds_11_23_5 = c.bool_const("holds_11_23_5");
    expr holds_12_0_5 = c.bool_const("holds_12_0_5");
    expr holds_12_1_5 = c.bool_const("holds_12_1_5");
    expr holds_12_2_5 = c.bool_const("holds_12_2_5");
    expr holds_12_3_5 = c.bool_const("holds_12_3_5");
    expr holds_12_4_5 = c.bool_const("holds_12_4_5");
    expr holds_12_5_5 = c.bool_const("holds_12_5_5");
    expr holds_12_6_5 = c.bool_const("holds_12_6_5");
    expr holds_12_7_5 = c.bool_const("holds_12_7_5");
    expr holds_12_8_5 = c.bool_const("holds_12_8_5");
    expr holds_12_9_5 = c.bool_const("holds_12_9_5");
    expr holds_12_10_5 = c.bool_const("holds_12_10_5");
    expr holds_12_11_5 = c.bool_const("holds_12_11_5");
    expr holds_12_12_5 = c.bool_const("holds_12_12_5");
    expr holds_12_13_5 = c.bool_const("holds_12_13_5");
    expr holds_12_14_5 = c.bool_const("holds_12_14_5");
    expr holds_12_15_5 = c.bool_const("holds_12_15_5");
    expr holds_12_16_5 = c.bool_const("holds_12_16_5");
    expr holds_12_17_5 = c.bool_const("holds_12_17_5");
    expr holds_12_18_5 = c.bool_const("holds_12_18_5");
    expr holds_12_19_5 = c.bool_const("holds_12_19_5");
    expr holds_12_20_5 = c.bool_const("holds_12_20_5");
    expr holds_12_21_5 = c.bool_const("holds_12_21_5");
    expr holds_12_22_5 = c.bool_const("holds_12_22_5");
    expr holds_12_23_5 = c.bool_const("holds_12_23_5");
    expr holds_13_0_5 = c.bool_const("holds_13_0_5");
    expr holds_13_1_5 = c.bool_const("holds_13_1_5");
    expr holds_13_2_5 = c.bool_const("holds_13_2_5");
    expr holds_13_3_5 = c.bool_const("holds_13_3_5");
    expr holds_13_4_5 = c.bool_const("holds_13_4_5");
    expr holds_13_5_5 = c.bool_const("holds_13_5_5");
    expr holds_13_6_5 = c.bool_const("holds_13_6_5");
    expr holds_13_7_5 = c.bool_const("holds_13_7_5");
    expr holds_13_8_5 = c.bool_const("holds_13_8_5");
    expr holds_13_9_5 = c.bool_const("holds_13_9_5");
    expr holds_13_10_5 = c.bool_const("holds_13_10_5");
    expr holds_13_11_5 = c.bool_const("holds_13_11_5");
    expr holds_13_12_5 = c.bool_const("holds_13_12_5");
    expr holds_13_13_5 = c.bool_const("holds_13_13_5");
    expr holds_13_14_5 = c.bool_const("holds_13_14_5");
    expr holds_13_15_5 = c.bool_const("holds_13_15_5");
    expr holds_13_16_5 = c.bool_const("holds_13_16_5");
    expr holds_13_17_5 = c.bool_const("holds_13_17_5");
    expr holds_13_18_5 = c.bool_const("holds_13_18_5");
    expr holds_13_19_5 = c.bool_const("holds_13_19_5");
    expr holds_13_20_5 = c.bool_const("holds_13_20_5");
    expr holds_13_21_5 = c.bool_const("holds_13_21_5");
    expr holds_13_22_5 = c.bool_const("holds_13_22_5");
    expr holds_13_23_5 = c.bool_const("holds_13_23_5");
    expr holds_14_0_5 = c.bool_const("holds_14_0_5");
    expr holds_14_1_5 = c.bool_const("holds_14_1_5");
    expr holds_14_2_5 = c.bool_const("holds_14_2_5");
    expr holds_14_3_5 = c.bool_const("holds_14_3_5");
    expr holds_14_4_5 = c.bool_const("holds_14_4_5");
    expr holds_14_5_5 = c.bool_const("holds_14_5_5");
    expr holds_14_6_5 = c.bool_const("holds_14_6_5");
    expr holds_14_7_5 = c.bool_const("holds_14_7_5");
    expr holds_14_8_5 = c.bool_const("holds_14_8_5");
    expr holds_14_9_5 = c.bool_const("holds_14_9_5");
    expr holds_14_10_5 = c.bool_const("holds_14_10_5");
    expr holds_14_11_5 = c.bool_const("holds_14_11_5");
    expr holds_14_12_5 = c.bool_const("holds_14_12_5");
    expr holds_14_13_5 = c.bool_const("holds_14_13_5");
    expr holds_14_14_5 = c.bool_const("holds_14_14_5");
    expr holds_14_15_5 = c.bool_const("holds_14_15_5");
    expr holds_14_16_5 = c.bool_const("holds_14_16_5");
    expr holds_14_17_5 = c.bool_const("holds_14_17_5");
    expr holds_14_18_5 = c.bool_const("holds_14_18_5");
    expr holds_14_19_5 = c.bool_const("holds_14_19_5");
    expr holds_14_20_5 = c.bool_const("holds_14_20_5");
    expr holds_14_21_5 = c.bool_const("holds_14_21_5");
    expr holds_14_22_5 = c.bool_const("holds_14_22_5");
    expr holds_14_23_5 = c.bool_const("holds_14_23_5");
    expr holds_15_0_5 = c.bool_const("holds_15_0_5");
    expr holds_15_1_5 = c.bool_const("holds_15_1_5");
    expr holds_15_2_5 = c.bool_const("holds_15_2_5");
    expr holds_15_3_5 = c.bool_const("holds_15_3_5");
    expr holds_15_4_5 = c.bool_const("holds_15_4_5");
    expr holds_15_5_5 = c.bool_const("holds_15_5_5");
    expr holds_15_6_5 = c.bool_const("holds_15_6_5");
    expr holds_15_7_5 = c.bool_const("holds_15_7_5");
    expr holds_15_8_5 = c.bool_const("holds_15_8_5");
    expr holds_15_9_5 = c.bool_const("holds_15_9_5");
    expr holds_15_10_5 = c.bool_const("holds_15_10_5");
    expr holds_15_11_5 = c.bool_const("holds_15_11_5");
    expr holds_15_12_5 = c.bool_const("holds_15_12_5");
    expr holds_15_13_5 = c.bool_const("holds_15_13_5");
    expr holds_15_14_5 = c.bool_const("holds_15_14_5");
    expr holds_15_15_5 = c.bool_const("holds_15_15_5");
    expr holds_15_16_5 = c.bool_const("holds_15_16_5");
    expr holds_15_17_5 = c.bool_const("holds_15_17_5");
    expr holds_15_18_5 = c.bool_const("holds_15_18_5");
    expr holds_15_19_5 = c.bool_const("holds_15_19_5");
    expr holds_15_20_5 = c.bool_const("holds_15_20_5");
    expr holds_15_21_5 = c.bool_const("holds_15_21_5");
    expr holds_15_22_5 = c.bool_const("holds_15_22_5");
    expr holds_15_23_5 = c.bool_const("holds_15_23_5");
    expr holds_16_0_5 = c.bool_const("holds_16_0_5");
    expr holds_16_1_5 = c.bool_const("holds_16_1_5");
    expr holds_16_2_5 = c.bool_const("holds_16_2_5");
    expr holds_16_3_5 = c.bool_const("holds_16_3_5");
    expr holds_16_4_5 = c.bool_const("holds_16_4_5");
    expr holds_16_5_5 = c.bool_const("holds_16_5_5");
    expr holds_16_6_5 = c.bool_const("holds_16_6_5");
    expr holds_16_7_5 = c.bool_const("holds_16_7_5");
    expr holds_16_8_5 = c.bool_const("holds_16_8_5");
    expr holds_16_9_5 = c.bool_const("holds_16_9_5");
    expr holds_16_10_5 = c.bool_const("holds_16_10_5");
    expr holds_16_11_5 = c.bool_const("holds_16_11_5");
    expr holds_16_12_5 = c.bool_const("holds_16_12_5");
    expr holds_16_13_5 = c.bool_const("holds_16_13_5");
    expr holds_16_14_5 = c.bool_const("holds_16_14_5");
    expr holds_16_15_5 = c.bool_const("holds_16_15_5");
    expr holds_16_16_5 = c.bool_const("holds_16_16_5");
    expr holds_16_17_5 = c.bool_const("holds_16_17_5");
    expr holds_16_18_5 = c.bool_const("holds_16_18_5");
    expr holds_16_19_5 = c.bool_const("holds_16_19_5");
    expr holds_16_20_5 = c.bool_const("holds_16_20_5");
    expr holds_16_21_5 = c.bool_const("holds_16_21_5");
    expr holds_16_22_5 = c.bool_const("holds_16_22_5");
    expr holds_16_23_5 = c.bool_const("holds_16_23_5");
    expr holds_17_0_5 = c.bool_const("holds_17_0_5");
    expr holds_17_1_5 = c.bool_const("holds_17_1_5");
    expr holds_17_2_5 = c.bool_const("holds_17_2_5");
    expr holds_17_3_5 = c.bool_const("holds_17_3_5");
    expr holds_17_4_5 = c.bool_const("holds_17_4_5");
    expr holds_17_5_5 = c.bool_const("holds_17_5_5");
    expr holds_17_6_5 = c.bool_const("holds_17_6_5");
    expr holds_17_7_5 = c.bool_const("holds_17_7_5");
    expr holds_17_8_5 = c.bool_const("holds_17_8_5");
    expr holds_17_9_5 = c.bool_const("holds_17_9_5");
    expr holds_17_10_5 = c.bool_const("holds_17_10_5");
    expr holds_17_11_5 = c.bool_const("holds_17_11_5");
    expr holds_17_12_5 = c.bool_const("holds_17_12_5");
    expr holds_17_13_5 = c.bool_const("holds_17_13_5");
    expr holds_17_14_5 = c.bool_const("holds_17_14_5");
    expr holds_17_15_5 = c.bool_const("holds_17_15_5");
    expr holds_17_16_5 = c.bool_const("holds_17_16_5");
    expr holds_17_17_5 = c.bool_const("holds_17_17_5");
    expr holds_17_18_5 = c.bool_const("holds_17_18_5");
    expr holds_17_19_5 = c.bool_const("holds_17_19_5");
    expr holds_17_20_5 = c.bool_const("holds_17_20_5");
    expr holds_17_21_5 = c.bool_const("holds_17_21_5");
    expr holds_17_22_5 = c.bool_const("holds_17_22_5");
    expr holds_17_23_5 = c.bool_const("holds_17_23_5");
    expr holds_18_0_5 = c.bool_const("holds_18_0_5");
    expr holds_18_1_5 = c.bool_const("holds_18_1_5");
    expr holds_18_2_5 = c.bool_const("holds_18_2_5");
    expr holds_18_3_5 = c.bool_const("holds_18_3_5");
    expr holds_18_4_5 = c.bool_const("holds_18_4_5");
    expr holds_18_5_5 = c.bool_const("holds_18_5_5");
    expr holds_18_6_5 = c.bool_const("holds_18_6_5");
    expr holds_18_7_5 = c.bool_const("holds_18_7_5");
    expr holds_18_8_5 = c.bool_const("holds_18_8_5");
    expr holds_18_9_5 = c.bool_const("holds_18_9_5");
    expr holds_18_10_5 = c.bool_const("holds_18_10_5");
    expr holds_18_11_5 = c.bool_const("holds_18_11_5");
    expr holds_18_12_5 = c.bool_const("holds_18_12_5");
    expr holds_18_13_5 = c.bool_const("holds_18_13_5");
    expr holds_18_14_5 = c.bool_const("holds_18_14_5");
    expr holds_18_15_5 = c.bool_const("holds_18_15_5");
    expr holds_18_16_5 = c.bool_const("holds_18_16_5");
    expr holds_18_17_5 = c.bool_const("holds_18_17_5");
    expr holds_18_18_5 = c.bool_const("holds_18_18_5");
    expr holds_18_19_5 = c.bool_const("holds_18_19_5");
    expr holds_18_20_5 = c.bool_const("holds_18_20_5");
    expr holds_18_21_5 = c.bool_const("holds_18_21_5");
    expr holds_18_22_5 = c.bool_const("holds_18_22_5");
    expr holds_18_23_5 = c.bool_const("holds_18_23_5");
    expr holds_19_0_5 = c.bool_const("holds_19_0_5");
    expr holds_19_1_5 = c.bool_const("holds_19_1_5");
    expr holds_19_2_5 = c.bool_const("holds_19_2_5");
    expr holds_19_3_5 = c.bool_const("holds_19_3_5");
    expr holds_19_4_5 = c.bool_const("holds_19_4_5");
    expr holds_19_5_5 = c.bool_const("holds_19_5_5");
    expr holds_19_6_5 = c.bool_const("holds_19_6_5");
    expr holds_19_7_5 = c.bool_const("holds_19_7_5");
    expr holds_19_8_5 = c.bool_const("holds_19_8_5");
    expr holds_19_9_5 = c.bool_const("holds_19_9_5");
    expr holds_19_10_5 = c.bool_const("holds_19_10_5");
    expr holds_19_11_5 = c.bool_const("holds_19_11_5");
    expr holds_19_12_5 = c.bool_const("holds_19_12_5");
    expr holds_19_13_5 = c.bool_const("holds_19_13_5");
    expr holds_19_14_5 = c.bool_const("holds_19_14_5");
    expr holds_19_15_5 = c.bool_const("holds_19_15_5");
    expr holds_19_16_5 = c.bool_const("holds_19_16_5");
    expr holds_19_17_5 = c.bool_const("holds_19_17_5");
    expr holds_19_18_5 = c.bool_const("holds_19_18_5");
    expr holds_19_19_5 = c.bool_const("holds_19_19_5");
    expr holds_19_20_5 = c.bool_const("holds_19_20_5");
    expr holds_19_21_5 = c.bool_const("holds_19_21_5");
    expr holds_19_22_5 = c.bool_const("holds_19_22_5");
    expr holds_19_23_5 = c.bool_const("holds_19_23_5");
    expr holds_20_0_5 = c.bool_const("holds_20_0_5");
    expr holds_20_1_5 = c.bool_const("holds_20_1_5");
    expr holds_20_2_5 = c.bool_const("holds_20_2_5");
    expr holds_20_3_5 = c.bool_const("holds_20_3_5");
    expr holds_20_4_5 = c.bool_const("holds_20_4_5");
    expr holds_20_5_5 = c.bool_const("holds_20_5_5");
    expr holds_20_6_5 = c.bool_const("holds_20_6_5");
    expr holds_20_7_5 = c.bool_const("holds_20_7_5");
    expr holds_20_8_5 = c.bool_const("holds_20_8_5");
    expr holds_20_9_5 = c.bool_const("holds_20_9_5");
    expr holds_20_10_5 = c.bool_const("holds_20_10_5");
    expr holds_20_11_5 = c.bool_const("holds_20_11_5");
    expr holds_20_12_5 = c.bool_const("holds_20_12_5");
    expr holds_20_13_5 = c.bool_const("holds_20_13_5");
    expr holds_20_14_5 = c.bool_const("holds_20_14_5");
    expr holds_20_15_5 = c.bool_const("holds_20_15_5");
    expr holds_20_16_5 = c.bool_const("holds_20_16_5");
    expr holds_20_17_5 = c.bool_const("holds_20_17_5");
    expr holds_20_18_5 = c.bool_const("holds_20_18_5");
    expr holds_20_19_5 = c.bool_const("holds_20_19_5");
    expr holds_20_20_5 = c.bool_const("holds_20_20_5");
    expr holds_20_21_5 = c.bool_const("holds_20_21_5");
    expr holds_20_22_5 = c.bool_const("holds_20_22_5");
    expr holds_20_23_5 = c.bool_const("holds_20_23_5");
    expr holds_21_0_5 = c.bool_const("holds_21_0_5");
    expr holds_21_1_5 = c.bool_const("holds_21_1_5");
    expr holds_21_2_5 = c.bool_const("holds_21_2_5");
    expr holds_21_3_5 = c.bool_const("holds_21_3_5");
    expr holds_21_4_5 = c.bool_const("holds_21_4_5");
    expr holds_21_5_5 = c.bool_const("holds_21_5_5");
    expr holds_21_6_5 = c.bool_const("holds_21_6_5");
    expr holds_21_7_5 = c.bool_const("holds_21_7_5");
    expr holds_21_8_5 = c.bool_const("holds_21_8_5");
    expr holds_21_9_5 = c.bool_const("holds_21_9_5");
    expr holds_21_10_5 = c.bool_const("holds_21_10_5");
    expr holds_21_11_5 = c.bool_const("holds_21_11_5");
    expr holds_21_12_5 = c.bool_const("holds_21_12_5");
    expr holds_21_13_5 = c.bool_const("holds_21_13_5");
    expr holds_21_14_5 = c.bool_const("holds_21_14_5");
    expr holds_21_15_5 = c.bool_const("holds_21_15_5");
    expr holds_21_16_5 = c.bool_const("holds_21_16_5");
    expr holds_21_17_5 = c.bool_const("holds_21_17_5");
    expr holds_21_18_5 = c.bool_const("holds_21_18_5");
    expr holds_21_19_5 = c.bool_const("holds_21_19_5");
    expr holds_21_20_5 = c.bool_const("holds_21_20_5");
    expr holds_21_21_5 = c.bool_const("holds_21_21_5");
    expr holds_21_22_5 = c.bool_const("holds_21_22_5");
    expr holds_21_23_5 = c.bool_const("holds_21_23_5");
    expr holds_22_0_5 = c.bool_const("holds_22_0_5");
    expr holds_22_1_5 = c.bool_const("holds_22_1_5");
    expr holds_22_2_5 = c.bool_const("holds_22_2_5");
    expr holds_22_3_5 = c.bool_const("holds_22_3_5");
    expr holds_22_4_5 = c.bool_const("holds_22_4_5");
    expr holds_22_5_5 = c.bool_const("holds_22_5_5");
    expr holds_22_6_5 = c.bool_const("holds_22_6_5");
    expr holds_22_7_5 = c.bool_const("holds_22_7_5");
    expr holds_22_8_5 = c.bool_const("holds_22_8_5");
    expr holds_22_9_5 = c.bool_const("holds_22_9_5");
    expr holds_22_10_5 = c.bool_const("holds_22_10_5");
    expr holds_22_11_5 = c.bool_const("holds_22_11_5");
    expr holds_22_12_5 = c.bool_const("holds_22_12_5");
    expr holds_22_13_5 = c.bool_const("holds_22_13_5");
    expr holds_22_14_5 = c.bool_const("holds_22_14_5");
    expr holds_22_15_5 = c.bool_const("holds_22_15_5");
    expr holds_22_16_5 = c.bool_const("holds_22_16_5");
    expr holds_22_17_5 = c.bool_const("holds_22_17_5");
    expr holds_22_18_5 = c.bool_const("holds_22_18_5");
    expr holds_22_19_5 = c.bool_const("holds_22_19_5");
    expr holds_22_20_5 = c.bool_const("holds_22_20_5");
    expr holds_22_21_5 = c.bool_const("holds_22_21_5");
    expr holds_22_22_5 = c.bool_const("holds_22_22_5");
    expr holds_22_23_5 = c.bool_const("holds_22_23_5");
    expr holds_23_0_5 = c.bool_const("holds_23_0_5");
    expr holds_23_1_5 = c.bool_const("holds_23_1_5");
    expr holds_23_2_5 = c.bool_const("holds_23_2_5");
    expr holds_23_3_5 = c.bool_const("holds_23_3_5");
    expr holds_23_4_5 = c.bool_const("holds_23_4_5");
    expr holds_23_5_5 = c.bool_const("holds_23_5_5");
    expr holds_23_6_5 = c.bool_const("holds_23_6_5");
    expr holds_23_7_5 = c.bool_const("holds_23_7_5");
    expr holds_23_8_5 = c.bool_const("holds_23_8_5");
    expr holds_23_9_5 = c.bool_const("holds_23_9_5");
    expr holds_23_10_5 = c.bool_const("holds_23_10_5");
    expr holds_23_11_5 = c.bool_const("holds_23_11_5");
    expr holds_23_12_5 = c.bool_const("holds_23_12_5");
    expr holds_23_13_5 = c.bool_const("holds_23_13_5");
    expr holds_23_14_5 = c.bool_const("holds_23_14_5");
    expr holds_23_15_5 = c.bool_const("holds_23_15_5");
    expr holds_23_16_5 = c.bool_const("holds_23_16_5");
    expr holds_23_17_5 = c.bool_const("holds_23_17_5");
    expr holds_23_18_5 = c.bool_const("holds_23_18_5");
    expr holds_23_19_5 = c.bool_const("holds_23_19_5");
    expr holds_23_20_5 = c.bool_const("holds_23_20_5");
    expr holds_23_21_5 = c.bool_const("holds_23_21_5");
    expr holds_23_22_5 = c.bool_const("holds_23_22_5");
    expr holds_23_23_5 = c.bool_const("holds_23_23_5");
    expr holds_0_0_4 = c.bool_const("holds_0_0_4");
    b = (holds_0_0_4 ^ holds_0_0_5);
    s.add(b);    expr holds_0_1_4 = c.bool_const("holds_0_1_4");
    b = (holds_0_1_4 ^ holds_0_1_5);
    s.add(b);    expr holds_0_2_4 = c.bool_const("holds_0_2_4");
    b = (holds_0_2_4 ^ holds_0_2_5);
    s.add(b);    expr holds_0_3_4 = c.bool_const("holds_0_3_4");
    b = (holds_0_3_4 ^ holds_0_3_5);
    s.add(b);    expr holds_0_4_4 = c.bool_const("holds_0_4_4");
    b = (holds_0_4_4 ^ holds_0_4_5);
    s.add(b);    expr holds_0_5_4 = c.bool_const("holds_0_5_4");
    b = (holds_0_5_4 ^ holds_0_5_5);
    s.add(b);    expr holds_0_6_4 = c.bool_const("holds_0_6_4");
    b = (holds_0_6_4 ^ holds_0_6_5);
    s.add(b);    expr holds_0_7_4 = c.bool_const("holds_0_7_4");
    b = (holds_0_7_4 ^ holds_0_7_5);
    s.add(b);    expr holds_0_8_4 = c.bool_const("holds_0_8_4");
    b = (holds_0_8_4 ^ holds_0_8_5);
    s.add(b);    expr holds_0_9_4 = c.bool_const("holds_0_9_4");
    b = (holds_0_9_4 ^ holds_0_9_5);
    s.add(b);    expr holds_0_10_4 = c.bool_const("holds_0_10_4");
    b = (holds_0_10_4 ^ holds_0_10_5);
    s.add(b);    expr holds_0_11_4 = c.bool_const("holds_0_11_4");
    b = (holds_0_11_4 ^ holds_0_11_5);
    s.add(b);    expr holds_0_12_4 = c.bool_const("holds_0_12_4");
    b = (holds_0_12_4 ^ holds_0_12_5);
    s.add(b);    expr holds_0_13_4 = c.bool_const("holds_0_13_4");
    b = (holds_0_13_4 ^ holds_0_13_5);
    s.add(b);    expr holds_0_14_4 = c.bool_const("holds_0_14_4");
    b = (holds_0_14_4 ^ holds_0_14_5);
    s.add(b);    expr holds_0_15_4 = c.bool_const("holds_0_15_4");
    b = (holds_0_15_4 ^ holds_0_15_5);
    s.add(b);    expr holds_0_16_4 = c.bool_const("holds_0_16_4");
    b = (holds_0_16_4 ^ holds_0_16_5);
    s.add(b);    expr holds_0_17_4 = c.bool_const("holds_0_17_4");
    b = (holds_0_17_4 ^ holds_0_17_5);
    s.add(b);    expr holds_0_18_4 = c.bool_const("holds_0_18_4");
    b = (holds_0_18_4 ^ holds_0_18_5);
    s.add(b);    expr holds_0_19_4 = c.bool_const("holds_0_19_4");
    b = (holds_0_19_4 ^ holds_0_19_5);
    s.add(b);    expr holds_0_20_4 = c.bool_const("holds_0_20_4");
    b = (holds_0_20_4 ^ holds_0_20_5);
    s.add(b);    expr holds_0_21_4 = c.bool_const("holds_0_21_4");
    b = (holds_0_21_4 ^ holds_0_21_5);
    s.add(b);    expr holds_0_22_4 = c.bool_const("holds_0_22_4");
    b = (holds_0_22_4 ^ holds_0_22_5);
    s.add(b);    expr holds_0_23_4 = c.bool_const("holds_0_23_4");
    b = (holds_0_23_4 ^ holds_0_23_5);
    s.add(b);    expr holds_1_0_4 = c.bool_const("holds_1_0_4");
    b = (holds_1_0_4 ^ holds_1_0_5);
    s.add(b);    expr holds_1_1_4 = c.bool_const("holds_1_1_4");
    b = (holds_1_1_4 ^ holds_1_1_5);
    s.add(b);    expr holds_1_2_4 = c.bool_const("holds_1_2_4");
    b = (holds_1_2_4 ^ holds_1_2_5);
    s.add(b);    expr holds_1_3_4 = c.bool_const("holds_1_3_4");
    b = (holds_1_3_4 ^ holds_1_3_5);
    s.add(b);    expr holds_1_4_4 = c.bool_const("holds_1_4_4");
    b = (holds_1_4_4 ^ holds_1_4_5);
    s.add(b);    expr holds_1_5_4 = c.bool_const("holds_1_5_4");
    b = (holds_1_5_4 ^ holds_1_5_5);
    s.add(b);    expr holds_1_6_4 = c.bool_const("holds_1_6_4");
    b = (holds_1_6_4 ^ holds_1_6_5);
    s.add(b);    expr holds_1_7_4 = c.bool_const("holds_1_7_4");
    b = (holds_1_7_4 ^ holds_1_7_5);
    s.add(b);    expr holds_1_8_4 = c.bool_const("holds_1_8_4");
    b = (holds_1_8_4 ^ holds_1_8_5);
    s.add(b);    expr holds_1_9_4 = c.bool_const("holds_1_9_4");
    b = (holds_1_9_4 ^ holds_1_9_5);
    s.add(b);    expr holds_1_10_4 = c.bool_const("holds_1_10_4");
    b = (holds_1_10_4 ^ holds_1_10_5);
    s.add(b);    expr holds_1_11_4 = c.bool_const("holds_1_11_4");
    b = (holds_1_11_4 ^ holds_1_11_5);
    s.add(b);    expr holds_1_12_4 = c.bool_const("holds_1_12_4");
    b = (holds_1_12_4 ^ holds_1_12_5);
    s.add(b);    expr holds_1_13_4 = c.bool_const("holds_1_13_4");
    b = (holds_1_13_4 ^ holds_1_13_5);
    s.add(b);    expr holds_1_14_4 = c.bool_const("holds_1_14_4");
    b = (holds_1_14_4 ^ holds_1_14_5);
    s.add(b);    expr holds_1_15_4 = c.bool_const("holds_1_15_4");
    b = (holds_1_15_4 ^ holds_1_15_5);
    s.add(b);    expr holds_1_16_4 = c.bool_const("holds_1_16_4");
    b = (holds_1_16_4 ^ holds_1_16_5);
    s.add(b);    expr holds_1_17_4 = c.bool_const("holds_1_17_4");
    b = (holds_1_17_4 ^ holds_1_17_5);
    s.add(b);    expr holds_1_18_4 = c.bool_const("holds_1_18_4");
    b = (holds_1_18_4 ^ holds_1_18_5);
    s.add(b);    expr holds_1_19_4 = c.bool_const("holds_1_19_4");
    b = (holds_1_19_4 ^ holds_1_19_5);
    s.add(b);    expr holds_1_20_4 = c.bool_const("holds_1_20_4");
    b = (holds_1_20_4 ^ holds_1_20_5);
    s.add(b);    expr holds_1_21_4 = c.bool_const("holds_1_21_4");
    b = (holds_1_21_4 ^ holds_1_21_5);
    s.add(b);    expr holds_1_22_4 = c.bool_const("holds_1_22_4");
    b = (holds_1_22_4 ^ holds_1_22_5);
    s.add(b);    expr holds_1_23_4 = c.bool_const("holds_1_23_4");
    b = (holds_1_23_4 ^ holds_1_23_5);
    s.add(b);    expr holds_2_0_4 = c.bool_const("holds_2_0_4");
    b = (holds_2_0_4 ^ holds_2_0_5);
    s.add(b);    expr holds_2_1_4 = c.bool_const("holds_2_1_4");
    b = (holds_2_1_4 ^ holds_2_1_5);
    s.add(b);    expr holds_2_2_4 = c.bool_const("holds_2_2_4");
    b = (holds_2_2_4 ^ holds_2_2_5);
    s.add(b);    expr holds_2_3_4 = c.bool_const("holds_2_3_4");
    b = (holds_2_3_4 ^ holds_2_3_5);
    s.add(b);    expr holds_2_4_4 = c.bool_const("holds_2_4_4");
    b = (holds_2_4_4 ^ holds_2_4_5);
    s.add(b);    expr holds_2_5_4 = c.bool_const("holds_2_5_4");
    b = (holds_2_5_4 ^ holds_2_5_5);
    s.add(b);    expr holds_2_6_4 = c.bool_const("holds_2_6_4");
    b = (holds_2_6_4 ^ holds_2_6_5);
    s.add(b);    expr holds_2_7_4 = c.bool_const("holds_2_7_4");
    b = (holds_2_7_4 ^ holds_2_7_5);
    s.add(b);    expr holds_2_8_4 = c.bool_const("holds_2_8_4");
    b = (holds_2_8_4 ^ holds_2_8_5);
    s.add(b);    expr holds_2_9_4 = c.bool_const("holds_2_9_4");
    b = (holds_2_9_4 ^ holds_2_9_5);
    s.add(b);    expr holds_2_10_4 = c.bool_const("holds_2_10_4");
    b = (holds_2_10_4 ^ holds_2_10_5);
    s.add(b);    expr holds_2_11_4 = c.bool_const("holds_2_11_4");
    b = (holds_2_11_4 ^ holds_2_11_5);
    s.add(b);    expr holds_2_12_4 = c.bool_const("holds_2_12_4");
    b = (holds_2_12_4 ^ holds_2_12_5);
    s.add(b);    expr holds_2_13_4 = c.bool_const("holds_2_13_4");
    b = (holds_2_13_4 ^ holds_2_13_5);
    s.add(b);    expr holds_2_14_4 = c.bool_const("holds_2_14_4");
    b = (holds_2_14_4 ^ holds_2_14_5);
    s.add(b);    expr holds_2_15_4 = c.bool_const("holds_2_15_4");
    b = (holds_2_15_4 ^ holds_2_15_5);
    s.add(b);    expr holds_2_16_4 = c.bool_const("holds_2_16_4");
    b = (holds_2_16_4 ^ holds_2_16_5);
    s.add(b);    expr holds_2_17_4 = c.bool_const("holds_2_17_4");
    b = (holds_2_17_4 ^ holds_2_17_5);
    s.add(b);    expr holds_2_18_4 = c.bool_const("holds_2_18_4");
    b = (holds_2_18_4 ^ holds_2_18_5);
    s.add(b);    expr holds_2_19_4 = c.bool_const("holds_2_19_4");
    b = (holds_2_19_4 ^ holds_2_19_5);
    s.add(b);    expr holds_2_20_4 = c.bool_const("holds_2_20_4");
    b = (holds_2_20_4 ^ holds_2_20_5);
    s.add(b);    expr holds_2_21_4 = c.bool_const("holds_2_21_4");
    b = (holds_2_21_4 ^ holds_2_21_5);
    s.add(b);    expr holds_2_22_4 = c.bool_const("holds_2_22_4");
    b = (holds_2_22_4 ^ holds_2_22_5);
    s.add(b);    expr holds_2_23_4 = c.bool_const("holds_2_23_4");
    b = (holds_2_23_4 ^ holds_2_23_5);
    s.add(b);    expr holds_3_0_4 = c.bool_const("holds_3_0_4");
    b = (holds_3_0_4 ^ holds_3_0_5);
    s.add(b);    expr holds_3_1_4 = c.bool_const("holds_3_1_4");
    b = (holds_3_1_4 ^ holds_3_1_5);
    s.add(b);    expr holds_3_2_4 = c.bool_const("holds_3_2_4");
    b = (holds_3_2_4 ^ holds_3_2_5);
    s.add(b);    expr holds_3_3_4 = c.bool_const("holds_3_3_4");
    b = (holds_3_3_4 ^ holds_3_3_5);
    s.add(b);    expr holds_3_4_4 = c.bool_const("holds_3_4_4");
    b = (holds_3_4_4 ^ holds_3_4_5);
    s.add(b);    expr holds_3_5_4 = c.bool_const("holds_3_5_4");
    b = (holds_3_5_4 ^ holds_3_5_5);
    s.add(b);    expr holds_3_6_4 = c.bool_const("holds_3_6_4");
    b = (holds_3_6_4 ^ holds_3_6_5);
    s.add(b);    expr holds_3_7_4 = c.bool_const("holds_3_7_4");
    b = (holds_3_7_4 ^ holds_3_7_5);
    s.add(b);    expr holds_3_8_4 = c.bool_const("holds_3_8_4");
    b = (holds_3_8_4 ^ holds_3_8_5);
    s.add(b);    expr holds_3_9_4 = c.bool_const("holds_3_9_4");
    b = (holds_3_9_4 ^ holds_3_9_5);
    s.add(b);    expr holds_3_10_4 = c.bool_const("holds_3_10_4");
    b = (holds_3_10_4 ^ holds_3_10_5);
    s.add(b);    expr holds_3_11_4 = c.bool_const("holds_3_11_4");
    b = (holds_3_11_4 ^ holds_3_11_5);
    s.add(b);    expr holds_3_12_4 = c.bool_const("holds_3_12_4");
    b = (holds_3_12_4 ^ holds_3_12_5);
    s.add(b);    expr holds_3_13_4 = c.bool_const("holds_3_13_4");
    b = (holds_3_13_4 ^ holds_3_13_5);
    s.add(b);    expr holds_3_14_4 = c.bool_const("holds_3_14_4");
    b = (holds_3_14_4 ^ holds_3_14_5);
    s.add(b);    expr holds_3_15_4 = c.bool_const("holds_3_15_4");
    b = (holds_3_15_4 ^ holds_3_15_5);
    s.add(b);    expr holds_3_16_4 = c.bool_const("holds_3_16_4");
    b = (holds_3_16_4 ^ holds_3_16_5);
    s.add(b);    expr holds_3_17_4 = c.bool_const("holds_3_17_4");
    b = (holds_3_17_4 ^ holds_3_17_5);
    s.add(b);    expr holds_3_18_4 = c.bool_const("holds_3_18_4");
    b = (holds_3_18_4 ^ holds_3_18_5);
    s.add(b);    expr holds_3_19_4 = c.bool_const("holds_3_19_4");
    b = (holds_3_19_4 ^ holds_3_19_5);
    s.add(b);    expr holds_3_20_4 = c.bool_const("holds_3_20_4");
    b = (holds_3_20_4 ^ holds_3_20_5);
    s.add(b);    expr holds_3_21_4 = c.bool_const("holds_3_21_4");
    b = (holds_3_21_4 ^ holds_3_21_5);
    s.add(b);    expr holds_3_22_4 = c.bool_const("holds_3_22_4");
    b = (holds_3_22_4 ^ holds_3_22_5);
    s.add(b);    expr holds_3_23_4 = c.bool_const("holds_3_23_4");
    b = (holds_3_23_4 ^ holds_3_23_5);
    s.add(b);    expr holds_4_0_4 = c.bool_const("holds_4_0_4");
    b = (holds_4_0_4 ^ holds_4_0_5);
    s.add(b);    expr holds_4_1_4 = c.bool_const("holds_4_1_4");
    b = (holds_4_1_4 ^ holds_4_1_5);
    s.add(b);    expr holds_4_2_4 = c.bool_const("holds_4_2_4");
    b = (holds_4_2_4 ^ holds_4_2_5);
    s.add(b);    expr holds_4_3_4 = c.bool_const("holds_4_3_4");
    b = (holds_4_3_4 ^ holds_4_3_5);
    s.add(b);    expr holds_4_4_4 = c.bool_const("holds_4_4_4");
    b = (holds_4_4_4 ^ holds_4_4_5);
    s.add(b);    expr holds_4_5_4 = c.bool_const("holds_4_5_4");
    b = (holds_4_5_4 ^ holds_4_5_5);
    s.add(b);    expr holds_4_6_4 = c.bool_const("holds_4_6_4");
    b = (holds_4_6_4 ^ holds_4_6_5);
    s.add(b);    expr holds_4_7_4 = c.bool_const("holds_4_7_4");
    b = (holds_4_7_4 ^ holds_4_7_5);
    s.add(b);    expr holds_4_8_4 = c.bool_const("holds_4_8_4");
    b = (holds_4_8_4 ^ holds_4_8_5);
    s.add(b);    expr holds_4_9_4 = c.bool_const("holds_4_9_4");
    b = (holds_4_9_4 ^ holds_4_9_5);
    s.add(b);    expr holds_4_10_4 = c.bool_const("holds_4_10_4");
    b = (holds_4_10_4 ^ holds_4_10_5);
    s.add(b);    expr holds_4_11_4 = c.bool_const("holds_4_11_4");
    b = (holds_4_11_4 ^ holds_4_11_5);
    s.add(b);    expr holds_4_12_4 = c.bool_const("holds_4_12_4");
    b = (holds_4_12_4 ^ holds_4_12_5);
    s.add(b);    expr holds_4_13_4 = c.bool_const("holds_4_13_4");
    b = (holds_4_13_4 ^ holds_4_13_5);
    s.add(b);    expr holds_4_14_4 = c.bool_const("holds_4_14_4");
    b = (holds_4_14_4 ^ holds_4_14_5);
    s.add(b);    expr holds_4_15_4 = c.bool_const("holds_4_15_4");
    b = (holds_4_15_4 ^ holds_4_15_5);
    s.add(b);    expr holds_4_16_4 = c.bool_const("holds_4_16_4");
    b = (holds_4_16_4 ^ holds_4_16_5);
    s.add(b);    expr holds_4_17_4 = c.bool_const("holds_4_17_4");
    b = (holds_4_17_4 ^ holds_4_17_5);
    s.add(b);    expr holds_4_18_4 = c.bool_const("holds_4_18_4");
    b = (holds_4_18_4 ^ holds_4_18_5);
    s.add(b);    expr holds_4_19_4 = c.bool_const("holds_4_19_4");
    b = (holds_4_19_4 ^ holds_4_19_5);
    s.add(b);    expr holds_4_20_4 = c.bool_const("holds_4_20_4");
    b = (holds_4_20_4 ^ holds_4_20_5);
    s.add(b);    expr holds_4_21_4 = c.bool_const("holds_4_21_4");
    b = (holds_4_21_4 ^ holds_4_21_5);
    s.add(b);    expr holds_4_22_4 = c.bool_const("holds_4_22_4");
    b = (holds_4_22_4 ^ holds_4_22_5);
    s.add(b);    expr holds_4_23_4 = c.bool_const("holds_4_23_4");
    b = (holds_4_23_4 ^ holds_4_23_5);
    s.add(b);    expr holds_5_0_4 = c.bool_const("holds_5_0_4");
    b = (holds_5_0_4 ^ holds_5_0_5);
    s.add(b);    expr holds_5_1_4 = c.bool_const("holds_5_1_4");
    b = (holds_5_1_4 ^ holds_5_1_5);
    s.add(b);    expr holds_5_2_4 = c.bool_const("holds_5_2_4");
    b = (holds_5_2_4 ^ holds_5_2_5);
    s.add(b);    expr holds_5_3_4 = c.bool_const("holds_5_3_4");
    b = (holds_5_3_4 ^ holds_5_3_5);
    s.add(b);    expr holds_5_4_4 = c.bool_const("holds_5_4_4");
    b = (holds_5_4_4 ^ holds_5_4_5);
    s.add(b);    expr holds_5_5_4 = c.bool_const("holds_5_5_4");
    b = (holds_5_5_4 ^ holds_5_5_5);
    s.add(b);    expr holds_5_6_4 = c.bool_const("holds_5_6_4");
    b = (holds_5_6_4 ^ holds_5_6_5);
    s.add(b);    expr holds_5_7_4 = c.bool_const("holds_5_7_4");
    b = (holds_5_7_4 ^ holds_5_7_5);
    s.add(b);    expr holds_5_8_4 = c.bool_const("holds_5_8_4");
    b = (holds_5_8_4 ^ holds_5_8_5);
    s.add(b);    expr holds_5_9_4 = c.bool_const("holds_5_9_4");
    b = (holds_5_9_4 ^ holds_5_9_5);
    s.add(b);    expr holds_5_10_4 = c.bool_const("holds_5_10_4");
    b = (holds_5_10_4 ^ holds_5_10_5);
    s.add(b);    expr holds_5_11_4 = c.bool_const("holds_5_11_4");
    b = (holds_5_11_4 ^ holds_5_11_5);
    s.add(b);    expr holds_5_12_4 = c.bool_const("holds_5_12_4");
    b = (holds_5_12_4 ^ holds_5_12_5);
    s.add(b);    expr holds_5_13_4 = c.bool_const("holds_5_13_4");
    b = (holds_5_13_4 ^ holds_5_13_5);
    s.add(b);    expr holds_5_14_4 = c.bool_const("holds_5_14_4");
    b = (holds_5_14_4 ^ holds_5_14_5);
    s.add(b);    expr holds_5_15_4 = c.bool_const("holds_5_15_4");
    b = (holds_5_15_4 ^ holds_5_15_5);
    s.add(b);    expr holds_5_16_4 = c.bool_const("holds_5_16_4");
    b = (holds_5_16_4 ^ holds_5_16_5);
    s.add(b);    expr holds_5_17_4 = c.bool_const("holds_5_17_4");
    b = (holds_5_17_4 ^ holds_5_17_5);
    s.add(b);    expr holds_5_18_4 = c.bool_const("holds_5_18_4");
    b = (holds_5_18_4 ^ holds_5_18_5);
    s.add(b);    expr holds_5_19_4 = c.bool_const("holds_5_19_4");
    b = (holds_5_19_4 ^ holds_5_19_5);
    s.add(b);    expr holds_5_20_4 = c.bool_const("holds_5_20_4");
    b = (holds_5_20_4 ^ holds_5_20_5);
    s.add(b);    expr holds_5_21_4 = c.bool_const("holds_5_21_4");
    b = (holds_5_21_4 ^ holds_5_21_5);
    s.add(b);    expr holds_5_22_4 = c.bool_const("holds_5_22_4");
    b = (holds_5_22_4 ^ holds_5_22_5);
    s.add(b);    expr holds_5_23_4 = c.bool_const("holds_5_23_4");
    b = (holds_5_23_4 ^ holds_5_23_5);
    s.add(b);    expr holds_6_0_4 = c.bool_const("holds_6_0_4");
    b = (holds_6_0_4 ^ holds_6_0_5);
    s.add(b);    expr holds_6_1_4 = c.bool_const("holds_6_1_4");
    b = (holds_6_1_4 ^ holds_6_1_5);
    s.add(b);    expr holds_6_2_4 = c.bool_const("holds_6_2_4");
    b = (holds_6_2_4 ^ holds_6_2_5);
    s.add(b);    expr holds_6_3_4 = c.bool_const("holds_6_3_4");
    b = (holds_6_3_4 ^ holds_6_3_5);
    s.add(b);    expr holds_6_4_4 = c.bool_const("holds_6_4_4");
    b = (holds_6_4_4 ^ holds_6_4_5);
    s.add(b);    expr holds_6_5_4 = c.bool_const("holds_6_5_4");
    b = (holds_6_5_4 ^ holds_6_5_5);
    s.add(b);    expr holds_6_6_4 = c.bool_const("holds_6_6_4");
    b = (holds_6_6_4 ^ holds_6_6_5);
    s.add(b);    expr holds_6_7_4 = c.bool_const("holds_6_7_4");
    b = (holds_6_7_4 ^ holds_6_7_5);
    s.add(b);    expr holds_6_8_4 = c.bool_const("holds_6_8_4");
    b = (holds_6_8_4 ^ holds_6_8_5);
    s.add(b);    expr holds_6_9_4 = c.bool_const("holds_6_9_4");
    b = (holds_6_9_4 ^ holds_6_9_5);
    s.add(b);    expr holds_6_10_4 = c.bool_const("holds_6_10_4");
    b = (holds_6_10_4 ^ holds_6_10_5);
    s.add(b);    expr holds_6_11_4 = c.bool_const("holds_6_11_4");
    b = (holds_6_11_4 ^ holds_6_11_5);
    s.add(b);    expr holds_6_12_4 = c.bool_const("holds_6_12_4");
    b = (holds_6_12_4 ^ holds_6_12_5);
    s.add(b);    expr holds_6_13_4 = c.bool_const("holds_6_13_4");
    b = (holds_6_13_4 ^ holds_6_13_5);
    s.add(b);    expr holds_6_14_4 = c.bool_const("holds_6_14_4");
    b = (holds_6_14_4 ^ holds_6_14_5);
    s.add(b);    expr holds_6_15_4 = c.bool_const("holds_6_15_4");
    b = (holds_6_15_4 ^ holds_6_15_5);
    s.add(b);    expr holds_6_16_4 = c.bool_const("holds_6_16_4");
    b = (holds_6_16_4 ^ holds_6_16_5);
    s.add(b);    expr holds_6_17_4 = c.bool_const("holds_6_17_4");
    b = (holds_6_17_4 ^ holds_6_17_5);
    s.add(b);    expr holds_6_18_4 = c.bool_const("holds_6_18_4");
    b = (holds_6_18_4 ^ holds_6_18_5);
    s.add(b);    expr holds_6_19_4 = c.bool_const("holds_6_19_4");
    b = (holds_6_19_4 ^ holds_6_19_5);
    s.add(b);    expr holds_6_20_4 = c.bool_const("holds_6_20_4");
    b = (holds_6_20_4 ^ holds_6_20_5);
    s.add(b);    expr holds_6_21_4 = c.bool_const("holds_6_21_4");
    b = (holds_6_21_4 ^ holds_6_21_5);
    s.add(b);    expr holds_6_22_4 = c.bool_const("holds_6_22_4");
    b = (holds_6_22_4 ^ holds_6_22_5);
    s.add(b);    expr holds_6_23_4 = c.bool_const("holds_6_23_4");
    b = (holds_6_23_4 ^ holds_6_23_5);
    s.add(b);    expr holds_7_0_4 = c.bool_const("holds_7_0_4");
    b = (holds_7_0_4 ^ holds_7_0_5);
    s.add(b);    expr holds_7_1_4 = c.bool_const("holds_7_1_4");
    b = (holds_7_1_4 ^ holds_7_1_5);
    s.add(b);    expr holds_7_2_4 = c.bool_const("holds_7_2_4");
    b = (holds_7_2_4 ^ holds_7_2_5);
    s.add(b);    expr holds_7_3_4 = c.bool_const("holds_7_3_4");
    b = (holds_7_3_4 ^ holds_7_3_5);
    s.add(b);    expr holds_7_4_4 = c.bool_const("holds_7_4_4");
    b = (holds_7_4_4 ^ holds_7_4_5);
    s.add(b);    expr holds_7_5_4 = c.bool_const("holds_7_5_4");
    b = (holds_7_5_4 ^ holds_7_5_5);
    s.add(b);    expr holds_7_6_4 = c.bool_const("holds_7_6_4");
    b = (holds_7_6_4 ^ holds_7_6_5);
    s.add(b);    expr holds_7_7_4 = c.bool_const("holds_7_7_4");
    b = (holds_7_7_4 ^ holds_7_7_5);
    s.add(b);    expr holds_7_8_4 = c.bool_const("holds_7_8_4");
    b = (holds_7_8_4 ^ holds_7_8_5);
    s.add(b);    expr holds_7_9_4 = c.bool_const("holds_7_9_4");
    b = (holds_7_9_4 ^ holds_7_9_5);
    s.add(b);    expr holds_7_10_4 = c.bool_const("holds_7_10_4");
    b = (holds_7_10_4 ^ holds_7_10_5);
    s.add(b);    expr holds_7_11_4 = c.bool_const("holds_7_11_4");
    b = (holds_7_11_4 ^ holds_7_11_5);
    s.add(b);    expr holds_7_12_4 = c.bool_const("holds_7_12_4");
    b = (holds_7_12_4 ^ holds_7_12_5);
    s.add(b);    expr holds_7_13_4 = c.bool_const("holds_7_13_4");
    b = (holds_7_13_4 ^ holds_7_13_5);
    s.add(b);    expr holds_7_14_4 = c.bool_const("holds_7_14_4");
    b = (holds_7_14_4 ^ holds_7_14_5);
    s.add(b);    expr holds_7_15_4 = c.bool_const("holds_7_15_4");
    b = (holds_7_15_4 ^ holds_7_15_5);
    s.add(b);    expr holds_7_16_4 = c.bool_const("holds_7_16_4");
    b = (holds_7_16_4 ^ holds_7_16_5);
    s.add(b);    expr holds_7_17_4 = c.bool_const("holds_7_17_4");
    b = (holds_7_17_4 ^ holds_7_17_5);
    s.add(b);    expr holds_7_18_4 = c.bool_const("holds_7_18_4");
    b = (holds_7_18_4 ^ holds_7_18_5);
    s.add(b);    expr holds_7_19_4 = c.bool_const("holds_7_19_4");
    b = (holds_7_19_4 ^ holds_7_19_5);
    s.add(b);    expr holds_7_20_4 = c.bool_const("holds_7_20_4");
    b = (holds_7_20_4 ^ holds_7_20_5);
    s.add(b);    expr holds_7_21_4 = c.bool_const("holds_7_21_4");
    b = (holds_7_21_4 ^ holds_7_21_5);
    s.add(b);    expr holds_7_22_4 = c.bool_const("holds_7_22_4");
    b = (holds_7_22_4 ^ holds_7_22_5);
    s.add(b);    expr holds_7_23_4 = c.bool_const("holds_7_23_4");
    b = (holds_7_23_4 ^ holds_7_23_5);
    s.add(b);    expr holds_8_0_4 = c.bool_const("holds_8_0_4");
    b = (holds_8_0_4 ^ holds_8_0_5);
    s.add(b);    expr holds_8_1_4 = c.bool_const("holds_8_1_4");
    b = (holds_8_1_4 ^ holds_8_1_5);
    s.add(b);    expr holds_8_2_4 = c.bool_const("holds_8_2_4");
    b = (holds_8_2_4 ^ holds_8_2_5);
    s.add(b);    expr holds_8_3_4 = c.bool_const("holds_8_3_4");
    b = (holds_8_3_4 ^ holds_8_3_5);
    s.add(b);    expr holds_8_4_4 = c.bool_const("holds_8_4_4");
    b = (holds_8_4_4 ^ holds_8_4_5);
    s.add(b);    expr holds_8_5_4 = c.bool_const("holds_8_5_4");
    b = (holds_8_5_4 ^ holds_8_5_5);
    s.add(b);    expr holds_8_6_4 = c.bool_const("holds_8_6_4");
    b = (holds_8_6_4 ^ holds_8_6_5);
    s.add(b);    expr holds_8_7_4 = c.bool_const("holds_8_7_4");
    b = (holds_8_7_4 ^ holds_8_7_5);
    s.add(b);    expr holds_8_8_4 = c.bool_const("holds_8_8_4");
    b = (holds_8_8_4 ^ holds_8_8_5);
    s.add(b);    expr holds_8_9_4 = c.bool_const("holds_8_9_4");
    b = (holds_8_9_4 ^ holds_8_9_5);
    s.add(b);    expr holds_8_10_4 = c.bool_const("holds_8_10_4");
    b = (holds_8_10_4 ^ holds_8_10_5);
    s.add(b);    expr holds_8_11_4 = c.bool_const("holds_8_11_4");
    b = (holds_8_11_4 ^ holds_8_11_5);
    s.add(b);    expr holds_8_12_4 = c.bool_const("holds_8_12_4");
    b = (holds_8_12_4 ^ holds_8_12_5);
    s.add(b);    expr holds_8_13_4 = c.bool_const("holds_8_13_4");
    b = (holds_8_13_4 ^ holds_8_13_5);
    s.add(b);    expr holds_8_14_4 = c.bool_const("holds_8_14_4");
    b = (holds_8_14_4 ^ holds_8_14_5);
    s.add(b);    expr holds_8_15_4 = c.bool_const("holds_8_15_4");
    b = (holds_8_15_4 ^ holds_8_15_5);
    s.add(b);    expr holds_8_16_4 = c.bool_const("holds_8_16_4");
    b = (holds_8_16_4 ^ holds_8_16_5);
    s.add(b);    expr holds_8_17_4 = c.bool_const("holds_8_17_4");
    b = (holds_8_17_4 ^ holds_8_17_5);
    s.add(b);    expr holds_8_18_4 = c.bool_const("holds_8_18_4");
    b = (holds_8_18_4 ^ holds_8_18_5);
    s.add(b);    expr holds_8_19_4 = c.bool_const("holds_8_19_4");
    b = (holds_8_19_4 ^ holds_8_19_5);
    s.add(b);    expr holds_8_20_4 = c.bool_const("holds_8_20_4");
    b = (holds_8_20_4 ^ holds_8_20_5);
    s.add(b);    expr holds_8_21_4 = c.bool_const("holds_8_21_4");
    b = (holds_8_21_4 ^ holds_8_21_5);
    s.add(b);    expr holds_8_22_4 = c.bool_const("holds_8_22_4");
    b = (holds_8_22_4 ^ holds_8_22_5);
    s.add(b);    expr holds_8_23_4 = c.bool_const("holds_8_23_4");
    b = (holds_8_23_4 ^ holds_8_23_5);
    s.add(b);    expr holds_9_0_4 = c.bool_const("holds_9_0_4");
    b = (holds_9_0_4 ^ holds_9_0_5);
    s.add(b);    expr holds_9_1_4 = c.bool_const("holds_9_1_4");
    b = (holds_9_1_4 ^ holds_9_1_5);
    s.add(b);    expr holds_9_2_4 = c.bool_const("holds_9_2_4");
    b = (holds_9_2_4 ^ holds_9_2_5);
    s.add(b);    expr holds_9_3_4 = c.bool_const("holds_9_3_4");
    b = (holds_9_3_4 ^ holds_9_3_5);
    s.add(b);    expr holds_9_4_4 = c.bool_const("holds_9_4_4");
    b = (holds_9_4_4 ^ holds_9_4_5);
    s.add(b);    expr holds_9_5_4 = c.bool_const("holds_9_5_4");
    b = (holds_9_5_4 ^ holds_9_5_5);
    s.add(b);    expr holds_9_6_4 = c.bool_const("holds_9_6_4");
    b = (holds_9_6_4 ^ holds_9_6_5);
    s.add(b);    expr holds_9_7_4 = c.bool_const("holds_9_7_4");
    b = (holds_9_7_4 ^ holds_9_7_5);
    s.add(b);    expr holds_9_8_4 = c.bool_const("holds_9_8_4");
    b = (holds_9_8_4 ^ holds_9_8_5);
    s.add(b);    expr holds_9_9_4 = c.bool_const("holds_9_9_4");
    b = (holds_9_9_4 ^ holds_9_9_5);
    s.add(b);    expr holds_9_10_4 = c.bool_const("holds_9_10_4");
    b = (holds_9_10_4 ^ holds_9_10_5);
    s.add(b);    expr holds_9_11_4 = c.bool_const("holds_9_11_4");
    b = (holds_9_11_4 ^ holds_9_11_5);
    s.add(b);    expr holds_9_12_4 = c.bool_const("holds_9_12_4");
    b = (holds_9_12_4 ^ holds_9_12_5);
    s.add(b);    expr holds_9_13_4 = c.bool_const("holds_9_13_4");
    b = (holds_9_13_4 ^ holds_9_13_5);
    s.add(b);    expr holds_9_14_4 = c.bool_const("holds_9_14_4");
    b = (holds_9_14_4 ^ holds_9_14_5);
    s.add(b);    expr holds_9_15_4 = c.bool_const("holds_9_15_4");
    b = (holds_9_15_4 ^ holds_9_15_5);
    s.add(b);    expr holds_9_16_4 = c.bool_const("holds_9_16_4");
    b = (holds_9_16_4 ^ holds_9_16_5);
    s.add(b);    expr holds_9_17_4 = c.bool_const("holds_9_17_4");
    b = (holds_9_17_4 ^ holds_9_17_5);
    s.add(b);    expr holds_9_18_4 = c.bool_const("holds_9_18_4");
    b = (holds_9_18_4 ^ holds_9_18_5);
    s.add(b);    expr holds_9_19_4 = c.bool_const("holds_9_19_4");
    b = (holds_9_19_4 ^ holds_9_19_5);
    s.add(b);    expr holds_9_20_4 = c.bool_const("holds_9_20_4");
    b = (holds_9_20_4 ^ holds_9_20_5);
    s.add(b);    expr holds_9_21_4 = c.bool_const("holds_9_21_4");
    b = (holds_9_21_4 ^ holds_9_21_5);
    s.add(b);    expr holds_9_22_4 = c.bool_const("holds_9_22_4");
    b = (holds_9_22_4 ^ holds_9_22_5);
    s.add(b);    expr holds_9_23_4 = c.bool_const("holds_9_23_4");
    b = (holds_9_23_4 ^ holds_9_23_5);
    s.add(b);    expr holds_10_0_4 = c.bool_const("holds_10_0_4");
    b = (holds_10_0_4 ^ holds_10_0_5);
    s.add(b);    expr holds_10_1_4 = c.bool_const("holds_10_1_4");
    b = (holds_10_1_4 ^ holds_10_1_5);
    s.add(b);    expr holds_10_2_4 = c.bool_const("holds_10_2_4");
    b = (holds_10_2_4 ^ holds_10_2_5);
    s.add(b);    expr holds_10_3_4 = c.bool_const("holds_10_3_4");
    b = (holds_10_3_4 ^ holds_10_3_5);
    s.add(b);    expr holds_10_4_4 = c.bool_const("holds_10_4_4");
    b = (holds_10_4_4 ^ holds_10_4_5);
    s.add(b);    expr holds_10_5_4 = c.bool_const("holds_10_5_4");
    b = (holds_10_5_4 ^ holds_10_5_5);
    s.add(b);    expr holds_10_6_4 = c.bool_const("holds_10_6_4");
    b = (holds_10_6_4 ^ holds_10_6_5);
    s.add(b);    expr holds_10_7_4 = c.bool_const("holds_10_7_4");
    b = (holds_10_7_4 ^ holds_10_7_5);
    s.add(b);    expr holds_10_8_4 = c.bool_const("holds_10_8_4");
    b = (holds_10_8_4 ^ holds_10_8_5);
    s.add(b);    expr holds_10_9_4 = c.bool_const("holds_10_9_4");
    b = (holds_10_9_4 ^ holds_10_9_5);
    s.add(b);    expr holds_10_10_4 = c.bool_const("holds_10_10_4");
    b = (holds_10_10_4 ^ holds_10_10_5);
    s.add(b);    expr holds_10_11_4 = c.bool_const("holds_10_11_4");
    b = (holds_10_11_4 ^ holds_10_11_5);
    s.add(b);    expr holds_10_12_4 = c.bool_const("holds_10_12_4");
    b = (holds_10_12_4 ^ holds_10_12_5);
    s.add(b);    expr holds_10_13_4 = c.bool_const("holds_10_13_4");
    b = (holds_10_13_4 ^ holds_10_13_5);
    s.add(b);    expr holds_10_14_4 = c.bool_const("holds_10_14_4");
    b = (holds_10_14_4 ^ holds_10_14_5);
    s.add(b);    expr holds_10_15_4 = c.bool_const("holds_10_15_4");
    b = (holds_10_15_4 ^ holds_10_15_5);
    s.add(b);    expr holds_10_16_4 = c.bool_const("holds_10_16_4");
    b = (holds_10_16_4 ^ holds_10_16_5);
    s.add(b);    expr holds_10_17_4 = c.bool_const("holds_10_17_4");
    b = (holds_10_17_4 ^ holds_10_17_5);
    s.add(b);    expr holds_10_18_4 = c.bool_const("holds_10_18_4");
    b = (holds_10_18_4 ^ holds_10_18_5);
    s.add(b);    expr holds_10_19_4 = c.bool_const("holds_10_19_4");
    b = (holds_10_19_4 ^ holds_10_19_5);
    s.add(b);    expr holds_10_20_4 = c.bool_const("holds_10_20_4");
    b = (holds_10_20_4 ^ holds_10_20_5);
    s.add(b);    expr holds_10_21_4 = c.bool_const("holds_10_21_4");
    b = (holds_10_21_4 ^ holds_10_21_5);
    s.add(b);    expr holds_10_22_4 = c.bool_const("holds_10_22_4");
    b = (holds_10_22_4 ^ holds_10_22_5);
    s.add(b);    expr holds_10_23_4 = c.bool_const("holds_10_23_4");
    b = (holds_10_23_4 ^ holds_10_23_5);
    s.add(b);    expr holds_11_0_4 = c.bool_const("holds_11_0_4");
    b = (holds_11_0_4 ^ holds_11_0_5);
    s.add(b);    expr holds_11_1_4 = c.bool_const("holds_11_1_4");
    b = (holds_11_1_4 ^ holds_11_1_5);
    s.add(b);    expr holds_11_2_4 = c.bool_const("holds_11_2_4");
    b = (holds_11_2_4 ^ holds_11_2_5);
    s.add(b);    expr holds_11_3_4 = c.bool_const("holds_11_3_4");
    b = (holds_11_3_4 ^ holds_11_3_5);
    s.add(b);    expr holds_11_4_4 = c.bool_const("holds_11_4_4");
    b = (holds_11_4_4 ^ holds_11_4_5);
    s.add(b);    expr holds_11_5_4 = c.bool_const("holds_11_5_4");
    b = (holds_11_5_4 ^ holds_11_5_5);
    s.add(b);    expr holds_11_6_4 = c.bool_const("holds_11_6_4");
    b = (holds_11_6_4 ^ holds_11_6_5);
    s.add(b);    expr holds_11_7_4 = c.bool_const("holds_11_7_4");
    b = (holds_11_7_4 ^ holds_11_7_5);
    s.add(b);    expr holds_11_8_4 = c.bool_const("holds_11_8_4");
    b = (holds_11_8_4 ^ holds_11_8_5);
    s.add(b);    expr holds_11_9_4 = c.bool_const("holds_11_9_4");
    b = (holds_11_9_4 ^ holds_11_9_5);
    s.add(b);    expr holds_11_10_4 = c.bool_const("holds_11_10_4");
    b = (holds_11_10_4 ^ holds_11_10_5);
    s.add(b);    expr holds_11_11_4 = c.bool_const("holds_11_11_4");
    b = (holds_11_11_4 ^ holds_11_11_5);
    s.add(b);    expr holds_11_12_4 = c.bool_const("holds_11_12_4");
    b = (holds_11_12_4 ^ holds_11_12_5);
    s.add(b);    expr holds_11_13_4 = c.bool_const("holds_11_13_4");
    b = (holds_11_13_4 ^ holds_11_13_5);
    s.add(b);    expr holds_11_14_4 = c.bool_const("holds_11_14_4");
    b = (holds_11_14_4 ^ holds_11_14_5);
    s.add(b);    expr holds_11_15_4 = c.bool_const("holds_11_15_4");
    b = (holds_11_15_4 ^ holds_11_15_5);
    s.add(b);    expr holds_11_16_4 = c.bool_const("holds_11_16_4");
    b = (holds_11_16_4 ^ holds_11_16_5);
    s.add(b);    expr holds_11_17_4 = c.bool_const("holds_11_17_4");
    b = (holds_11_17_4 ^ holds_11_17_5);
    s.add(b);    expr holds_11_18_4 = c.bool_const("holds_11_18_4");
    b = (holds_11_18_4 ^ holds_11_18_5);
    s.add(b);    expr holds_11_19_4 = c.bool_const("holds_11_19_4");
    b = (holds_11_19_4 ^ holds_11_19_5);
    s.add(b);    expr holds_11_20_4 = c.bool_const("holds_11_20_4");
    b = (holds_11_20_4 ^ holds_11_20_5);
    s.add(b);    expr holds_11_21_4 = c.bool_const("holds_11_21_4");
    b = (holds_11_21_4 ^ holds_11_21_5);
    s.add(b);    expr holds_11_22_4 = c.bool_const("holds_11_22_4");
    b = (holds_11_22_4 ^ holds_11_22_5);
    s.add(b);    expr holds_11_23_4 = c.bool_const("holds_11_23_4");
    b = (holds_11_23_4 ^ holds_11_23_5);
    s.add(b);    expr holds_12_0_4 = c.bool_const("holds_12_0_4");
    b = (holds_12_0_4 ^ holds_12_0_5);
    s.add(b);    expr holds_12_1_4 = c.bool_const("holds_12_1_4");
    b = (holds_12_1_4 ^ holds_12_1_5);
    s.add(b);    expr holds_12_2_4 = c.bool_const("holds_12_2_4");
    b = (holds_12_2_4 ^ holds_12_2_5);
    s.add(b);    expr holds_12_3_4 = c.bool_const("holds_12_3_4");
    b = (holds_12_3_4 ^ holds_12_3_5);
    s.add(b);    expr holds_12_4_4 = c.bool_const("holds_12_4_4");
    b = (holds_12_4_4 ^ holds_12_4_5);
    s.add(b);    expr holds_12_5_4 = c.bool_const("holds_12_5_4");
    b = (holds_12_5_4 ^ holds_12_5_5);
    s.add(b);    expr holds_12_6_4 = c.bool_const("holds_12_6_4");
    b = (holds_12_6_4 ^ holds_12_6_5);
    s.add(b);    expr holds_12_7_4 = c.bool_const("holds_12_7_4");
    b = (holds_12_7_4 ^ holds_12_7_5);
    s.add(b);    expr holds_12_8_4 = c.bool_const("holds_12_8_4");
    b = (holds_12_8_4 ^ holds_12_8_5);
    s.add(b);    expr holds_12_9_4 = c.bool_const("holds_12_9_4");
    b = (holds_12_9_4 ^ holds_12_9_5);
    s.add(b);    expr holds_12_10_4 = c.bool_const("holds_12_10_4");
    b = (holds_12_10_4 ^ holds_12_10_5);
    s.add(b);    expr holds_12_11_4 = c.bool_const("holds_12_11_4");
    b = (holds_12_11_4 ^ holds_12_11_5);
    s.add(b);    expr holds_12_12_4 = c.bool_const("holds_12_12_4");
    b = (holds_12_12_4 ^ holds_12_12_5);
    s.add(b);    expr holds_12_13_4 = c.bool_const("holds_12_13_4");
    b = (holds_12_13_4 ^ holds_12_13_5);
    s.add(b);    expr holds_12_14_4 = c.bool_const("holds_12_14_4");
    b = (holds_12_14_4 ^ holds_12_14_5);
    s.add(b);    expr holds_12_15_4 = c.bool_const("holds_12_15_4");
    b = (holds_12_15_4 ^ holds_12_15_5);
    s.add(b);    expr holds_12_16_4 = c.bool_const("holds_12_16_4");
    b = (holds_12_16_4 ^ holds_12_16_5);
    s.add(b);    expr holds_12_17_4 = c.bool_const("holds_12_17_4");
    b = (holds_12_17_4 ^ holds_12_17_5);
    s.add(b);    expr holds_12_18_4 = c.bool_const("holds_12_18_4");
    b = (holds_12_18_4 ^ holds_12_18_5);
    s.add(b);    expr holds_12_19_4 = c.bool_const("holds_12_19_4");
    b = (holds_12_19_4 ^ holds_12_19_5);
    s.add(b);    expr holds_12_20_4 = c.bool_const("holds_12_20_4");
    b = (holds_12_20_4 ^ holds_12_20_5);
    s.add(b);    expr holds_12_21_4 = c.bool_const("holds_12_21_4");
    b = (holds_12_21_4 ^ holds_12_21_5);
    s.add(b);    expr holds_12_22_4 = c.bool_const("holds_12_22_4");
    b = (holds_12_22_4 ^ holds_12_22_5);
    s.add(b);    expr holds_12_23_4 = c.bool_const("holds_12_23_4");
    b = (holds_12_23_4 ^ holds_12_23_5);
    s.add(b);    expr holds_13_0_4 = c.bool_const("holds_13_0_4");
    b = (holds_13_0_4 ^ holds_13_0_5);
    s.add(b);    expr holds_13_1_4 = c.bool_const("holds_13_1_4");
    b = (holds_13_1_4 ^ holds_13_1_5);
    s.add(b);    expr holds_13_2_4 = c.bool_const("holds_13_2_4");
    b = (holds_13_2_4 ^ holds_13_2_5);
    s.add(b);    expr holds_13_3_4 = c.bool_const("holds_13_3_4");
    b = (holds_13_3_4 ^ holds_13_3_5);
    s.add(b);    expr holds_13_4_4 = c.bool_const("holds_13_4_4");
    b = (holds_13_4_4 ^ holds_13_4_5);
    s.add(b);    expr holds_13_5_4 = c.bool_const("holds_13_5_4");
    b = (holds_13_5_4 ^ holds_13_5_5);
    s.add(b);    expr holds_13_6_4 = c.bool_const("holds_13_6_4");
    b = (holds_13_6_4 ^ holds_13_6_5);
    s.add(b);    expr holds_13_7_4 = c.bool_const("holds_13_7_4");
    b = (holds_13_7_4 ^ holds_13_7_5);
    s.add(b);    expr holds_13_8_4 = c.bool_const("holds_13_8_4");
    b = (holds_13_8_4 ^ holds_13_8_5);
    s.add(b);    expr holds_13_9_4 = c.bool_const("holds_13_9_4");
    b = (holds_13_9_4 ^ holds_13_9_5);
    s.add(b);    expr holds_13_10_4 = c.bool_const("holds_13_10_4");
    b = (holds_13_10_4 ^ holds_13_10_5);
    s.add(b);    expr holds_13_11_4 = c.bool_const("holds_13_11_4");
    b = (holds_13_11_4 ^ holds_13_11_5);
    s.add(b);    expr holds_13_12_4 = c.bool_const("holds_13_12_4");
    b = (holds_13_12_4 ^ holds_13_12_5);
    s.add(b);    expr holds_13_13_4 = c.bool_const("holds_13_13_4");
    b = (holds_13_13_4 ^ holds_13_13_5);
    s.add(b);    expr holds_13_14_4 = c.bool_const("holds_13_14_4");
    b = (holds_13_14_4 ^ holds_13_14_5);
    s.add(b);    expr holds_13_15_4 = c.bool_const("holds_13_15_4");
    b = (holds_13_15_4 ^ holds_13_15_5);
    s.add(b);    expr holds_13_16_4 = c.bool_const("holds_13_16_4");
    b = (holds_13_16_4 ^ holds_13_16_5);
    s.add(b);    expr holds_13_17_4 = c.bool_const("holds_13_17_4");
    b = (holds_13_17_4 ^ holds_13_17_5);
    s.add(b);    expr holds_13_18_4 = c.bool_const("holds_13_18_4");
    b = (holds_13_18_4 ^ holds_13_18_5);
    s.add(b);    expr holds_13_19_4 = c.bool_const("holds_13_19_4");
    b = (holds_13_19_4 ^ holds_13_19_5);
    s.add(b);    expr holds_13_20_4 = c.bool_const("holds_13_20_4");
    b = (holds_13_20_4 ^ holds_13_20_5);
    s.add(b);    expr holds_13_21_4 = c.bool_const("holds_13_21_4");
    b = (holds_13_21_4 ^ holds_13_21_5);
    s.add(b);    expr holds_13_22_4 = c.bool_const("holds_13_22_4");
    b = (holds_13_22_4 ^ holds_13_22_5);
    s.add(b);    expr holds_13_23_4 = c.bool_const("holds_13_23_4");
    b = (holds_13_23_4 ^ holds_13_23_5);
    s.add(b);    expr holds_14_0_4 = c.bool_const("holds_14_0_4");
    b = (holds_14_0_4 ^ holds_14_0_5);
    s.add(b);    expr holds_14_1_4 = c.bool_const("holds_14_1_4");
    b = (holds_14_1_4 ^ holds_14_1_5);
    s.add(b);    expr holds_14_2_4 = c.bool_const("holds_14_2_4");
    b = (holds_14_2_4 ^ holds_14_2_5);
    s.add(b);    expr holds_14_3_4 = c.bool_const("holds_14_3_4");
    b = (holds_14_3_4 ^ holds_14_3_5);
    s.add(b);    expr holds_14_4_4 = c.bool_const("holds_14_4_4");
    b = (holds_14_4_4 ^ holds_14_4_5);
    s.add(b);    expr holds_14_5_4 = c.bool_const("holds_14_5_4");
    b = (holds_14_5_4 ^ holds_14_5_5);
    s.add(b);    expr holds_14_6_4 = c.bool_const("holds_14_6_4");
    b = (holds_14_6_4 ^ holds_14_6_5);
    s.add(b);    expr holds_14_7_4 = c.bool_const("holds_14_7_4");
    b = (holds_14_7_4 ^ holds_14_7_5);
    s.add(b);    expr holds_14_8_4 = c.bool_const("holds_14_8_4");
    b = (holds_14_8_4 ^ holds_14_8_5);
    s.add(b);    expr holds_14_9_4 = c.bool_const("holds_14_9_4");
    b = (holds_14_9_4 ^ holds_14_9_5);
    s.add(b);    expr holds_14_10_4 = c.bool_const("holds_14_10_4");
    b = (holds_14_10_4 ^ holds_14_10_5);
    s.add(b);    expr holds_14_11_4 = c.bool_const("holds_14_11_4");
    b = (holds_14_11_4 ^ holds_14_11_5);
    s.add(b);    expr holds_14_12_4 = c.bool_const("holds_14_12_4");
    b = (holds_14_12_4 ^ holds_14_12_5);
    s.add(b);    expr holds_14_13_4 = c.bool_const("holds_14_13_4");
    b = (holds_14_13_4 ^ holds_14_13_5);
    s.add(b);    expr holds_14_14_4 = c.bool_const("holds_14_14_4");
    b = (holds_14_14_4 ^ holds_14_14_5);
    s.add(b);    expr holds_14_15_4 = c.bool_const("holds_14_15_4");
    b = (holds_14_15_4 ^ holds_14_15_5);
    s.add(b);    expr holds_14_16_4 = c.bool_const("holds_14_16_4");
    b = (holds_14_16_4 ^ holds_14_16_5);
    s.add(b);    expr holds_14_17_4 = c.bool_const("holds_14_17_4");
    b = (holds_14_17_4 ^ holds_14_17_5);
    s.add(b);    expr holds_14_18_4 = c.bool_const("holds_14_18_4");
    b = (holds_14_18_4 ^ holds_14_18_5);
    s.add(b);    expr holds_14_19_4 = c.bool_const("holds_14_19_4");
    b = (holds_14_19_4 ^ holds_14_19_5);
    s.add(b);    expr holds_14_20_4 = c.bool_const("holds_14_20_4");
    b = (holds_14_20_4 ^ holds_14_20_5);
    s.add(b);    expr holds_14_21_4 = c.bool_const("holds_14_21_4");
    b = (holds_14_21_4 ^ holds_14_21_5);
    s.add(b);    expr holds_14_22_4 = c.bool_const("holds_14_22_4");
    b = (holds_14_22_4 ^ holds_14_22_5);
    s.add(b);    expr holds_14_23_4 = c.bool_const("holds_14_23_4");
    b = (holds_14_23_4 ^ holds_14_23_5);
    s.add(b);    expr holds_15_0_4 = c.bool_const("holds_15_0_4");
    b = (holds_15_0_4 ^ holds_15_0_5);
    s.add(b);    expr holds_15_1_4 = c.bool_const("holds_15_1_4");
    b = (holds_15_1_4 ^ holds_15_1_5);
    s.add(b);    expr holds_15_2_4 = c.bool_const("holds_15_2_4");
    b = (holds_15_2_4 ^ holds_15_2_5);
    s.add(b);    expr holds_15_3_4 = c.bool_const("holds_15_3_4");
    b = (holds_15_3_4 ^ holds_15_3_5);
    s.add(b);    expr holds_15_4_4 = c.bool_const("holds_15_4_4");
    b = (holds_15_4_4 ^ holds_15_4_5);
    s.add(b);    expr holds_15_5_4 = c.bool_const("holds_15_5_4");
    b = (holds_15_5_4 ^ holds_15_5_5);
    s.add(b);    expr holds_15_6_4 = c.bool_const("holds_15_6_4");
    b = (holds_15_6_4 ^ holds_15_6_5);
    s.add(b);    expr holds_15_7_4 = c.bool_const("holds_15_7_4");
    b = (holds_15_7_4 ^ holds_15_7_5);
    s.add(b);    expr holds_15_8_4 = c.bool_const("holds_15_8_4");
    b = (holds_15_8_4 ^ holds_15_8_5);
    s.add(b);    expr holds_15_9_4 = c.bool_const("holds_15_9_4");
    b = (holds_15_9_4 ^ holds_15_9_5);
    s.add(b);    expr holds_15_10_4 = c.bool_const("holds_15_10_4");
    b = (holds_15_10_4 ^ holds_15_10_5);
    s.add(b);    expr holds_15_11_4 = c.bool_const("holds_15_11_4");
    b = (holds_15_11_4 ^ holds_15_11_5);
    s.add(b);    expr holds_15_12_4 = c.bool_const("holds_15_12_4");
    b = (holds_15_12_4 ^ holds_15_12_5);
    s.add(b);    expr holds_15_13_4 = c.bool_const("holds_15_13_4");
    b = (holds_15_13_4 ^ holds_15_13_5);
    s.add(b);    expr holds_15_14_4 = c.bool_const("holds_15_14_4");
    b = (holds_15_14_4 ^ holds_15_14_5);
    s.add(b);    expr holds_15_15_4 = c.bool_const("holds_15_15_4");
    b = (holds_15_15_4 ^ holds_15_15_5);
    s.add(b);    expr holds_15_16_4 = c.bool_const("holds_15_16_4");
    b = (holds_15_16_4 ^ holds_15_16_5);
    s.add(b);    expr holds_15_17_4 = c.bool_const("holds_15_17_4");
    b = (holds_15_17_4 ^ holds_15_17_5);
    s.add(b);    expr holds_15_18_4 = c.bool_const("holds_15_18_4");
    b = (holds_15_18_4 ^ holds_15_18_5);
    s.add(b);    expr holds_15_19_4 = c.bool_const("holds_15_19_4");
    b = (holds_15_19_4 ^ holds_15_19_5);
    s.add(b);    expr holds_15_20_4 = c.bool_const("holds_15_20_4");
    b = (holds_15_20_4 ^ holds_15_20_5);
    s.add(b);    expr holds_15_21_4 = c.bool_const("holds_15_21_4");
    b = (holds_15_21_4 ^ holds_15_21_5);
    s.add(b);    expr holds_15_22_4 = c.bool_const("holds_15_22_4");
    b = (holds_15_22_4 ^ holds_15_22_5);
    s.add(b);    expr holds_15_23_4 = c.bool_const("holds_15_23_4");
    b = (holds_15_23_4 ^ holds_15_23_5);
    s.add(b);    expr holds_16_0_4 = c.bool_const("holds_16_0_4");
    b = (holds_16_0_4 ^ holds_16_0_5);
    s.add(b);    expr holds_16_1_4 = c.bool_const("holds_16_1_4");
    b = (holds_16_1_4 ^ holds_16_1_5);
    s.add(b);    expr holds_16_2_4 = c.bool_const("holds_16_2_4");
    b = (holds_16_2_4 ^ holds_16_2_5);
    s.add(b);    expr holds_16_3_4 = c.bool_const("holds_16_3_4");
    b = (holds_16_3_4 ^ holds_16_3_5);
    s.add(b);    expr holds_16_4_4 = c.bool_const("holds_16_4_4");
    b = (holds_16_4_4 ^ holds_16_4_5);
    s.add(b);    expr holds_16_5_4 = c.bool_const("holds_16_5_4");
    b = (holds_16_5_4 ^ holds_16_5_5);
    s.add(b);    expr holds_16_6_4 = c.bool_const("holds_16_6_4");
    b = (holds_16_6_4 ^ holds_16_6_5);
    s.add(b);    expr holds_16_7_4 = c.bool_const("holds_16_7_4");
    b = (holds_16_7_4 ^ holds_16_7_5);
    s.add(b);    expr holds_16_8_4 = c.bool_const("holds_16_8_4");
    b = (holds_16_8_4 ^ holds_16_8_5);
    s.add(b);    expr holds_16_9_4 = c.bool_const("holds_16_9_4");
    b = (holds_16_9_4 ^ holds_16_9_5);
    s.add(b);    expr holds_16_10_4 = c.bool_const("holds_16_10_4");
    b = (holds_16_10_4 ^ holds_16_10_5);
    s.add(b);    expr holds_16_11_4 = c.bool_const("holds_16_11_4");
    b = (holds_16_11_4 ^ holds_16_11_5);
    s.add(b);    expr holds_16_12_4 = c.bool_const("holds_16_12_4");
    b = (holds_16_12_4 ^ holds_16_12_5);
    s.add(b);    expr holds_16_13_4 = c.bool_const("holds_16_13_4");
    b = (holds_16_13_4 ^ holds_16_13_5);
    s.add(b);    expr holds_16_14_4 = c.bool_const("holds_16_14_4");
    b = (holds_16_14_4 ^ holds_16_14_5);
    s.add(b);    expr holds_16_15_4 = c.bool_const("holds_16_15_4");
    b = (holds_16_15_4 ^ holds_16_15_5);
    s.add(b);    expr holds_16_16_4 = c.bool_const("holds_16_16_4");
    b = (holds_16_16_4 ^ holds_16_16_5);
    s.add(b);    expr holds_16_17_4 = c.bool_const("holds_16_17_4");
    b = (holds_16_17_4 ^ holds_16_17_5);
    s.add(b);    expr holds_16_18_4 = c.bool_const("holds_16_18_4");
    b = (holds_16_18_4 ^ holds_16_18_5);
    s.add(b);    expr holds_16_19_4 = c.bool_const("holds_16_19_4");
    b = (holds_16_19_4 ^ holds_16_19_5);
    s.add(b);    expr holds_16_20_4 = c.bool_const("holds_16_20_4");
    b = (holds_16_20_4 ^ holds_16_20_5);
    s.add(b);    expr holds_16_21_4 = c.bool_const("holds_16_21_4");
    b = (holds_16_21_4 ^ holds_16_21_5);
    s.add(b);    expr holds_16_22_4 = c.bool_const("holds_16_22_4");
    b = (holds_16_22_4 ^ holds_16_22_5);
    s.add(b);    expr holds_16_23_4 = c.bool_const("holds_16_23_4");
    b = (holds_16_23_4 ^ holds_16_23_5);
    s.add(b);    expr holds_17_0_4 = c.bool_const("holds_17_0_4");
    b = (holds_17_0_4 ^ holds_17_0_5);
    s.add(b);    expr holds_17_1_4 = c.bool_const("holds_17_1_4");
    b = (holds_17_1_4 ^ holds_17_1_5);
    s.add(b);    expr holds_17_2_4 = c.bool_const("holds_17_2_4");
    b = (holds_17_2_4 ^ holds_17_2_5);
    s.add(b);    expr holds_17_3_4 = c.bool_const("holds_17_3_4");
    b = (holds_17_3_4 ^ holds_17_3_5);
    s.add(b);    expr holds_17_4_4 = c.bool_const("holds_17_4_4");
    b = (holds_17_4_4 ^ holds_17_4_5);
    s.add(b);    expr holds_17_5_4 = c.bool_const("holds_17_5_4");
    b = (holds_17_5_4 ^ holds_17_5_5);
    s.add(b);    expr holds_17_6_4 = c.bool_const("holds_17_6_4");
    b = (holds_17_6_4 ^ holds_17_6_5);
    s.add(b);    expr holds_17_7_4 = c.bool_const("holds_17_7_4");
    b = (holds_17_7_4 ^ holds_17_7_5);
    s.add(b);    expr holds_17_8_4 = c.bool_const("holds_17_8_4");
    b = (holds_17_8_4 ^ holds_17_8_5);
    s.add(b);    expr holds_17_9_4 = c.bool_const("holds_17_9_4");
    b = (holds_17_9_4 ^ holds_17_9_5);
    s.add(b);    expr holds_17_10_4 = c.bool_const("holds_17_10_4");
    b = (holds_17_10_4 ^ holds_17_10_5);
    s.add(b);    expr holds_17_11_4 = c.bool_const("holds_17_11_4");
    b = (holds_17_11_4 ^ holds_17_11_5);
    s.add(b);    expr holds_17_12_4 = c.bool_const("holds_17_12_4");
    b = (holds_17_12_4 ^ holds_17_12_5);
    s.add(b);    expr holds_17_13_4 = c.bool_const("holds_17_13_4");
    b = (holds_17_13_4 ^ holds_17_13_5);
    s.add(b);    expr holds_17_14_4 = c.bool_const("holds_17_14_4");
    b = (holds_17_14_4 ^ holds_17_14_5);
    s.add(b);    expr holds_17_15_4 = c.bool_const("holds_17_15_4");
    b = (holds_17_15_4 ^ holds_17_15_5);
    s.add(b);    expr holds_17_16_4 = c.bool_const("holds_17_16_4");
    b = (holds_17_16_4 ^ holds_17_16_5);
    s.add(b);    expr holds_17_17_4 = c.bool_const("holds_17_17_4");
    b = (holds_17_17_4 ^ holds_17_17_5);
    s.add(b);    expr holds_17_18_4 = c.bool_const("holds_17_18_4");
    b = (holds_17_18_4 ^ holds_17_18_5);
    s.add(b);    expr holds_17_19_4 = c.bool_const("holds_17_19_4");
    b = (holds_17_19_4 ^ holds_17_19_5);
    s.add(b);    expr holds_17_20_4 = c.bool_const("holds_17_20_4");
    b = (holds_17_20_4 ^ holds_17_20_5);
    s.add(b);    expr holds_17_21_4 = c.bool_const("holds_17_21_4");
    b = (holds_17_21_4 ^ holds_17_21_5);
    s.add(b);    expr holds_17_22_4 = c.bool_const("holds_17_22_4");
    b = (holds_17_22_4 ^ holds_17_22_5);
    s.add(b);    expr holds_17_23_4 = c.bool_const("holds_17_23_4");
    b = (holds_17_23_4 ^ holds_17_23_5);
    s.add(b);    expr holds_18_0_4 = c.bool_const("holds_18_0_4");
    b = (holds_18_0_4 ^ holds_18_0_5);
    s.add(b);    expr holds_18_1_4 = c.bool_const("holds_18_1_4");
    b = (holds_18_1_4 ^ holds_18_1_5);
    s.add(b);    expr holds_18_2_4 = c.bool_const("holds_18_2_4");
    b = (holds_18_2_4 ^ holds_18_2_5);
    s.add(b);    expr holds_18_3_4 = c.bool_const("holds_18_3_4");
    b = (holds_18_3_4 ^ holds_18_3_5);
    s.add(b);    expr holds_18_4_4 = c.bool_const("holds_18_4_4");
    b = (holds_18_4_4 ^ holds_18_4_5);
    s.add(b);    expr holds_18_5_4 = c.bool_const("holds_18_5_4");
    b = (holds_18_5_4 ^ holds_18_5_5);
    s.add(b);    expr holds_18_6_4 = c.bool_const("holds_18_6_4");
    b = (holds_18_6_4 ^ holds_18_6_5);
    s.add(b);    expr holds_18_7_4 = c.bool_const("holds_18_7_4");
    b = (holds_18_7_4 ^ holds_18_7_5);
    s.add(b);    expr holds_18_8_4 = c.bool_const("holds_18_8_4");
    b = (holds_18_8_4 ^ holds_18_8_5);
    s.add(b);    expr holds_18_9_4 = c.bool_const("holds_18_9_4");
    b = (holds_18_9_4 ^ holds_18_9_5);
    s.add(b);    expr holds_18_10_4 = c.bool_const("holds_18_10_4");
    b = (holds_18_10_4 ^ holds_18_10_5);
    s.add(b);    expr holds_18_11_4 = c.bool_const("holds_18_11_4");
    b = (holds_18_11_4 ^ holds_18_11_5);
    s.add(b);    expr holds_18_12_4 = c.bool_const("holds_18_12_4");
    b = (holds_18_12_4 ^ holds_18_12_5);
    s.add(b);    expr holds_18_13_4 = c.bool_const("holds_18_13_4");
    b = (holds_18_13_4 ^ holds_18_13_5);
    s.add(b);    expr holds_18_14_4 = c.bool_const("holds_18_14_4");
    b = (holds_18_14_4 ^ holds_18_14_5);
    s.add(b);    expr holds_18_15_4 = c.bool_const("holds_18_15_4");
    b = (holds_18_15_4 ^ holds_18_15_5);
    s.add(b);    expr holds_18_16_4 = c.bool_const("holds_18_16_4");
    b = (holds_18_16_4 ^ holds_18_16_5);
    s.add(b);    expr holds_18_17_4 = c.bool_const("holds_18_17_4");
    b = (holds_18_17_4 ^ holds_18_17_5);
    s.add(b);    expr holds_18_18_4 = c.bool_const("holds_18_18_4");
    b = (holds_18_18_4 ^ holds_18_18_5);
    s.add(b);    expr holds_18_19_4 = c.bool_const("holds_18_19_4");
    b = (holds_18_19_4 ^ holds_18_19_5);
    s.add(b);    expr holds_18_20_4 = c.bool_const("holds_18_20_4");
    b = (holds_18_20_4 ^ holds_18_20_5);
    s.add(b);    expr holds_18_21_4 = c.bool_const("holds_18_21_4");
    b = (holds_18_21_4 ^ holds_18_21_5);
    s.add(b);    expr holds_18_22_4 = c.bool_const("holds_18_22_4");
    b = (holds_18_22_4 ^ holds_18_22_5);
    s.add(b);    expr holds_18_23_4 = c.bool_const("holds_18_23_4");
    b = (holds_18_23_4 ^ holds_18_23_5);
    s.add(b);    expr holds_19_0_4 = c.bool_const("holds_19_0_4");
    b = (holds_19_0_4 ^ holds_19_0_5);
    s.add(b);    expr holds_19_1_4 = c.bool_const("holds_19_1_4");
    b = (holds_19_1_4 ^ holds_19_1_5);
    s.add(b);    expr holds_19_2_4 = c.bool_const("holds_19_2_4");
    b = (holds_19_2_4 ^ holds_19_2_5);
    s.add(b);    expr holds_19_3_4 = c.bool_const("holds_19_3_4");
    b = (holds_19_3_4 ^ holds_19_3_5);
    s.add(b);    expr holds_19_4_4 = c.bool_const("holds_19_4_4");
    b = (holds_19_4_4 ^ holds_19_4_5);
    s.add(b);    expr holds_19_5_4 = c.bool_const("holds_19_5_4");
    b = (holds_19_5_4 ^ holds_19_5_5);
    s.add(b);    expr holds_19_6_4 = c.bool_const("holds_19_6_4");
    b = (holds_19_6_4 ^ holds_19_6_5);
    s.add(b);    expr holds_19_7_4 = c.bool_const("holds_19_7_4");
    b = (holds_19_7_4 ^ holds_19_7_5);
    s.add(b);    expr holds_19_8_4 = c.bool_const("holds_19_8_4");
    b = (holds_19_8_4 ^ holds_19_8_5);
    s.add(b);    expr holds_19_9_4 = c.bool_const("holds_19_9_4");
    b = (holds_19_9_4 ^ holds_19_9_5);
    s.add(b);    expr holds_19_10_4 = c.bool_const("holds_19_10_4");
    b = (holds_19_10_4 ^ holds_19_10_5);
    s.add(b);    expr holds_19_11_4 = c.bool_const("holds_19_11_4");
    b = (holds_19_11_4 ^ holds_19_11_5);
    s.add(b);    expr holds_19_12_4 = c.bool_const("holds_19_12_4");
    b = (holds_19_12_4 ^ holds_19_12_5);
    s.add(b);    expr holds_19_13_4 = c.bool_const("holds_19_13_4");
    b = (holds_19_13_4 ^ holds_19_13_5);
    s.add(b);    expr holds_19_14_4 = c.bool_const("holds_19_14_4");
    b = (holds_19_14_4 ^ holds_19_14_5);
    s.add(b);    expr holds_19_15_4 = c.bool_const("holds_19_15_4");
    b = (holds_19_15_4 ^ holds_19_15_5);
    s.add(b);    expr holds_19_16_4 = c.bool_const("holds_19_16_4");
    b = (holds_19_16_4 ^ holds_19_16_5);
    s.add(b);    expr holds_19_17_4 = c.bool_const("holds_19_17_4");
    b = (holds_19_17_4 ^ holds_19_17_5);
    s.add(b);    expr holds_19_18_4 = c.bool_const("holds_19_18_4");
    b = (holds_19_18_4 ^ holds_19_18_5);
    s.add(b);    expr holds_19_19_4 = c.bool_const("holds_19_19_4");
    b = (holds_19_19_4 ^ holds_19_19_5);
    s.add(b);    expr holds_19_20_4 = c.bool_const("holds_19_20_4");
    b = (holds_19_20_4 ^ holds_19_20_5);
    s.add(b);    expr holds_19_21_4 = c.bool_const("holds_19_21_4");
    b = (holds_19_21_4 ^ holds_19_21_5);
    s.add(b);    expr holds_19_22_4 = c.bool_const("holds_19_22_4");
    b = (holds_19_22_4 ^ holds_19_22_5);
    s.add(b);    expr holds_19_23_4 = c.bool_const("holds_19_23_4");
    b = (holds_19_23_4 ^ holds_19_23_5);
    s.add(b);    expr holds_20_0_4 = c.bool_const("holds_20_0_4");
    b = (holds_20_0_4 ^ holds_20_0_5);
    s.add(b);    expr holds_20_1_4 = c.bool_const("holds_20_1_4");
    b = (holds_20_1_4 ^ holds_20_1_5);
    s.add(b);    expr holds_20_2_4 = c.bool_const("holds_20_2_4");
    b = (holds_20_2_4 ^ holds_20_2_5);
    s.add(b);    expr holds_20_3_4 = c.bool_const("holds_20_3_4");
    b = (holds_20_3_4 ^ holds_20_3_5);
    s.add(b);    expr holds_20_4_4 = c.bool_const("holds_20_4_4");
    b = (holds_20_4_4 ^ holds_20_4_5);
    s.add(b);    expr holds_20_5_4 = c.bool_const("holds_20_5_4");
    b = (holds_20_5_4 ^ holds_20_5_5);
    s.add(b);    expr holds_20_6_4 = c.bool_const("holds_20_6_4");
    b = (holds_20_6_4 ^ holds_20_6_5);
    s.add(b);    expr holds_20_7_4 = c.bool_const("holds_20_7_4");
    b = (holds_20_7_4 ^ holds_20_7_5);
    s.add(b);    expr holds_20_8_4 = c.bool_const("holds_20_8_4");
    b = (holds_20_8_4 ^ holds_20_8_5);
    s.add(b);    expr holds_20_9_4 = c.bool_const("holds_20_9_4");
    b = (holds_20_9_4 ^ holds_20_9_5);
    s.add(b);    expr holds_20_10_4 = c.bool_const("holds_20_10_4");
    b = (holds_20_10_4 ^ holds_20_10_5);
    s.add(b);    expr holds_20_11_4 = c.bool_const("holds_20_11_4");
    b = (holds_20_11_4 ^ holds_20_11_5);
    s.add(b);    expr holds_20_12_4 = c.bool_const("holds_20_12_4");
    b = (holds_20_12_4 ^ holds_20_12_5);
    s.add(b);    expr holds_20_13_4 = c.bool_const("holds_20_13_4");
    b = (holds_20_13_4 ^ holds_20_13_5);
    s.add(b);    expr holds_20_14_4 = c.bool_const("holds_20_14_4");
    b = (holds_20_14_4 ^ holds_20_14_5);
    s.add(b);    expr holds_20_15_4 = c.bool_const("holds_20_15_4");
    b = (holds_20_15_4 ^ holds_20_15_5);
    s.add(b);    expr holds_20_16_4 = c.bool_const("holds_20_16_4");
    b = (holds_20_16_4 ^ holds_20_16_5);
    s.add(b);    expr holds_20_17_4 = c.bool_const("holds_20_17_4");
    b = (holds_20_17_4 ^ holds_20_17_5);
    s.add(b);    expr holds_20_18_4 = c.bool_const("holds_20_18_4");
    b = (holds_20_18_4 ^ holds_20_18_5);
    s.add(b);    expr holds_20_19_4 = c.bool_const("holds_20_19_4");
    b = (holds_20_19_4 ^ holds_20_19_5);
    s.add(b);    expr holds_20_20_4 = c.bool_const("holds_20_20_4");
    b = (holds_20_20_4 ^ holds_20_20_5);
    s.add(b);    expr holds_20_21_4 = c.bool_const("holds_20_21_4");
    b = (holds_20_21_4 ^ holds_20_21_5);
    s.add(b);    expr holds_20_22_4 = c.bool_const("holds_20_22_4");
    b = (holds_20_22_4 ^ holds_20_22_5);
    s.add(b);    expr holds_20_23_4 = c.bool_const("holds_20_23_4");
    b = (holds_20_23_4 ^ holds_20_23_5);
    s.add(b);    expr holds_21_0_4 = c.bool_const("holds_21_0_4");
    b = (holds_21_0_4 ^ holds_21_0_5);
    s.add(b);    expr holds_21_1_4 = c.bool_const("holds_21_1_4");
    b = (holds_21_1_4 ^ holds_21_1_5);
    s.add(b);    expr holds_21_2_4 = c.bool_const("holds_21_2_4");
    b = (holds_21_2_4 ^ holds_21_2_5);
    s.add(b);    expr holds_21_3_4 = c.bool_const("holds_21_3_4");
    b = (holds_21_3_4 ^ holds_21_3_5);
    s.add(b);    expr holds_21_4_4 = c.bool_const("holds_21_4_4");
    b = (holds_21_4_4 ^ holds_21_4_5);
    s.add(b);    expr holds_21_5_4 = c.bool_const("holds_21_5_4");
    b = (holds_21_5_4 ^ holds_21_5_5);
    s.add(b);    expr holds_21_6_4 = c.bool_const("holds_21_6_4");
    b = (holds_21_6_4 ^ holds_21_6_5);
    s.add(b);    expr holds_21_7_4 = c.bool_const("holds_21_7_4");
    b = (holds_21_7_4 ^ holds_21_7_5);
    s.add(b);    expr holds_21_8_4 = c.bool_const("holds_21_8_4");
    b = (holds_21_8_4 ^ holds_21_8_5);
    s.add(b);    expr holds_21_9_4 = c.bool_const("holds_21_9_4");
    b = (holds_21_9_4 ^ holds_21_9_5);
    s.add(b);    expr holds_21_10_4 = c.bool_const("holds_21_10_4");
    b = (holds_21_10_4 ^ holds_21_10_5);
    s.add(b);    expr holds_21_11_4 = c.bool_const("holds_21_11_4");
    b = (holds_21_11_4 ^ holds_21_11_5);
    s.add(b);    expr holds_21_12_4 = c.bool_const("holds_21_12_4");
    b = (holds_21_12_4 ^ holds_21_12_5);
    s.add(b);    expr holds_21_13_4 = c.bool_const("holds_21_13_4");
    b = (holds_21_13_4 ^ holds_21_13_5);
    s.add(b);    expr holds_21_14_4 = c.bool_const("holds_21_14_4");
    b = (holds_21_14_4 ^ holds_21_14_5);
    s.add(b);    expr holds_21_15_4 = c.bool_const("holds_21_15_4");
    b = (holds_21_15_4 ^ holds_21_15_5);
    s.add(b);    expr holds_21_16_4 = c.bool_const("holds_21_16_4");
    b = (holds_21_16_4 ^ holds_21_16_5);
    s.add(b);    expr holds_21_17_4 = c.bool_const("holds_21_17_4");
    b = (holds_21_17_4 ^ holds_21_17_5);
    s.add(b);    expr holds_21_18_4 = c.bool_const("holds_21_18_4");
    b = (holds_21_18_4 ^ holds_21_18_5);
    s.add(b);    expr holds_21_19_4 = c.bool_const("holds_21_19_4");
    b = (holds_21_19_4 ^ holds_21_19_5);
    s.add(b);    expr holds_21_20_4 = c.bool_const("holds_21_20_4");
    b = (holds_21_20_4 ^ holds_21_20_5);
    s.add(b);    expr holds_21_21_4 = c.bool_const("holds_21_21_4");
    b = (holds_21_21_4 ^ holds_21_21_5);
    s.add(b);    expr holds_21_22_4 = c.bool_const("holds_21_22_4");
    b = (holds_21_22_4 ^ holds_21_22_5);
    s.add(b);    expr holds_21_23_4 = c.bool_const("holds_21_23_4");
    b = (holds_21_23_4 ^ holds_21_23_5);
    s.add(b);    expr holds_22_0_4 = c.bool_const("holds_22_0_4");
    b = (holds_22_0_4 ^ holds_22_0_5);
    s.add(b);    expr holds_22_1_4 = c.bool_const("holds_22_1_4");
    b = (holds_22_1_4 ^ holds_22_1_5);
    s.add(b);    expr holds_22_2_4 = c.bool_const("holds_22_2_4");
    b = (holds_22_2_4 ^ holds_22_2_5);
    s.add(b);    expr holds_22_3_4 = c.bool_const("holds_22_3_4");
    b = (holds_22_3_4 ^ holds_22_3_5);
    s.add(b);    expr holds_22_4_4 = c.bool_const("holds_22_4_4");
    b = (holds_22_4_4 ^ holds_22_4_5);
    s.add(b);    expr holds_22_5_4 = c.bool_const("holds_22_5_4");
    b = (holds_22_5_4 ^ holds_22_5_5);
    s.add(b);    expr holds_22_6_4 = c.bool_const("holds_22_6_4");
    b = (holds_22_6_4 ^ holds_22_6_5);
    s.add(b);    expr holds_22_7_4 = c.bool_const("holds_22_7_4");
    b = (holds_22_7_4 ^ holds_22_7_5);
    s.add(b);    expr holds_22_8_4 = c.bool_const("holds_22_8_4");
    b = (holds_22_8_4 ^ holds_22_8_5);
    s.add(b);    expr holds_22_9_4 = c.bool_const("holds_22_9_4");
    b = (holds_22_9_4 ^ holds_22_9_5);
    s.add(b);    expr holds_22_10_4 = c.bool_const("holds_22_10_4");
    b = (holds_22_10_4 ^ holds_22_10_5);
    s.add(b);    expr holds_22_11_4 = c.bool_const("holds_22_11_4");
    b = (holds_22_11_4 ^ holds_22_11_5);
    s.add(b);    expr holds_22_12_4 = c.bool_const("holds_22_12_4");
    b = (holds_22_12_4 ^ holds_22_12_5);
    s.add(b);    expr holds_22_13_4 = c.bool_const("holds_22_13_4");
    b = (holds_22_13_4 ^ holds_22_13_5);
    s.add(b);    expr holds_22_14_4 = c.bool_const("holds_22_14_4");
    b = (holds_22_14_4 ^ holds_22_14_5);
    s.add(b);    expr holds_22_15_4 = c.bool_const("holds_22_15_4");
    b = (holds_22_15_4 ^ holds_22_15_5);
    s.add(b);    expr holds_22_16_4 = c.bool_const("holds_22_16_4");
    b = (holds_22_16_4 ^ holds_22_16_5);
    s.add(b);    expr holds_22_17_4 = c.bool_const("holds_22_17_4");
    b = (holds_22_17_4 ^ holds_22_17_5);
    s.add(b);    expr holds_22_18_4 = c.bool_const("holds_22_18_4");
    b = (holds_22_18_4 ^ holds_22_18_5);
    s.add(b);    expr holds_22_19_4 = c.bool_const("holds_22_19_4");
    b = (holds_22_19_4 ^ holds_22_19_5);
    s.add(b);    expr holds_22_20_4 = c.bool_const("holds_22_20_4");
    b = (holds_22_20_4 ^ holds_22_20_5);
    s.add(b);    expr holds_22_21_4 = c.bool_const("holds_22_21_4");
    b = (holds_22_21_4 ^ holds_22_21_5);
    s.add(b);    expr holds_22_22_4 = c.bool_const("holds_22_22_4");
    b = (holds_22_22_4 ^ holds_22_22_5);
    s.add(b);    expr holds_22_23_4 = c.bool_const("holds_22_23_4");
    b = (holds_22_23_4 ^ holds_22_23_5);
    s.add(b);    expr holds_23_0_4 = c.bool_const("holds_23_0_4");
    b = (holds_23_0_4 ^ holds_23_0_5);
    s.add(b);    expr holds_23_1_4 = c.bool_const("holds_23_1_4");
    b = (holds_23_1_4 ^ holds_23_1_5);
    s.add(b);    expr holds_23_2_4 = c.bool_const("holds_23_2_4");
    b = (holds_23_2_4 ^ holds_23_2_5);
    s.add(b);    expr holds_23_3_4 = c.bool_const("holds_23_3_4");
    b = (holds_23_3_4 ^ holds_23_3_5);
    s.add(b);    expr holds_23_4_4 = c.bool_const("holds_23_4_4");
    b = (holds_23_4_4 ^ holds_23_4_5);
    s.add(b);    expr holds_23_5_4 = c.bool_const("holds_23_5_4");
    b = (holds_23_5_4 ^ holds_23_5_5);
    s.add(b);    expr holds_23_6_4 = c.bool_const("holds_23_6_4");
    b = (holds_23_6_4 ^ holds_23_6_5);
    s.add(b);    expr holds_23_7_4 = c.bool_const("holds_23_7_4");
    b = (holds_23_7_4 ^ holds_23_7_5);
    s.add(b);    expr holds_23_8_4 = c.bool_const("holds_23_8_4");
    b = (holds_23_8_4 ^ holds_23_8_5);
    s.add(b);    expr holds_23_9_4 = c.bool_const("holds_23_9_4");
    b = (holds_23_9_4 ^ holds_23_9_5);
    s.add(b);    expr holds_23_10_4 = c.bool_const("holds_23_10_4");
    b = (holds_23_10_4 ^ holds_23_10_5);
    s.add(b);    expr holds_23_11_4 = c.bool_const("holds_23_11_4");
    b = (holds_23_11_4 ^ holds_23_11_5);
    s.add(b);    expr holds_23_12_4 = c.bool_const("holds_23_12_4");
    b = (holds_23_12_4 ^ holds_23_12_5);
    s.add(b);    expr holds_23_13_4 = c.bool_const("holds_23_13_4");
    b = (holds_23_13_4 ^ holds_23_13_5);
    s.add(b);    expr holds_23_14_4 = c.bool_const("holds_23_14_4");
    b = (holds_23_14_4 ^ holds_23_14_5);
    s.add(b);    expr holds_23_15_4 = c.bool_const("holds_23_15_4");
    b = (holds_23_15_4 ^ holds_23_15_5);
    s.add(b);    expr holds_23_16_4 = c.bool_const("holds_23_16_4");
    b = (holds_23_16_4 ^ holds_23_16_5);
    s.add(b);    expr holds_23_17_4 = c.bool_const("holds_23_17_4");
    b = (holds_23_17_4 ^ holds_23_17_5);
    s.add(b);    expr holds_23_18_4 = c.bool_const("holds_23_18_4");
    b = (holds_23_18_4 ^ holds_23_18_5);
    s.add(b);    expr holds_23_19_4 = c.bool_const("holds_23_19_4");
    b = (holds_23_19_4 ^ holds_23_19_5);
    s.add(b);    expr holds_23_20_4 = c.bool_const("holds_23_20_4");
    b = (holds_23_20_4 ^ holds_23_20_5);
    s.add(b);    expr holds_23_21_4 = c.bool_const("holds_23_21_4");
    b = (holds_23_21_4 ^ holds_23_21_5);
    s.add(b);    expr holds_23_22_4 = c.bool_const("holds_23_22_4");
    b = (holds_23_22_4 ^ holds_23_22_5);
    s.add(b);    expr holds_23_23_4 = c.bool_const("holds_23_23_4");
    b = (holds_23_23_4 ^ holds_23_23_5);
    s.add(b);    b = ((holds_0_0_0 && holds_0_0_1 && holds_0_0_4)) || ((!holds_0_0_0 && (!holds_0_0_1 || !holds_0_0_4)));
    s.add(b);
    b = ((holds_0_1_0 && holds_0_1_1 && holds_0_1_4)) || ((!holds_0_1_0 && (!holds_0_1_1 || !holds_0_1_4)));
    s.add(b);
    b = ((holds_0_2_0 && holds_0_2_1 && holds_0_2_4)) || ((!holds_0_2_0 && (!holds_0_2_1 || !holds_0_2_4)));
    s.add(b);
    b = ((holds_0_3_0 && holds_0_3_1 && holds_0_3_4)) || ((!holds_0_3_0 && (!holds_0_3_1 || !holds_0_3_4)));
    s.add(b);
    b = ((holds_0_4_0 && holds_0_4_1 && holds_0_4_4)) || ((!holds_0_4_0 && (!holds_0_4_1 || !holds_0_4_4)));
    s.add(b);
    b = ((holds_0_5_0 && holds_0_5_1 && holds_0_5_4)) || ((!holds_0_5_0 && (!holds_0_5_1 || !holds_0_5_4)));
    s.add(b);
    b = ((holds_0_6_0 && holds_0_6_1 && holds_0_6_4)) || ((!holds_0_6_0 && (!holds_0_6_1 || !holds_0_6_4)));
    s.add(b);
    b = ((holds_0_7_0 && holds_0_7_1 && holds_0_7_4)) || ((!holds_0_7_0 && (!holds_0_7_1 || !holds_0_7_4)));
    s.add(b);
    b = ((holds_0_8_0 && holds_0_8_1 && holds_0_8_4)) || ((!holds_0_8_0 && (!holds_0_8_1 || !holds_0_8_4)));
    s.add(b);
    b = ((holds_0_9_0 && holds_0_9_1 && holds_0_9_4)) || ((!holds_0_9_0 && (!holds_0_9_1 || !holds_0_9_4)));
    s.add(b);
    b = ((holds_0_10_0 && holds_0_10_1 && holds_0_10_4)) || ((!holds_0_10_0 && (!holds_0_10_1 || !holds_0_10_4)));
    s.add(b);
    b = ((holds_0_11_0 && holds_0_11_1 && holds_0_11_4)) || ((!holds_0_11_0 && (!holds_0_11_1 || !holds_0_11_4)));
    s.add(b);
    b = ((holds_0_12_0 && holds_0_12_1 && holds_0_12_4)) || ((!holds_0_12_0 && (!holds_0_12_1 || !holds_0_12_4)));
    s.add(b);
    b = ((holds_0_13_0 && holds_0_13_1 && holds_0_13_4)) || ((!holds_0_13_0 && (!holds_0_13_1 || !holds_0_13_4)));
    s.add(b);
    b = ((holds_0_14_0 && holds_0_14_1 && holds_0_14_4)) || ((!holds_0_14_0 && (!holds_0_14_1 || !holds_0_14_4)));
    s.add(b);
    b = ((holds_0_15_0 && holds_0_15_1 && holds_0_15_4)) || ((!holds_0_15_0 && (!holds_0_15_1 || !holds_0_15_4)));
    s.add(b);
    b = ((holds_0_16_0 && holds_0_16_1 && holds_0_16_4)) || ((!holds_0_16_0 && (!holds_0_16_1 || !holds_0_16_4)));
    s.add(b);
    b = ((holds_0_17_0 && holds_0_17_1 && holds_0_17_4)) || ((!holds_0_17_0 && (!holds_0_17_1 || !holds_0_17_4)));
    s.add(b);
    b = ((holds_0_18_0 && holds_0_18_1 && holds_0_18_4)) || ((!holds_0_18_0 && (!holds_0_18_1 || !holds_0_18_4)));
    s.add(b);
    b = ((holds_0_19_0 && holds_0_19_1 && holds_0_19_4)) || ((!holds_0_19_0 && (!holds_0_19_1 || !holds_0_19_4)));
    s.add(b);
    b = ((holds_0_20_0 && holds_0_20_1 && holds_0_20_4)) || ((!holds_0_20_0 && (!holds_0_20_1 || !holds_0_20_4)));
    s.add(b);
    b = ((holds_0_21_0 && holds_0_21_1 && holds_0_21_4)) || ((!holds_0_21_0 && (!holds_0_21_1 || !holds_0_21_4)));
    s.add(b);
    b = ((holds_0_22_0 && holds_0_22_1 && holds_0_22_4)) || ((!holds_0_22_0 && (!holds_0_22_1 || !holds_0_22_4)));
    s.add(b);
    b = ((holds_0_23_0 && holds_0_23_1 && holds_0_23_4)) || ((!holds_0_23_0 && (!holds_0_23_1 || !holds_0_23_4)));
    s.add(b);
    b = ((holds_1_0_0 && holds_1_0_1 && holds_1_0_4)) || ((!holds_1_0_0 && (!holds_1_0_1 || !holds_1_0_4)));
    s.add(b);
    b = ((holds_1_1_0 && holds_1_1_1 && holds_1_1_4)) || ((!holds_1_1_0 && (!holds_1_1_1 || !holds_1_1_4)));
    s.add(b);
    b = ((holds_1_2_0 && holds_1_2_1 && holds_1_2_4)) || ((!holds_1_2_0 && (!holds_1_2_1 || !holds_1_2_4)));
    s.add(b);
    b = ((holds_1_3_0 && holds_1_3_1 && holds_1_3_4)) || ((!holds_1_3_0 && (!holds_1_3_1 || !holds_1_3_4)));
    s.add(b);
    b = ((holds_1_4_0 && holds_1_4_1 && holds_1_4_4)) || ((!holds_1_4_0 && (!holds_1_4_1 || !holds_1_4_4)));
    s.add(b);
    b = ((holds_1_5_0 && holds_1_5_1 && holds_1_5_4)) || ((!holds_1_5_0 && (!holds_1_5_1 || !holds_1_5_4)));
    s.add(b);
    b = ((holds_1_6_0 && holds_1_6_1 && holds_1_6_4)) || ((!holds_1_6_0 && (!holds_1_6_1 || !holds_1_6_4)));
    s.add(b);
    b = ((holds_1_7_0 && holds_1_7_1 && holds_1_7_4)) || ((!holds_1_7_0 && (!holds_1_7_1 || !holds_1_7_4)));
    s.add(b);
    b = ((holds_1_8_0 && holds_1_8_1 && holds_1_8_4)) || ((!holds_1_8_0 && (!holds_1_8_1 || !holds_1_8_4)));
    s.add(b);
    b = ((holds_1_9_0 && holds_1_9_1 && holds_1_9_4)) || ((!holds_1_9_0 && (!holds_1_9_1 || !holds_1_9_4)));
    s.add(b);
    b = ((holds_1_10_0 && holds_1_10_1 && holds_1_10_4)) || ((!holds_1_10_0 && (!holds_1_10_1 || !holds_1_10_4)));
    s.add(b);
    b = ((holds_1_11_0 && holds_1_11_1 && holds_1_11_4)) || ((!holds_1_11_0 && (!holds_1_11_1 || !holds_1_11_4)));
    s.add(b);
    b = ((holds_1_12_0 && holds_1_12_1 && holds_1_12_4)) || ((!holds_1_12_0 && (!holds_1_12_1 || !holds_1_12_4)));
    s.add(b);
    b = ((holds_1_13_0 && holds_1_13_1 && holds_1_13_4)) || ((!holds_1_13_0 && (!holds_1_13_1 || !holds_1_13_4)));
    s.add(b);
    b = ((holds_1_14_0 && holds_1_14_1 && holds_1_14_4)) || ((!holds_1_14_0 && (!holds_1_14_1 || !holds_1_14_4)));
    s.add(b);
    b = ((holds_1_15_0 && holds_1_15_1 && holds_1_15_4)) || ((!holds_1_15_0 && (!holds_1_15_1 || !holds_1_15_4)));
    s.add(b);
    b = ((holds_1_16_0 && holds_1_16_1 && holds_1_16_4)) || ((!holds_1_16_0 && (!holds_1_16_1 || !holds_1_16_4)));
    s.add(b);
    b = ((holds_1_17_0 && holds_1_17_1 && holds_1_17_4)) || ((!holds_1_17_0 && (!holds_1_17_1 || !holds_1_17_4)));
    s.add(b);
    b = ((holds_1_18_0 && holds_1_18_1 && holds_1_18_4)) || ((!holds_1_18_0 && (!holds_1_18_1 || !holds_1_18_4)));
    s.add(b);
    b = ((holds_1_19_0 && holds_1_19_1 && holds_1_19_4)) || ((!holds_1_19_0 && (!holds_1_19_1 || !holds_1_19_4)));
    s.add(b);
    b = ((holds_1_20_0 && holds_1_20_1 && holds_1_20_4)) || ((!holds_1_20_0 && (!holds_1_20_1 || !holds_1_20_4)));
    s.add(b);
    b = ((holds_1_21_0 && holds_1_21_1 && holds_1_21_4)) || ((!holds_1_21_0 && (!holds_1_21_1 || !holds_1_21_4)));
    s.add(b);
    b = ((holds_1_22_0 && holds_1_22_1 && holds_1_22_4)) || ((!holds_1_22_0 && (!holds_1_22_1 || !holds_1_22_4)));
    s.add(b);
    b = ((holds_1_23_0 && holds_1_23_1 && holds_1_23_4)) || ((!holds_1_23_0 && (!holds_1_23_1 || !holds_1_23_4)));
    s.add(b);
    b = ((holds_2_0_0 && holds_2_0_1 && holds_2_0_4)) || ((!holds_2_0_0 && (!holds_2_0_1 || !holds_2_0_4)));
    s.add(b);
    b = ((holds_2_1_0 && holds_2_1_1 && holds_2_1_4)) || ((!holds_2_1_0 && (!holds_2_1_1 || !holds_2_1_4)));
    s.add(b);
    b = ((holds_2_2_0 && holds_2_2_1 && holds_2_2_4)) || ((!holds_2_2_0 && (!holds_2_2_1 || !holds_2_2_4)));
    s.add(b);
    b = ((holds_2_3_0 && holds_2_3_1 && holds_2_3_4)) || ((!holds_2_3_0 && (!holds_2_3_1 || !holds_2_3_4)));
    s.add(b);
    b = ((holds_2_4_0 && holds_2_4_1 && holds_2_4_4)) || ((!holds_2_4_0 && (!holds_2_4_1 || !holds_2_4_4)));
    s.add(b);
    b = ((holds_2_5_0 && holds_2_5_1 && holds_2_5_4)) || ((!holds_2_5_0 && (!holds_2_5_1 || !holds_2_5_4)));
    s.add(b);
    b = ((holds_2_6_0 && holds_2_6_1 && holds_2_6_4)) || ((!holds_2_6_0 && (!holds_2_6_1 || !holds_2_6_4)));
    s.add(b);
    b = ((holds_2_7_0 && holds_2_7_1 && holds_2_7_4)) || ((!holds_2_7_0 && (!holds_2_7_1 || !holds_2_7_4)));
    s.add(b);
    b = ((holds_2_8_0 && holds_2_8_1 && holds_2_8_4)) || ((!holds_2_8_0 && (!holds_2_8_1 || !holds_2_8_4)));
    s.add(b);
    b = ((holds_2_9_0 && holds_2_9_1 && holds_2_9_4)) || ((!holds_2_9_0 && (!holds_2_9_1 || !holds_2_9_4)));
    s.add(b);
    b = ((holds_2_10_0 && holds_2_10_1 && holds_2_10_4)) || ((!holds_2_10_0 && (!holds_2_10_1 || !holds_2_10_4)));
    s.add(b);
    b = ((holds_2_11_0 && holds_2_11_1 && holds_2_11_4)) || ((!holds_2_11_0 && (!holds_2_11_1 || !holds_2_11_4)));
    s.add(b);
    b = ((holds_2_12_0 && holds_2_12_1 && holds_2_12_4)) || ((!holds_2_12_0 && (!holds_2_12_1 || !holds_2_12_4)));
    s.add(b);
    b = ((holds_2_13_0 && holds_2_13_1 && holds_2_13_4)) || ((!holds_2_13_0 && (!holds_2_13_1 || !holds_2_13_4)));
    s.add(b);
    b = ((holds_2_14_0 && holds_2_14_1 && holds_2_14_4)) || ((!holds_2_14_0 && (!holds_2_14_1 || !holds_2_14_4)));
    s.add(b);
    b = ((holds_2_15_0 && holds_2_15_1 && holds_2_15_4)) || ((!holds_2_15_0 && (!holds_2_15_1 || !holds_2_15_4)));
    s.add(b);
    b = ((holds_2_16_0 && holds_2_16_1 && holds_2_16_4)) || ((!holds_2_16_0 && (!holds_2_16_1 || !holds_2_16_4)));
    s.add(b);
    b = ((holds_2_17_0 && holds_2_17_1 && holds_2_17_4)) || ((!holds_2_17_0 && (!holds_2_17_1 || !holds_2_17_4)));
    s.add(b);
    b = ((holds_2_18_0 && holds_2_18_1 && holds_2_18_4)) || ((!holds_2_18_0 && (!holds_2_18_1 || !holds_2_18_4)));
    s.add(b);
    b = ((holds_2_19_0 && holds_2_19_1 && holds_2_19_4)) || ((!holds_2_19_0 && (!holds_2_19_1 || !holds_2_19_4)));
    s.add(b);
    b = ((holds_2_20_0 && holds_2_20_1 && holds_2_20_4)) || ((!holds_2_20_0 && (!holds_2_20_1 || !holds_2_20_4)));
    s.add(b);
    b = ((holds_2_21_0 && holds_2_21_1 && holds_2_21_4)) || ((!holds_2_21_0 && (!holds_2_21_1 || !holds_2_21_4)));
    s.add(b);
    b = ((holds_2_22_0 && holds_2_22_1 && holds_2_22_4)) || ((!holds_2_22_0 && (!holds_2_22_1 || !holds_2_22_4)));
    s.add(b);
    b = ((holds_2_23_0 && holds_2_23_1 && holds_2_23_4)) || ((!holds_2_23_0 && (!holds_2_23_1 || !holds_2_23_4)));
    s.add(b);
    b = ((holds_3_0_0 && holds_3_0_1 && holds_3_0_4)) || ((!holds_3_0_0 && (!holds_3_0_1 || !holds_3_0_4)));
    s.add(b);
    b = ((holds_3_1_0 && holds_3_1_1 && holds_3_1_4)) || ((!holds_3_1_0 && (!holds_3_1_1 || !holds_3_1_4)));
    s.add(b);
    b = ((holds_3_2_0 && holds_3_2_1 && holds_3_2_4)) || ((!holds_3_2_0 && (!holds_3_2_1 || !holds_3_2_4)));
    s.add(b);
    b = ((holds_3_3_0 && holds_3_3_1 && holds_3_3_4)) || ((!holds_3_3_0 && (!holds_3_3_1 || !holds_3_3_4)));
    s.add(b);
    b = ((holds_3_4_0 && holds_3_4_1 && holds_3_4_4)) || ((!holds_3_4_0 && (!holds_3_4_1 || !holds_3_4_4)));
    s.add(b);
    b = ((holds_3_5_0 && holds_3_5_1 && holds_3_5_4)) || ((!holds_3_5_0 && (!holds_3_5_1 || !holds_3_5_4)));
    s.add(b);
    b = ((holds_3_6_0 && holds_3_6_1 && holds_3_6_4)) || ((!holds_3_6_0 && (!holds_3_6_1 || !holds_3_6_4)));
    s.add(b);
    b = ((holds_3_7_0 && holds_3_7_1 && holds_3_7_4)) || ((!holds_3_7_0 && (!holds_3_7_1 || !holds_3_7_4)));
    s.add(b);
    b = ((holds_3_8_0 && holds_3_8_1 && holds_3_8_4)) || ((!holds_3_8_0 && (!holds_3_8_1 || !holds_3_8_4)));
    s.add(b);
    b = ((holds_3_9_0 && holds_3_9_1 && holds_3_9_4)) || ((!holds_3_9_0 && (!holds_3_9_1 || !holds_3_9_4)));
    s.add(b);
    b = ((holds_3_10_0 && holds_3_10_1 && holds_3_10_4)) || ((!holds_3_10_0 && (!holds_3_10_1 || !holds_3_10_4)));
    s.add(b);
    b = ((holds_3_11_0 && holds_3_11_1 && holds_3_11_4)) || ((!holds_3_11_0 && (!holds_3_11_1 || !holds_3_11_4)));
    s.add(b);
    b = ((holds_3_12_0 && holds_3_12_1 && holds_3_12_4)) || ((!holds_3_12_0 && (!holds_3_12_1 || !holds_3_12_4)));
    s.add(b);
    b = ((holds_3_13_0 && holds_3_13_1 && holds_3_13_4)) || ((!holds_3_13_0 && (!holds_3_13_1 || !holds_3_13_4)));
    s.add(b);
    b = ((holds_3_14_0 && holds_3_14_1 && holds_3_14_4)) || ((!holds_3_14_0 && (!holds_3_14_1 || !holds_3_14_4)));
    s.add(b);
    b = ((holds_3_15_0 && holds_3_15_1 && holds_3_15_4)) || ((!holds_3_15_0 && (!holds_3_15_1 || !holds_3_15_4)));
    s.add(b);
    b = ((holds_3_16_0 && holds_3_16_1 && holds_3_16_4)) || ((!holds_3_16_0 && (!holds_3_16_1 || !holds_3_16_4)));
    s.add(b);
    b = ((holds_3_17_0 && holds_3_17_1 && holds_3_17_4)) || ((!holds_3_17_0 && (!holds_3_17_1 || !holds_3_17_4)));
    s.add(b);
    b = ((holds_3_18_0 && holds_3_18_1 && holds_3_18_4)) || ((!holds_3_18_0 && (!holds_3_18_1 || !holds_3_18_4)));
    s.add(b);
    b = ((holds_3_19_0 && holds_3_19_1 && holds_3_19_4)) || ((!holds_3_19_0 && (!holds_3_19_1 || !holds_3_19_4)));
    s.add(b);
    b = ((holds_3_20_0 && holds_3_20_1 && holds_3_20_4)) || ((!holds_3_20_0 && (!holds_3_20_1 || !holds_3_20_4)));
    s.add(b);
    b = ((holds_3_21_0 && holds_3_21_1 && holds_3_21_4)) || ((!holds_3_21_0 && (!holds_3_21_1 || !holds_3_21_4)));
    s.add(b);
    b = ((holds_3_22_0 && holds_3_22_1 && holds_3_22_4)) || ((!holds_3_22_0 && (!holds_3_22_1 || !holds_3_22_4)));
    s.add(b);
    b = ((holds_3_23_0 && holds_3_23_1 && holds_3_23_4)) || ((!holds_3_23_0 && (!holds_3_23_1 || !holds_3_23_4)));
    s.add(b);
    b = ((holds_4_0_0 && holds_4_0_1 && holds_4_0_4)) || ((!holds_4_0_0 && (!holds_4_0_1 || !holds_4_0_4)));
    s.add(b);
    b = ((holds_4_1_0 && holds_4_1_1 && holds_4_1_4)) || ((!holds_4_1_0 && (!holds_4_1_1 || !holds_4_1_4)));
    s.add(b);
    b = ((holds_4_2_0 && holds_4_2_1 && holds_4_2_4)) || ((!holds_4_2_0 && (!holds_4_2_1 || !holds_4_2_4)));
    s.add(b);
    b = ((holds_4_3_0 && holds_4_3_1 && holds_4_3_4)) || ((!holds_4_3_0 && (!holds_4_3_1 || !holds_4_3_4)));
    s.add(b);
    b = ((holds_4_4_0 && holds_4_4_1 && holds_4_4_4)) || ((!holds_4_4_0 && (!holds_4_4_1 || !holds_4_4_4)));
    s.add(b);
    b = ((holds_4_5_0 && holds_4_5_1 && holds_4_5_4)) || ((!holds_4_5_0 && (!holds_4_5_1 || !holds_4_5_4)));
    s.add(b);
    b = ((holds_4_6_0 && holds_4_6_1 && holds_4_6_4)) || ((!holds_4_6_0 && (!holds_4_6_1 || !holds_4_6_4)));
    s.add(b);
    b = ((holds_4_7_0 && holds_4_7_1 && holds_4_7_4)) || ((!holds_4_7_0 && (!holds_4_7_1 || !holds_4_7_4)));
    s.add(b);
    b = ((holds_4_8_0 && holds_4_8_1 && holds_4_8_4)) || ((!holds_4_8_0 && (!holds_4_8_1 || !holds_4_8_4)));
    s.add(b);
    b = ((holds_4_9_0 && holds_4_9_1 && holds_4_9_4)) || ((!holds_4_9_0 && (!holds_4_9_1 || !holds_4_9_4)));
    s.add(b);
    b = ((holds_4_10_0 && holds_4_10_1 && holds_4_10_4)) || ((!holds_4_10_0 && (!holds_4_10_1 || !holds_4_10_4)));
    s.add(b);
    b = ((holds_4_11_0 && holds_4_11_1 && holds_4_11_4)) || ((!holds_4_11_0 && (!holds_4_11_1 || !holds_4_11_4)));
    s.add(b);
    b = ((holds_4_12_0 && holds_4_12_1 && holds_4_12_4)) || ((!holds_4_12_0 && (!holds_4_12_1 || !holds_4_12_4)));
    s.add(b);
    b = ((holds_4_13_0 && holds_4_13_1 && holds_4_13_4)) || ((!holds_4_13_0 && (!holds_4_13_1 || !holds_4_13_4)));
    s.add(b);
    b = ((holds_4_14_0 && holds_4_14_1 && holds_4_14_4)) || ((!holds_4_14_0 && (!holds_4_14_1 || !holds_4_14_4)));
    s.add(b);
    b = ((holds_4_15_0 && holds_4_15_1 && holds_4_15_4)) || ((!holds_4_15_0 && (!holds_4_15_1 || !holds_4_15_4)));
    s.add(b);
    b = ((holds_4_16_0 && holds_4_16_1 && holds_4_16_4)) || ((!holds_4_16_0 && (!holds_4_16_1 || !holds_4_16_4)));
    s.add(b);
    b = ((holds_4_17_0 && holds_4_17_1 && holds_4_17_4)) || ((!holds_4_17_0 && (!holds_4_17_1 || !holds_4_17_4)));
    s.add(b);
    b = ((holds_4_18_0 && holds_4_18_1 && holds_4_18_4)) || ((!holds_4_18_0 && (!holds_4_18_1 || !holds_4_18_4)));
    s.add(b);
    b = ((holds_4_19_0 && holds_4_19_1 && holds_4_19_4)) || ((!holds_4_19_0 && (!holds_4_19_1 || !holds_4_19_4)));
    s.add(b);
    b = ((holds_4_20_0 && holds_4_20_1 && holds_4_20_4)) || ((!holds_4_20_0 && (!holds_4_20_1 || !holds_4_20_4)));
    s.add(b);
    b = ((holds_4_21_0 && holds_4_21_1 && holds_4_21_4)) || ((!holds_4_21_0 && (!holds_4_21_1 || !holds_4_21_4)));
    s.add(b);
    b = ((holds_4_22_0 && holds_4_22_1 && holds_4_22_4)) || ((!holds_4_22_0 && (!holds_4_22_1 || !holds_4_22_4)));
    s.add(b);
    b = ((holds_4_23_0 && holds_4_23_1 && holds_4_23_4)) || ((!holds_4_23_0 && (!holds_4_23_1 || !holds_4_23_4)));
    s.add(b);
    b = ((holds_5_0_0 && holds_5_0_1 && holds_5_0_4)) || ((!holds_5_0_0 && (!holds_5_0_1 || !holds_5_0_4)));
    s.add(b);
    b = ((holds_5_1_0 && holds_5_1_1 && holds_5_1_4)) || ((!holds_5_1_0 && (!holds_5_1_1 || !holds_5_1_4)));
    s.add(b);
    b = ((holds_5_2_0 && holds_5_2_1 && holds_5_2_4)) || ((!holds_5_2_0 && (!holds_5_2_1 || !holds_5_2_4)));
    s.add(b);
    b = ((holds_5_3_0 && holds_5_3_1 && holds_5_3_4)) || ((!holds_5_3_0 && (!holds_5_3_1 || !holds_5_3_4)));
    s.add(b);
    b = ((holds_5_4_0 && holds_5_4_1 && holds_5_4_4)) || ((!holds_5_4_0 && (!holds_5_4_1 || !holds_5_4_4)));
    s.add(b);
    b = ((holds_5_5_0 && holds_5_5_1 && holds_5_5_4)) || ((!holds_5_5_0 && (!holds_5_5_1 || !holds_5_5_4)));
    s.add(b);
    b = ((holds_5_6_0 && holds_5_6_1 && holds_5_6_4)) || ((!holds_5_6_0 && (!holds_5_6_1 || !holds_5_6_4)));
    s.add(b);
    b = ((holds_5_7_0 && holds_5_7_1 && holds_5_7_4)) || ((!holds_5_7_0 && (!holds_5_7_1 || !holds_5_7_4)));
    s.add(b);
    b = ((holds_5_8_0 && holds_5_8_1 && holds_5_8_4)) || ((!holds_5_8_0 && (!holds_5_8_1 || !holds_5_8_4)));
    s.add(b);
    b = ((holds_5_9_0 && holds_5_9_1 && holds_5_9_4)) || ((!holds_5_9_0 && (!holds_5_9_1 || !holds_5_9_4)));
    s.add(b);
    b = ((holds_5_10_0 && holds_5_10_1 && holds_5_10_4)) || ((!holds_5_10_0 && (!holds_5_10_1 || !holds_5_10_4)));
    s.add(b);
    b = ((holds_5_11_0 && holds_5_11_1 && holds_5_11_4)) || ((!holds_5_11_0 && (!holds_5_11_1 || !holds_5_11_4)));
    s.add(b);
    b = ((holds_5_12_0 && holds_5_12_1 && holds_5_12_4)) || ((!holds_5_12_0 && (!holds_5_12_1 || !holds_5_12_4)));
    s.add(b);
    b = ((holds_5_13_0 && holds_5_13_1 && holds_5_13_4)) || ((!holds_5_13_0 && (!holds_5_13_1 || !holds_5_13_4)));
    s.add(b);
    b = ((holds_5_14_0 && holds_5_14_1 && holds_5_14_4)) || ((!holds_5_14_0 && (!holds_5_14_1 || !holds_5_14_4)));
    s.add(b);
    b = ((holds_5_15_0 && holds_5_15_1 && holds_5_15_4)) || ((!holds_5_15_0 && (!holds_5_15_1 || !holds_5_15_4)));
    s.add(b);
    b = ((holds_5_16_0 && holds_5_16_1 && holds_5_16_4)) || ((!holds_5_16_0 && (!holds_5_16_1 || !holds_5_16_4)));
    s.add(b);
    b = ((holds_5_17_0 && holds_5_17_1 && holds_5_17_4)) || ((!holds_5_17_0 && (!holds_5_17_1 || !holds_5_17_4)));
    s.add(b);
    b = ((holds_5_18_0 && holds_5_18_1 && holds_5_18_4)) || ((!holds_5_18_0 && (!holds_5_18_1 || !holds_5_18_4)));
    s.add(b);
    b = ((holds_5_19_0 && holds_5_19_1 && holds_5_19_4)) || ((!holds_5_19_0 && (!holds_5_19_1 || !holds_5_19_4)));
    s.add(b);
    b = ((holds_5_20_0 && holds_5_20_1 && holds_5_20_4)) || ((!holds_5_20_0 && (!holds_5_20_1 || !holds_5_20_4)));
    s.add(b);
    b = ((holds_5_21_0 && holds_5_21_1 && holds_5_21_4)) || ((!holds_5_21_0 && (!holds_5_21_1 || !holds_5_21_4)));
    s.add(b);
    b = ((holds_5_22_0 && holds_5_22_1 && holds_5_22_4)) || ((!holds_5_22_0 && (!holds_5_22_1 || !holds_5_22_4)));
    s.add(b);
    b = ((holds_5_23_0 && holds_5_23_1 && holds_5_23_4)) || ((!holds_5_23_0 && (!holds_5_23_1 || !holds_5_23_4)));
    s.add(b);
    b = ((holds_6_0_0 && holds_6_0_1 && holds_6_0_4)) || ((!holds_6_0_0 && (!holds_6_0_1 || !holds_6_0_4)));
    s.add(b);
    b = ((holds_6_1_0 && holds_6_1_1 && holds_6_1_4)) || ((!holds_6_1_0 && (!holds_6_1_1 || !holds_6_1_4)));
    s.add(b);
    b = ((holds_6_2_0 && holds_6_2_1 && holds_6_2_4)) || ((!holds_6_2_0 && (!holds_6_2_1 || !holds_6_2_4)));
    s.add(b);
    b = ((holds_6_3_0 && holds_6_3_1 && holds_6_3_4)) || ((!holds_6_3_0 && (!holds_6_3_1 || !holds_6_3_4)));
    s.add(b);
    b = ((holds_6_4_0 && holds_6_4_1 && holds_6_4_4)) || ((!holds_6_4_0 && (!holds_6_4_1 || !holds_6_4_4)));
    s.add(b);
    b = ((holds_6_5_0 && holds_6_5_1 && holds_6_5_4)) || ((!holds_6_5_0 && (!holds_6_5_1 || !holds_6_5_4)));
    s.add(b);
    b = ((holds_6_6_0 && holds_6_6_1 && holds_6_6_4)) || ((!holds_6_6_0 && (!holds_6_6_1 || !holds_6_6_4)));
    s.add(b);
    b = ((holds_6_7_0 && holds_6_7_1 && holds_6_7_4)) || ((!holds_6_7_0 && (!holds_6_7_1 || !holds_6_7_4)));
    s.add(b);
    b = ((holds_6_8_0 && holds_6_8_1 && holds_6_8_4)) || ((!holds_6_8_0 && (!holds_6_8_1 || !holds_6_8_4)));
    s.add(b);
    b = ((holds_6_9_0 && holds_6_9_1 && holds_6_9_4)) || ((!holds_6_9_0 && (!holds_6_9_1 || !holds_6_9_4)));
    s.add(b);
    b = ((holds_6_10_0 && holds_6_10_1 && holds_6_10_4)) || ((!holds_6_10_0 && (!holds_6_10_1 || !holds_6_10_4)));
    s.add(b);
    b = ((holds_6_11_0 && holds_6_11_1 && holds_6_11_4)) || ((!holds_6_11_0 && (!holds_6_11_1 || !holds_6_11_4)));
    s.add(b);
    b = ((holds_6_12_0 && holds_6_12_1 && holds_6_12_4)) || ((!holds_6_12_0 && (!holds_6_12_1 || !holds_6_12_4)));
    s.add(b);
    b = ((holds_6_13_0 && holds_6_13_1 && holds_6_13_4)) || ((!holds_6_13_0 && (!holds_6_13_1 || !holds_6_13_4)));
    s.add(b);
    b = ((holds_6_14_0 && holds_6_14_1 && holds_6_14_4)) || ((!holds_6_14_0 && (!holds_6_14_1 || !holds_6_14_4)));
    s.add(b);
    b = ((holds_6_15_0 && holds_6_15_1 && holds_6_15_4)) || ((!holds_6_15_0 && (!holds_6_15_1 || !holds_6_15_4)));
    s.add(b);
    b = ((holds_6_16_0 && holds_6_16_1 && holds_6_16_4)) || ((!holds_6_16_0 && (!holds_6_16_1 || !holds_6_16_4)));
    s.add(b);
    b = ((holds_6_17_0 && holds_6_17_1 && holds_6_17_4)) || ((!holds_6_17_0 && (!holds_6_17_1 || !holds_6_17_4)));
    s.add(b);
    b = ((holds_6_18_0 && holds_6_18_1 && holds_6_18_4)) || ((!holds_6_18_0 && (!holds_6_18_1 || !holds_6_18_4)));
    s.add(b);
    b = ((holds_6_19_0 && holds_6_19_1 && holds_6_19_4)) || ((!holds_6_19_0 && (!holds_6_19_1 || !holds_6_19_4)));
    s.add(b);
    b = ((holds_6_20_0 && holds_6_20_1 && holds_6_20_4)) || ((!holds_6_20_0 && (!holds_6_20_1 || !holds_6_20_4)));
    s.add(b);
    b = ((holds_6_21_0 && holds_6_21_1 && holds_6_21_4)) || ((!holds_6_21_0 && (!holds_6_21_1 || !holds_6_21_4)));
    s.add(b);
    b = ((holds_6_22_0 && holds_6_22_1 && holds_6_22_4)) || ((!holds_6_22_0 && (!holds_6_22_1 || !holds_6_22_4)));
    s.add(b);
    b = ((holds_6_23_0 && holds_6_23_1 && holds_6_23_4)) || ((!holds_6_23_0 && (!holds_6_23_1 || !holds_6_23_4)));
    s.add(b);
    b = ((holds_7_0_0 && holds_7_0_1 && holds_7_0_4)) || ((!holds_7_0_0 && (!holds_7_0_1 || !holds_7_0_4)));
    s.add(b);
    b = ((holds_7_1_0 && holds_7_1_1 && holds_7_1_4)) || ((!holds_7_1_0 && (!holds_7_1_1 || !holds_7_1_4)));
    s.add(b);
    b = ((holds_7_2_0 && holds_7_2_1 && holds_7_2_4)) || ((!holds_7_2_0 && (!holds_7_2_1 || !holds_7_2_4)));
    s.add(b);
    b = ((holds_7_3_0 && holds_7_3_1 && holds_7_3_4)) || ((!holds_7_3_0 && (!holds_7_3_1 || !holds_7_3_4)));
    s.add(b);
    b = ((holds_7_4_0 && holds_7_4_1 && holds_7_4_4)) || ((!holds_7_4_0 && (!holds_7_4_1 || !holds_7_4_4)));
    s.add(b);
    b = ((holds_7_5_0 && holds_7_5_1 && holds_7_5_4)) || ((!holds_7_5_0 && (!holds_7_5_1 || !holds_7_5_4)));
    s.add(b);
    b = ((holds_7_6_0 && holds_7_6_1 && holds_7_6_4)) || ((!holds_7_6_0 && (!holds_7_6_1 || !holds_7_6_4)));
    s.add(b);
    b = ((holds_7_7_0 && holds_7_7_1 && holds_7_7_4)) || ((!holds_7_7_0 && (!holds_7_7_1 || !holds_7_7_4)));
    s.add(b);
    b = ((holds_7_8_0 && holds_7_8_1 && holds_7_8_4)) || ((!holds_7_8_0 && (!holds_7_8_1 || !holds_7_8_4)));
    s.add(b);
    b = ((holds_7_9_0 && holds_7_9_1 && holds_7_9_4)) || ((!holds_7_9_0 && (!holds_7_9_1 || !holds_7_9_4)));
    s.add(b);
    b = ((holds_7_10_0 && holds_7_10_1 && holds_7_10_4)) || ((!holds_7_10_0 && (!holds_7_10_1 || !holds_7_10_4)));
    s.add(b);
    b = ((holds_7_11_0 && holds_7_11_1 && holds_7_11_4)) || ((!holds_7_11_0 && (!holds_7_11_1 || !holds_7_11_4)));
    s.add(b);
    b = ((holds_7_12_0 && holds_7_12_1 && holds_7_12_4)) || ((!holds_7_12_0 && (!holds_7_12_1 || !holds_7_12_4)));
    s.add(b);
    b = ((holds_7_13_0 && holds_7_13_1 && holds_7_13_4)) || ((!holds_7_13_0 && (!holds_7_13_1 || !holds_7_13_4)));
    s.add(b);
    b = ((holds_7_14_0 && holds_7_14_1 && holds_7_14_4)) || ((!holds_7_14_0 && (!holds_7_14_1 || !holds_7_14_4)));
    s.add(b);
    b = ((holds_7_15_0 && holds_7_15_1 && holds_7_15_4)) || ((!holds_7_15_0 && (!holds_7_15_1 || !holds_7_15_4)));
    s.add(b);
    b = ((holds_7_16_0 && holds_7_16_1 && holds_7_16_4)) || ((!holds_7_16_0 && (!holds_7_16_1 || !holds_7_16_4)));
    s.add(b);
    b = ((holds_7_17_0 && holds_7_17_1 && holds_7_17_4)) || ((!holds_7_17_0 && (!holds_7_17_1 || !holds_7_17_4)));
    s.add(b);
    b = ((holds_7_18_0 && holds_7_18_1 && holds_7_18_4)) || ((!holds_7_18_0 && (!holds_7_18_1 || !holds_7_18_4)));
    s.add(b);
    b = ((holds_7_19_0 && holds_7_19_1 && holds_7_19_4)) || ((!holds_7_19_0 && (!holds_7_19_1 || !holds_7_19_4)));
    s.add(b);
    b = ((holds_7_20_0 && holds_7_20_1 && holds_7_20_4)) || ((!holds_7_20_0 && (!holds_7_20_1 || !holds_7_20_4)));
    s.add(b);
    b = ((holds_7_21_0 && holds_7_21_1 && holds_7_21_4)) || ((!holds_7_21_0 && (!holds_7_21_1 || !holds_7_21_4)));
    s.add(b);
    b = ((holds_7_22_0 && holds_7_22_1 && holds_7_22_4)) || ((!holds_7_22_0 && (!holds_7_22_1 || !holds_7_22_4)));
    s.add(b);
    b = ((holds_7_23_0 && holds_7_23_1 && holds_7_23_4)) || ((!holds_7_23_0 && (!holds_7_23_1 || !holds_7_23_4)));
    s.add(b);
    b = ((holds_8_0_0 && holds_8_0_1 && holds_8_0_4)) || ((!holds_8_0_0 && (!holds_8_0_1 || !holds_8_0_4)));
    s.add(b);
    b = ((holds_8_1_0 && holds_8_1_1 && holds_8_1_4)) || ((!holds_8_1_0 && (!holds_8_1_1 || !holds_8_1_4)));
    s.add(b);
    b = ((holds_8_2_0 && holds_8_2_1 && holds_8_2_4)) || ((!holds_8_2_0 && (!holds_8_2_1 || !holds_8_2_4)));
    s.add(b);
    b = ((holds_8_3_0 && holds_8_3_1 && holds_8_3_4)) || ((!holds_8_3_0 && (!holds_8_3_1 || !holds_8_3_4)));
    s.add(b);
    b = ((holds_8_4_0 && holds_8_4_1 && holds_8_4_4)) || ((!holds_8_4_0 && (!holds_8_4_1 || !holds_8_4_4)));
    s.add(b);
    b = ((holds_8_5_0 && holds_8_5_1 && holds_8_5_4)) || ((!holds_8_5_0 && (!holds_8_5_1 || !holds_8_5_4)));
    s.add(b);
    b = ((holds_8_6_0 && holds_8_6_1 && holds_8_6_4)) || ((!holds_8_6_0 && (!holds_8_6_1 || !holds_8_6_4)));
    s.add(b);
    b = ((holds_8_7_0 && holds_8_7_1 && holds_8_7_4)) || ((!holds_8_7_0 && (!holds_8_7_1 || !holds_8_7_4)));
    s.add(b);
    b = ((holds_8_8_0 && holds_8_8_1 && holds_8_8_4)) || ((!holds_8_8_0 && (!holds_8_8_1 || !holds_8_8_4)));
    s.add(b);
    b = ((holds_8_9_0 && holds_8_9_1 && holds_8_9_4)) || ((!holds_8_9_0 && (!holds_8_9_1 || !holds_8_9_4)));
    s.add(b);
    b = ((holds_8_10_0 && holds_8_10_1 && holds_8_10_4)) || ((!holds_8_10_0 && (!holds_8_10_1 || !holds_8_10_4)));
    s.add(b);
    b = ((holds_8_11_0 && holds_8_11_1 && holds_8_11_4)) || ((!holds_8_11_0 && (!holds_8_11_1 || !holds_8_11_4)));
    s.add(b);
    b = ((holds_8_12_0 && holds_8_12_1 && holds_8_12_4)) || ((!holds_8_12_0 && (!holds_8_12_1 || !holds_8_12_4)));
    s.add(b);
    b = ((holds_8_13_0 && holds_8_13_1 && holds_8_13_4)) || ((!holds_8_13_0 && (!holds_8_13_1 || !holds_8_13_4)));
    s.add(b);
    b = ((holds_8_14_0 && holds_8_14_1 && holds_8_14_4)) || ((!holds_8_14_0 && (!holds_8_14_1 || !holds_8_14_4)));
    s.add(b);
    b = ((holds_8_15_0 && holds_8_15_1 && holds_8_15_4)) || ((!holds_8_15_0 && (!holds_8_15_1 || !holds_8_15_4)));
    s.add(b);
    b = ((holds_8_16_0 && holds_8_16_1 && holds_8_16_4)) || ((!holds_8_16_0 && (!holds_8_16_1 || !holds_8_16_4)));
    s.add(b);
    b = ((holds_8_17_0 && holds_8_17_1 && holds_8_17_4)) || ((!holds_8_17_0 && (!holds_8_17_1 || !holds_8_17_4)));
    s.add(b);
    b = ((holds_8_18_0 && holds_8_18_1 && holds_8_18_4)) || ((!holds_8_18_0 && (!holds_8_18_1 || !holds_8_18_4)));
    s.add(b);
    b = ((holds_8_19_0 && holds_8_19_1 && holds_8_19_4)) || ((!holds_8_19_0 && (!holds_8_19_1 || !holds_8_19_4)));
    s.add(b);
    b = ((holds_8_20_0 && holds_8_20_1 && holds_8_20_4)) || ((!holds_8_20_0 && (!holds_8_20_1 || !holds_8_20_4)));
    s.add(b);
    b = ((holds_8_21_0 && holds_8_21_1 && holds_8_21_4)) || ((!holds_8_21_0 && (!holds_8_21_1 || !holds_8_21_4)));
    s.add(b);
    b = ((holds_8_22_0 && holds_8_22_1 && holds_8_22_4)) || ((!holds_8_22_0 && (!holds_8_22_1 || !holds_8_22_4)));
    s.add(b);
    b = ((holds_8_23_0 && holds_8_23_1 && holds_8_23_4)) || ((!holds_8_23_0 && (!holds_8_23_1 || !holds_8_23_4)));
    s.add(b);
    b = ((holds_9_0_0 && holds_9_0_1 && holds_9_0_4)) || ((!holds_9_0_0 && (!holds_9_0_1 || !holds_9_0_4)));
    s.add(b);
    b = ((holds_9_1_0 && holds_9_1_1 && holds_9_1_4)) || ((!holds_9_1_0 && (!holds_9_1_1 || !holds_9_1_4)));
    s.add(b);
    b = ((holds_9_2_0 && holds_9_2_1 && holds_9_2_4)) || ((!holds_9_2_0 && (!holds_9_2_1 || !holds_9_2_4)));
    s.add(b);
    b = ((holds_9_3_0 && holds_9_3_1 && holds_9_3_4)) || ((!holds_9_3_0 && (!holds_9_3_1 || !holds_9_3_4)));
    s.add(b);
    b = ((holds_9_4_0 && holds_9_4_1 && holds_9_4_4)) || ((!holds_9_4_0 && (!holds_9_4_1 || !holds_9_4_4)));
    s.add(b);
    b = ((holds_9_5_0 && holds_9_5_1 && holds_9_5_4)) || ((!holds_9_5_0 && (!holds_9_5_1 || !holds_9_5_4)));
    s.add(b);
    b = ((holds_9_6_0 && holds_9_6_1 && holds_9_6_4)) || ((!holds_9_6_0 && (!holds_9_6_1 || !holds_9_6_4)));
    s.add(b);
    b = ((holds_9_7_0 && holds_9_7_1 && holds_9_7_4)) || ((!holds_9_7_0 && (!holds_9_7_1 || !holds_9_7_4)));
    s.add(b);
    b = ((holds_9_8_0 && holds_9_8_1 && holds_9_8_4)) || ((!holds_9_8_0 && (!holds_9_8_1 || !holds_9_8_4)));
    s.add(b);
    b = ((holds_9_9_0 && holds_9_9_1 && holds_9_9_4)) || ((!holds_9_9_0 && (!holds_9_9_1 || !holds_9_9_4)));
    s.add(b);
    b = ((holds_9_10_0 && holds_9_10_1 && holds_9_10_4)) || ((!holds_9_10_0 && (!holds_9_10_1 || !holds_9_10_4)));
    s.add(b);
    b = ((holds_9_11_0 && holds_9_11_1 && holds_9_11_4)) || ((!holds_9_11_0 && (!holds_9_11_1 || !holds_9_11_4)));
    s.add(b);
    b = ((holds_9_12_0 && holds_9_12_1 && holds_9_12_4)) || ((!holds_9_12_0 && (!holds_9_12_1 || !holds_9_12_4)));
    s.add(b);
    b = ((holds_9_13_0 && holds_9_13_1 && holds_9_13_4)) || ((!holds_9_13_0 && (!holds_9_13_1 || !holds_9_13_4)));
    s.add(b);
    b = ((holds_9_14_0 && holds_9_14_1 && holds_9_14_4)) || ((!holds_9_14_0 && (!holds_9_14_1 || !holds_9_14_4)));
    s.add(b);
    b = ((holds_9_15_0 && holds_9_15_1 && holds_9_15_4)) || ((!holds_9_15_0 && (!holds_9_15_1 || !holds_9_15_4)));
    s.add(b);
    b = ((holds_9_16_0 && holds_9_16_1 && holds_9_16_4)) || ((!holds_9_16_0 && (!holds_9_16_1 || !holds_9_16_4)));
    s.add(b);
    b = ((holds_9_17_0 && holds_9_17_1 && holds_9_17_4)) || ((!holds_9_17_0 && (!holds_9_17_1 || !holds_9_17_4)));
    s.add(b);
    b = ((holds_9_18_0 && holds_9_18_1 && holds_9_18_4)) || ((!holds_9_18_0 && (!holds_9_18_1 || !holds_9_18_4)));
    s.add(b);
    b = ((holds_9_19_0 && holds_9_19_1 && holds_9_19_4)) || ((!holds_9_19_0 && (!holds_9_19_1 || !holds_9_19_4)));
    s.add(b);
    b = ((holds_9_20_0 && holds_9_20_1 && holds_9_20_4)) || ((!holds_9_20_0 && (!holds_9_20_1 || !holds_9_20_4)));
    s.add(b);
    b = ((holds_9_21_0 && holds_9_21_1 && holds_9_21_4)) || ((!holds_9_21_0 && (!holds_9_21_1 || !holds_9_21_4)));
    s.add(b);
    b = ((holds_9_22_0 && holds_9_22_1 && holds_9_22_4)) || ((!holds_9_22_0 && (!holds_9_22_1 || !holds_9_22_4)));
    s.add(b);
    b = ((holds_9_23_0 && holds_9_23_1 && holds_9_23_4)) || ((!holds_9_23_0 && (!holds_9_23_1 || !holds_9_23_4)));
    s.add(b);
    b = ((holds_10_0_0 && holds_10_0_1 && holds_10_0_4)) || ((!holds_10_0_0 && (!holds_10_0_1 || !holds_10_0_4)));
    s.add(b);
    b = ((holds_10_1_0 && holds_10_1_1 && holds_10_1_4)) || ((!holds_10_1_0 && (!holds_10_1_1 || !holds_10_1_4)));
    s.add(b);
    b = ((holds_10_2_0 && holds_10_2_1 && holds_10_2_4)) || ((!holds_10_2_0 && (!holds_10_2_1 || !holds_10_2_4)));
    s.add(b);
    b = ((holds_10_3_0 && holds_10_3_1 && holds_10_3_4)) || ((!holds_10_3_0 && (!holds_10_3_1 || !holds_10_3_4)));
    s.add(b);
    b = ((holds_10_4_0 && holds_10_4_1 && holds_10_4_4)) || ((!holds_10_4_0 && (!holds_10_4_1 || !holds_10_4_4)));
    s.add(b);
    b = ((holds_10_5_0 && holds_10_5_1 && holds_10_5_4)) || ((!holds_10_5_0 && (!holds_10_5_1 || !holds_10_5_4)));
    s.add(b);
    b = ((holds_10_6_0 && holds_10_6_1 && holds_10_6_4)) || ((!holds_10_6_0 && (!holds_10_6_1 || !holds_10_6_4)));
    s.add(b);
    b = ((holds_10_7_0 && holds_10_7_1 && holds_10_7_4)) || ((!holds_10_7_0 && (!holds_10_7_1 || !holds_10_7_4)));
    s.add(b);
    b = ((holds_10_8_0 && holds_10_8_1 && holds_10_8_4)) || ((!holds_10_8_0 && (!holds_10_8_1 || !holds_10_8_4)));
    s.add(b);
    b = ((holds_10_9_0 && holds_10_9_1 && holds_10_9_4)) || ((!holds_10_9_0 && (!holds_10_9_1 || !holds_10_9_4)));
    s.add(b);
    b = ((holds_10_10_0 && holds_10_10_1 && holds_10_10_4)) || ((!holds_10_10_0 && (!holds_10_10_1 || !holds_10_10_4)));
    s.add(b);
    b = ((holds_10_11_0 && holds_10_11_1 && holds_10_11_4)) || ((!holds_10_11_0 && (!holds_10_11_1 || !holds_10_11_4)));
    s.add(b);
    b = ((holds_10_12_0 && holds_10_12_1 && holds_10_12_4)) || ((!holds_10_12_0 && (!holds_10_12_1 || !holds_10_12_4)));
    s.add(b);
    b = ((holds_10_13_0 && holds_10_13_1 && holds_10_13_4)) || ((!holds_10_13_0 && (!holds_10_13_1 || !holds_10_13_4)));
    s.add(b);
    b = ((holds_10_14_0 && holds_10_14_1 && holds_10_14_4)) || ((!holds_10_14_0 && (!holds_10_14_1 || !holds_10_14_4)));
    s.add(b);
    b = ((holds_10_15_0 && holds_10_15_1 && holds_10_15_4)) || ((!holds_10_15_0 && (!holds_10_15_1 || !holds_10_15_4)));
    s.add(b);
    b = ((holds_10_16_0 && holds_10_16_1 && holds_10_16_4)) || ((!holds_10_16_0 && (!holds_10_16_1 || !holds_10_16_4)));
    s.add(b);
    b = ((holds_10_17_0 && holds_10_17_1 && holds_10_17_4)) || ((!holds_10_17_0 && (!holds_10_17_1 || !holds_10_17_4)));
    s.add(b);
    b = ((holds_10_18_0 && holds_10_18_1 && holds_10_18_4)) || ((!holds_10_18_0 && (!holds_10_18_1 || !holds_10_18_4)));
    s.add(b);
    b = ((holds_10_19_0 && holds_10_19_1 && holds_10_19_4)) || ((!holds_10_19_0 && (!holds_10_19_1 || !holds_10_19_4)));
    s.add(b);
    b = ((holds_10_20_0 && holds_10_20_1 && holds_10_20_4)) || ((!holds_10_20_0 && (!holds_10_20_1 || !holds_10_20_4)));
    s.add(b);
    b = ((holds_10_21_0 && holds_10_21_1 && holds_10_21_4)) || ((!holds_10_21_0 && (!holds_10_21_1 || !holds_10_21_4)));
    s.add(b);
    b = ((holds_10_22_0 && holds_10_22_1 && holds_10_22_4)) || ((!holds_10_22_0 && (!holds_10_22_1 || !holds_10_22_4)));
    s.add(b);
    b = ((holds_10_23_0 && holds_10_23_1 && holds_10_23_4)) || ((!holds_10_23_0 && (!holds_10_23_1 || !holds_10_23_4)));
    s.add(b);
    b = ((holds_11_0_0 && holds_11_0_1 && holds_11_0_4)) || ((!holds_11_0_0 && (!holds_11_0_1 || !holds_11_0_4)));
    s.add(b);
    b = ((holds_11_1_0 && holds_11_1_1 && holds_11_1_4)) || ((!holds_11_1_0 && (!holds_11_1_1 || !holds_11_1_4)));
    s.add(b);
    b = ((holds_11_2_0 && holds_11_2_1 && holds_11_2_4)) || ((!holds_11_2_0 && (!holds_11_2_1 || !holds_11_2_4)));
    s.add(b);
    b = ((holds_11_3_0 && holds_11_3_1 && holds_11_3_4)) || ((!holds_11_3_0 && (!holds_11_3_1 || !holds_11_3_4)));
    s.add(b);
    b = ((holds_11_4_0 && holds_11_4_1 && holds_11_4_4)) || ((!holds_11_4_0 && (!holds_11_4_1 || !holds_11_4_4)));
    s.add(b);
    b = ((holds_11_5_0 && holds_11_5_1 && holds_11_5_4)) || ((!holds_11_5_0 && (!holds_11_5_1 || !holds_11_5_4)));
    s.add(b);
    b = ((holds_11_6_0 && holds_11_6_1 && holds_11_6_4)) || ((!holds_11_6_0 && (!holds_11_6_1 || !holds_11_6_4)));
    s.add(b);
    b = ((holds_11_7_0 && holds_11_7_1 && holds_11_7_4)) || ((!holds_11_7_0 && (!holds_11_7_1 || !holds_11_7_4)));
    s.add(b);
    b = ((holds_11_8_0 && holds_11_8_1 && holds_11_8_4)) || ((!holds_11_8_0 && (!holds_11_8_1 || !holds_11_8_4)));
    s.add(b);
    b = ((holds_11_9_0 && holds_11_9_1 && holds_11_9_4)) || ((!holds_11_9_0 && (!holds_11_9_1 || !holds_11_9_4)));
    s.add(b);
    b = ((holds_11_10_0 && holds_11_10_1 && holds_11_10_4)) || ((!holds_11_10_0 && (!holds_11_10_1 || !holds_11_10_4)));
    s.add(b);
    b = ((holds_11_11_0 && holds_11_11_1 && holds_11_11_4)) || ((!holds_11_11_0 && (!holds_11_11_1 || !holds_11_11_4)));
    s.add(b);
    b = ((holds_11_12_0 && holds_11_12_1 && holds_11_12_4)) || ((!holds_11_12_0 && (!holds_11_12_1 || !holds_11_12_4)));
    s.add(b);
    b = ((holds_11_13_0 && holds_11_13_1 && holds_11_13_4)) || ((!holds_11_13_0 && (!holds_11_13_1 || !holds_11_13_4)));
    s.add(b);
    b = ((holds_11_14_0 && holds_11_14_1 && holds_11_14_4)) || ((!holds_11_14_0 && (!holds_11_14_1 || !holds_11_14_4)));
    s.add(b);
    b = ((holds_11_15_0 && holds_11_15_1 && holds_11_15_4)) || ((!holds_11_15_0 && (!holds_11_15_1 || !holds_11_15_4)));
    s.add(b);
    b = ((holds_11_16_0 && holds_11_16_1 && holds_11_16_4)) || ((!holds_11_16_0 && (!holds_11_16_1 || !holds_11_16_4)));
    s.add(b);
    b = ((holds_11_17_0 && holds_11_17_1 && holds_11_17_4)) || ((!holds_11_17_0 && (!holds_11_17_1 || !holds_11_17_4)));
    s.add(b);
    b = ((holds_11_18_0 && holds_11_18_1 && holds_11_18_4)) || ((!holds_11_18_0 && (!holds_11_18_1 || !holds_11_18_4)));
    s.add(b);
    b = ((holds_11_19_0 && holds_11_19_1 && holds_11_19_4)) || ((!holds_11_19_0 && (!holds_11_19_1 || !holds_11_19_4)));
    s.add(b);
    b = ((holds_11_20_0 && holds_11_20_1 && holds_11_20_4)) || ((!holds_11_20_0 && (!holds_11_20_1 || !holds_11_20_4)));
    s.add(b);
    b = ((holds_11_21_0 && holds_11_21_1 && holds_11_21_4)) || ((!holds_11_21_0 && (!holds_11_21_1 || !holds_11_21_4)));
    s.add(b);
    b = ((holds_11_22_0 && holds_11_22_1 && holds_11_22_4)) || ((!holds_11_22_0 && (!holds_11_22_1 || !holds_11_22_4)));
    s.add(b);
    b = ((holds_11_23_0 && holds_11_23_1 && holds_11_23_4)) || ((!holds_11_23_0 && (!holds_11_23_1 || !holds_11_23_4)));
    s.add(b);
    b = ((holds_12_0_0 && holds_12_0_1 && holds_12_0_4)) || ((!holds_12_0_0 && (!holds_12_0_1 || !holds_12_0_4)));
    s.add(b);
    b = ((holds_12_1_0 && holds_12_1_1 && holds_12_1_4)) || ((!holds_12_1_0 && (!holds_12_1_1 || !holds_12_1_4)));
    s.add(b);
    b = ((holds_12_2_0 && holds_12_2_1 && holds_12_2_4)) || ((!holds_12_2_0 && (!holds_12_2_1 || !holds_12_2_4)));
    s.add(b);
    b = ((holds_12_3_0 && holds_12_3_1 && holds_12_3_4)) || ((!holds_12_3_0 && (!holds_12_3_1 || !holds_12_3_4)));
    s.add(b);
    b = ((holds_12_4_0 && holds_12_4_1 && holds_12_4_4)) || ((!holds_12_4_0 && (!holds_12_4_1 || !holds_12_4_4)));
    s.add(b);
    b = ((holds_12_5_0 && holds_12_5_1 && holds_12_5_4)) || ((!holds_12_5_0 && (!holds_12_5_1 || !holds_12_5_4)));
    s.add(b);
    b = ((holds_12_6_0 && holds_12_6_1 && holds_12_6_4)) || ((!holds_12_6_0 && (!holds_12_6_1 || !holds_12_6_4)));
    s.add(b);
    b = ((holds_12_7_0 && holds_12_7_1 && holds_12_7_4)) || ((!holds_12_7_0 && (!holds_12_7_1 || !holds_12_7_4)));
    s.add(b);
    b = ((holds_12_8_0 && holds_12_8_1 && holds_12_8_4)) || ((!holds_12_8_0 && (!holds_12_8_1 || !holds_12_8_4)));
    s.add(b);
    b = ((holds_12_9_0 && holds_12_9_1 && holds_12_9_4)) || ((!holds_12_9_0 && (!holds_12_9_1 || !holds_12_9_4)));
    s.add(b);
    b = ((holds_12_10_0 && holds_12_10_1 && holds_12_10_4)) || ((!holds_12_10_0 && (!holds_12_10_1 || !holds_12_10_4)));
    s.add(b);
    b = ((holds_12_11_0 && holds_12_11_1 && holds_12_11_4)) || ((!holds_12_11_0 && (!holds_12_11_1 || !holds_12_11_4)));
    s.add(b);
    b = ((holds_12_12_0 && holds_12_12_1 && holds_12_12_4)) || ((!holds_12_12_0 && (!holds_12_12_1 || !holds_12_12_4)));
    s.add(b);
    b = ((holds_12_13_0 && holds_12_13_1 && holds_12_13_4)) || ((!holds_12_13_0 && (!holds_12_13_1 || !holds_12_13_4)));
    s.add(b);
    b = ((holds_12_14_0 && holds_12_14_1 && holds_12_14_4)) || ((!holds_12_14_0 && (!holds_12_14_1 || !holds_12_14_4)));
    s.add(b);
    b = ((holds_12_15_0 && holds_12_15_1 && holds_12_15_4)) || ((!holds_12_15_0 && (!holds_12_15_1 || !holds_12_15_4)));
    s.add(b);
    b = ((holds_12_16_0 && holds_12_16_1 && holds_12_16_4)) || ((!holds_12_16_0 && (!holds_12_16_1 || !holds_12_16_4)));
    s.add(b);
    b = ((holds_12_17_0 && holds_12_17_1 && holds_12_17_4)) || ((!holds_12_17_0 && (!holds_12_17_1 || !holds_12_17_4)));
    s.add(b);
    b = ((holds_12_18_0 && holds_12_18_1 && holds_12_18_4)) || ((!holds_12_18_0 && (!holds_12_18_1 || !holds_12_18_4)));
    s.add(b);
    b = ((holds_12_19_0 && holds_12_19_1 && holds_12_19_4)) || ((!holds_12_19_0 && (!holds_12_19_1 || !holds_12_19_4)));
    s.add(b);
    b = ((holds_12_20_0 && holds_12_20_1 && holds_12_20_4)) || ((!holds_12_20_0 && (!holds_12_20_1 || !holds_12_20_4)));
    s.add(b);
    b = ((holds_12_21_0 && holds_12_21_1 && holds_12_21_4)) || ((!holds_12_21_0 && (!holds_12_21_1 || !holds_12_21_4)));
    s.add(b);
    b = ((holds_12_22_0 && holds_12_22_1 && holds_12_22_4)) || ((!holds_12_22_0 && (!holds_12_22_1 || !holds_12_22_4)));
    s.add(b);
    b = ((holds_12_23_0 && holds_12_23_1 && holds_12_23_4)) || ((!holds_12_23_0 && (!holds_12_23_1 || !holds_12_23_4)));
    s.add(b);
    b = ((holds_13_0_0 && holds_13_0_1 && holds_13_0_4)) || ((!holds_13_0_0 && (!holds_13_0_1 || !holds_13_0_4)));
    s.add(b);
    b = ((holds_13_1_0 && holds_13_1_1 && holds_13_1_4)) || ((!holds_13_1_0 && (!holds_13_1_1 || !holds_13_1_4)));
    s.add(b);
    b = ((holds_13_2_0 && holds_13_2_1 && holds_13_2_4)) || ((!holds_13_2_0 && (!holds_13_2_1 || !holds_13_2_4)));
    s.add(b);
    b = ((holds_13_3_0 && holds_13_3_1 && holds_13_3_4)) || ((!holds_13_3_0 && (!holds_13_3_1 || !holds_13_3_4)));
    s.add(b);
    b = ((holds_13_4_0 && holds_13_4_1 && holds_13_4_4)) || ((!holds_13_4_0 && (!holds_13_4_1 || !holds_13_4_4)));
    s.add(b);
    b = ((holds_13_5_0 && holds_13_5_1 && holds_13_5_4)) || ((!holds_13_5_0 && (!holds_13_5_1 || !holds_13_5_4)));
    s.add(b);
    b = ((holds_13_6_0 && holds_13_6_1 && holds_13_6_4)) || ((!holds_13_6_0 && (!holds_13_6_1 || !holds_13_6_4)));
    s.add(b);
    b = ((holds_13_7_0 && holds_13_7_1 && holds_13_7_4)) || ((!holds_13_7_0 && (!holds_13_7_1 || !holds_13_7_4)));
    s.add(b);
    b = ((holds_13_8_0 && holds_13_8_1 && holds_13_8_4)) || ((!holds_13_8_0 && (!holds_13_8_1 || !holds_13_8_4)));
    s.add(b);
    b = ((holds_13_9_0 && holds_13_9_1 && holds_13_9_4)) || ((!holds_13_9_0 && (!holds_13_9_1 || !holds_13_9_4)));
    s.add(b);
    b = ((holds_13_10_0 && holds_13_10_1 && holds_13_10_4)) || ((!holds_13_10_0 && (!holds_13_10_1 || !holds_13_10_4)));
    s.add(b);
    b = ((holds_13_11_0 && holds_13_11_1 && holds_13_11_4)) || ((!holds_13_11_0 && (!holds_13_11_1 || !holds_13_11_4)));
    s.add(b);
    b = ((holds_13_12_0 && holds_13_12_1 && holds_13_12_4)) || ((!holds_13_12_0 && (!holds_13_12_1 || !holds_13_12_4)));
    s.add(b);
    b = ((holds_13_13_0 && holds_13_13_1 && holds_13_13_4)) || ((!holds_13_13_0 && (!holds_13_13_1 || !holds_13_13_4)));
    s.add(b);
    b = ((holds_13_14_0 && holds_13_14_1 && holds_13_14_4)) || ((!holds_13_14_0 && (!holds_13_14_1 || !holds_13_14_4)));
    s.add(b);
    b = ((holds_13_15_0 && holds_13_15_1 && holds_13_15_4)) || ((!holds_13_15_0 && (!holds_13_15_1 || !holds_13_15_4)));
    s.add(b);
    b = ((holds_13_16_0 && holds_13_16_1 && holds_13_16_4)) || ((!holds_13_16_0 && (!holds_13_16_1 || !holds_13_16_4)));
    s.add(b);
    b = ((holds_13_17_0 && holds_13_17_1 && holds_13_17_4)) || ((!holds_13_17_0 && (!holds_13_17_1 || !holds_13_17_4)));
    s.add(b);
    b = ((holds_13_18_0 && holds_13_18_1 && holds_13_18_4)) || ((!holds_13_18_0 && (!holds_13_18_1 || !holds_13_18_4)));
    s.add(b);
    b = ((holds_13_19_0 && holds_13_19_1 && holds_13_19_4)) || ((!holds_13_19_0 && (!holds_13_19_1 || !holds_13_19_4)));
    s.add(b);
    b = ((holds_13_20_0 && holds_13_20_1 && holds_13_20_4)) || ((!holds_13_20_0 && (!holds_13_20_1 || !holds_13_20_4)));
    s.add(b);
    b = ((holds_13_21_0 && holds_13_21_1 && holds_13_21_4)) || ((!holds_13_21_0 && (!holds_13_21_1 || !holds_13_21_4)));
    s.add(b);
    b = ((holds_13_22_0 && holds_13_22_1 && holds_13_22_4)) || ((!holds_13_22_0 && (!holds_13_22_1 || !holds_13_22_4)));
    s.add(b);
    b = ((holds_13_23_0 && holds_13_23_1 && holds_13_23_4)) || ((!holds_13_23_0 && (!holds_13_23_1 || !holds_13_23_4)));
    s.add(b);
    b = ((holds_14_0_0 && holds_14_0_1 && holds_14_0_4)) || ((!holds_14_0_0 && (!holds_14_0_1 || !holds_14_0_4)));
    s.add(b);
    b = ((holds_14_1_0 && holds_14_1_1 && holds_14_1_4)) || ((!holds_14_1_0 && (!holds_14_1_1 || !holds_14_1_4)));
    s.add(b);
    b = ((holds_14_2_0 && holds_14_2_1 && holds_14_2_4)) || ((!holds_14_2_0 && (!holds_14_2_1 || !holds_14_2_4)));
    s.add(b);
    b = ((holds_14_3_0 && holds_14_3_1 && holds_14_3_4)) || ((!holds_14_3_0 && (!holds_14_3_1 || !holds_14_3_4)));
    s.add(b);
    b = ((holds_14_4_0 && holds_14_4_1 && holds_14_4_4)) || ((!holds_14_4_0 && (!holds_14_4_1 || !holds_14_4_4)));
    s.add(b);
    b = ((holds_14_5_0 && holds_14_5_1 && holds_14_5_4)) || ((!holds_14_5_0 && (!holds_14_5_1 || !holds_14_5_4)));
    s.add(b);
    b = ((holds_14_6_0 && holds_14_6_1 && holds_14_6_4)) || ((!holds_14_6_0 && (!holds_14_6_1 || !holds_14_6_4)));
    s.add(b);
    b = ((holds_14_7_0 && holds_14_7_1 && holds_14_7_4)) || ((!holds_14_7_0 && (!holds_14_7_1 || !holds_14_7_4)));
    s.add(b);
    b = ((holds_14_8_0 && holds_14_8_1 && holds_14_8_4)) || ((!holds_14_8_0 && (!holds_14_8_1 || !holds_14_8_4)));
    s.add(b);
    b = ((holds_14_9_0 && holds_14_9_1 && holds_14_9_4)) || ((!holds_14_9_0 && (!holds_14_9_1 || !holds_14_9_4)));
    s.add(b);
    b = ((holds_14_10_0 && holds_14_10_1 && holds_14_10_4)) || ((!holds_14_10_0 && (!holds_14_10_1 || !holds_14_10_4)));
    s.add(b);
    b = ((holds_14_11_0 && holds_14_11_1 && holds_14_11_4)) || ((!holds_14_11_0 && (!holds_14_11_1 || !holds_14_11_4)));
    s.add(b);
    b = ((holds_14_12_0 && holds_14_12_1 && holds_14_12_4)) || ((!holds_14_12_0 && (!holds_14_12_1 || !holds_14_12_4)));
    s.add(b);
    b = ((holds_14_13_0 && holds_14_13_1 && holds_14_13_4)) || ((!holds_14_13_0 && (!holds_14_13_1 || !holds_14_13_4)));
    s.add(b);
    b = ((holds_14_14_0 && holds_14_14_1 && holds_14_14_4)) || ((!holds_14_14_0 && (!holds_14_14_1 || !holds_14_14_4)));
    s.add(b);
    b = ((holds_14_15_0 && holds_14_15_1 && holds_14_15_4)) || ((!holds_14_15_0 && (!holds_14_15_1 || !holds_14_15_4)));
    s.add(b);
    b = ((holds_14_16_0 && holds_14_16_1 && holds_14_16_4)) || ((!holds_14_16_0 && (!holds_14_16_1 || !holds_14_16_4)));
    s.add(b);
    b = ((holds_14_17_0 && holds_14_17_1 && holds_14_17_4)) || ((!holds_14_17_0 && (!holds_14_17_1 || !holds_14_17_4)));
    s.add(b);
    b = ((holds_14_18_0 && holds_14_18_1 && holds_14_18_4)) || ((!holds_14_18_0 && (!holds_14_18_1 || !holds_14_18_4)));
    s.add(b);
    b = ((holds_14_19_0 && holds_14_19_1 && holds_14_19_4)) || ((!holds_14_19_0 && (!holds_14_19_1 || !holds_14_19_4)));
    s.add(b);
    b = ((holds_14_20_0 && holds_14_20_1 && holds_14_20_4)) || ((!holds_14_20_0 && (!holds_14_20_1 || !holds_14_20_4)));
    s.add(b);
    b = ((holds_14_21_0 && holds_14_21_1 && holds_14_21_4)) || ((!holds_14_21_0 && (!holds_14_21_1 || !holds_14_21_4)));
    s.add(b);
    b = ((holds_14_22_0 && holds_14_22_1 && holds_14_22_4)) || ((!holds_14_22_0 && (!holds_14_22_1 || !holds_14_22_4)));
    s.add(b);
    b = ((holds_14_23_0 && holds_14_23_1 && holds_14_23_4)) || ((!holds_14_23_0 && (!holds_14_23_1 || !holds_14_23_4)));
    s.add(b);
    b = ((holds_15_0_0 && holds_15_0_1 && holds_15_0_4)) || ((!holds_15_0_0 && (!holds_15_0_1 || !holds_15_0_4)));
    s.add(b);
    b = ((holds_15_1_0 && holds_15_1_1 && holds_15_1_4)) || ((!holds_15_1_0 && (!holds_15_1_1 || !holds_15_1_4)));
    s.add(b);
    b = ((holds_15_2_0 && holds_15_2_1 && holds_15_2_4)) || ((!holds_15_2_0 && (!holds_15_2_1 || !holds_15_2_4)));
    s.add(b);
    b = ((holds_15_3_0 && holds_15_3_1 && holds_15_3_4)) || ((!holds_15_3_0 && (!holds_15_3_1 || !holds_15_3_4)));
    s.add(b);
    b = ((holds_15_4_0 && holds_15_4_1 && holds_15_4_4)) || ((!holds_15_4_0 && (!holds_15_4_1 || !holds_15_4_4)));
    s.add(b);
    b = ((holds_15_5_0 && holds_15_5_1 && holds_15_5_4)) || ((!holds_15_5_0 && (!holds_15_5_1 || !holds_15_5_4)));
    s.add(b);
    b = ((holds_15_6_0 && holds_15_6_1 && holds_15_6_4)) || ((!holds_15_6_0 && (!holds_15_6_1 || !holds_15_6_4)));
    s.add(b);
    b = ((holds_15_7_0 && holds_15_7_1 && holds_15_7_4)) || ((!holds_15_7_0 && (!holds_15_7_1 || !holds_15_7_4)));
    s.add(b);
    b = ((holds_15_8_0 && holds_15_8_1 && holds_15_8_4)) || ((!holds_15_8_0 && (!holds_15_8_1 || !holds_15_8_4)));
    s.add(b);
    b = ((holds_15_9_0 && holds_15_9_1 && holds_15_9_4)) || ((!holds_15_9_0 && (!holds_15_9_1 || !holds_15_9_4)));
    s.add(b);
    b = ((holds_15_10_0 && holds_15_10_1 && holds_15_10_4)) || ((!holds_15_10_0 && (!holds_15_10_1 || !holds_15_10_4)));
    s.add(b);
    b = ((holds_15_11_0 && holds_15_11_1 && holds_15_11_4)) || ((!holds_15_11_0 && (!holds_15_11_1 || !holds_15_11_4)));
    s.add(b);
    b = ((holds_15_12_0 && holds_15_12_1 && holds_15_12_4)) || ((!holds_15_12_0 && (!holds_15_12_1 || !holds_15_12_4)));
    s.add(b);
    b = ((holds_15_13_0 && holds_15_13_1 && holds_15_13_4)) || ((!holds_15_13_0 && (!holds_15_13_1 || !holds_15_13_4)));
    s.add(b);
    b = ((holds_15_14_0 && holds_15_14_1 && holds_15_14_4)) || ((!holds_15_14_0 && (!holds_15_14_1 || !holds_15_14_4)));
    s.add(b);
    b = ((holds_15_15_0 && holds_15_15_1 && holds_15_15_4)) || ((!holds_15_15_0 && (!holds_15_15_1 || !holds_15_15_4)));
    s.add(b);
    b = ((holds_15_16_0 && holds_15_16_1 && holds_15_16_4)) || ((!holds_15_16_0 && (!holds_15_16_1 || !holds_15_16_4)));
    s.add(b);
    b = ((holds_15_17_0 && holds_15_17_1 && holds_15_17_4)) || ((!holds_15_17_0 && (!holds_15_17_1 || !holds_15_17_4)));
    s.add(b);
    b = ((holds_15_18_0 && holds_15_18_1 && holds_15_18_4)) || ((!holds_15_18_0 && (!holds_15_18_1 || !holds_15_18_4)));
    s.add(b);
    b = ((holds_15_19_0 && holds_15_19_1 && holds_15_19_4)) || ((!holds_15_19_0 && (!holds_15_19_1 || !holds_15_19_4)));
    s.add(b);
    b = ((holds_15_20_0 && holds_15_20_1 && holds_15_20_4)) || ((!holds_15_20_0 && (!holds_15_20_1 || !holds_15_20_4)));
    s.add(b);
    b = ((holds_15_21_0 && holds_15_21_1 && holds_15_21_4)) || ((!holds_15_21_0 && (!holds_15_21_1 || !holds_15_21_4)));
    s.add(b);
    b = ((holds_15_22_0 && holds_15_22_1 && holds_15_22_4)) || ((!holds_15_22_0 && (!holds_15_22_1 || !holds_15_22_4)));
    s.add(b);
    b = ((holds_15_23_0 && holds_15_23_1 && holds_15_23_4)) || ((!holds_15_23_0 && (!holds_15_23_1 || !holds_15_23_4)));
    s.add(b);
    b = ((holds_16_0_0 && holds_16_0_1 && holds_16_0_4)) || ((!holds_16_0_0 && (!holds_16_0_1 || !holds_16_0_4)));
    s.add(b);
    b = ((holds_16_1_0 && holds_16_1_1 && holds_16_1_4)) || ((!holds_16_1_0 && (!holds_16_1_1 || !holds_16_1_4)));
    s.add(b);
    b = ((holds_16_2_0 && holds_16_2_1 && holds_16_2_4)) || ((!holds_16_2_0 && (!holds_16_2_1 || !holds_16_2_4)));
    s.add(b);
    b = ((holds_16_3_0 && holds_16_3_1 && holds_16_3_4)) || ((!holds_16_3_0 && (!holds_16_3_1 || !holds_16_3_4)));
    s.add(b);
    b = ((holds_16_4_0 && holds_16_4_1 && holds_16_4_4)) || ((!holds_16_4_0 && (!holds_16_4_1 || !holds_16_4_4)));
    s.add(b);
    b = ((holds_16_5_0 && holds_16_5_1 && holds_16_5_4)) || ((!holds_16_5_0 && (!holds_16_5_1 || !holds_16_5_4)));
    s.add(b);
    b = ((holds_16_6_0 && holds_16_6_1 && holds_16_6_4)) || ((!holds_16_6_0 && (!holds_16_6_1 || !holds_16_6_4)));
    s.add(b);
    b = ((holds_16_7_0 && holds_16_7_1 && holds_16_7_4)) || ((!holds_16_7_0 && (!holds_16_7_1 || !holds_16_7_4)));
    s.add(b);
    b = ((holds_16_8_0 && holds_16_8_1 && holds_16_8_4)) || ((!holds_16_8_0 && (!holds_16_8_1 || !holds_16_8_4)));
    s.add(b);
    b = ((holds_16_9_0 && holds_16_9_1 && holds_16_9_4)) || ((!holds_16_9_0 && (!holds_16_9_1 || !holds_16_9_4)));
    s.add(b);
    b = ((holds_16_10_0 && holds_16_10_1 && holds_16_10_4)) || ((!holds_16_10_0 && (!holds_16_10_1 || !holds_16_10_4)));
    s.add(b);
    b = ((holds_16_11_0 && holds_16_11_1 && holds_16_11_4)) || ((!holds_16_11_0 && (!holds_16_11_1 || !holds_16_11_4)));
    s.add(b);
    b = ((holds_16_12_0 && holds_16_12_1 && holds_16_12_4)) || ((!holds_16_12_0 && (!holds_16_12_1 || !holds_16_12_4)));
    s.add(b);
    b = ((holds_16_13_0 && holds_16_13_1 && holds_16_13_4)) || ((!holds_16_13_0 && (!holds_16_13_1 || !holds_16_13_4)));
    s.add(b);
    b = ((holds_16_14_0 && holds_16_14_1 && holds_16_14_4)) || ((!holds_16_14_0 && (!holds_16_14_1 || !holds_16_14_4)));
    s.add(b);
    b = ((holds_16_15_0 && holds_16_15_1 && holds_16_15_4)) || ((!holds_16_15_0 && (!holds_16_15_1 || !holds_16_15_4)));
    s.add(b);
    b = ((holds_16_16_0 && holds_16_16_1 && holds_16_16_4)) || ((!holds_16_16_0 && (!holds_16_16_1 || !holds_16_16_4)));
    s.add(b);
    b = ((holds_16_17_0 && holds_16_17_1 && holds_16_17_4)) || ((!holds_16_17_0 && (!holds_16_17_1 || !holds_16_17_4)));
    s.add(b);
    b = ((holds_16_18_0 && holds_16_18_1 && holds_16_18_4)) || ((!holds_16_18_0 && (!holds_16_18_1 || !holds_16_18_4)));
    s.add(b);
    b = ((holds_16_19_0 && holds_16_19_1 && holds_16_19_4)) || ((!holds_16_19_0 && (!holds_16_19_1 || !holds_16_19_4)));
    s.add(b);
    b = ((holds_16_20_0 && holds_16_20_1 && holds_16_20_4)) || ((!holds_16_20_0 && (!holds_16_20_1 || !holds_16_20_4)));
    s.add(b);
    b = ((holds_16_21_0 && holds_16_21_1 && holds_16_21_4)) || ((!holds_16_21_0 && (!holds_16_21_1 || !holds_16_21_4)));
    s.add(b);
    b = ((holds_16_22_0 && holds_16_22_1 && holds_16_22_4)) || ((!holds_16_22_0 && (!holds_16_22_1 || !holds_16_22_4)));
    s.add(b);
    b = ((holds_16_23_0 && holds_16_23_1 && holds_16_23_4)) || ((!holds_16_23_0 && (!holds_16_23_1 || !holds_16_23_4)));
    s.add(b);
    b = ((holds_17_0_0 && holds_17_0_1 && holds_17_0_4)) || ((!holds_17_0_0 && (!holds_17_0_1 || !holds_17_0_4)));
    s.add(b);
    b = ((holds_17_1_0 && holds_17_1_1 && holds_17_1_4)) || ((!holds_17_1_0 && (!holds_17_1_1 || !holds_17_1_4)));
    s.add(b);
    b = ((holds_17_2_0 && holds_17_2_1 && holds_17_2_4)) || ((!holds_17_2_0 && (!holds_17_2_1 || !holds_17_2_4)));
    s.add(b);
    b = ((holds_17_3_0 && holds_17_3_1 && holds_17_3_4)) || ((!holds_17_3_0 && (!holds_17_3_1 || !holds_17_3_4)));
    s.add(b);
    b = ((holds_17_4_0 && holds_17_4_1 && holds_17_4_4)) || ((!holds_17_4_0 && (!holds_17_4_1 || !holds_17_4_4)));
    s.add(b);
    b = ((holds_17_5_0 && holds_17_5_1 && holds_17_5_4)) || ((!holds_17_5_0 && (!holds_17_5_1 || !holds_17_5_4)));
    s.add(b);
    b = ((holds_17_6_0 && holds_17_6_1 && holds_17_6_4)) || ((!holds_17_6_0 && (!holds_17_6_1 || !holds_17_6_4)));
    s.add(b);
    b = ((holds_17_7_0 && holds_17_7_1 && holds_17_7_4)) || ((!holds_17_7_0 && (!holds_17_7_1 || !holds_17_7_4)));
    s.add(b);
    b = ((holds_17_8_0 && holds_17_8_1 && holds_17_8_4)) || ((!holds_17_8_0 && (!holds_17_8_1 || !holds_17_8_4)));
    s.add(b);
    b = ((holds_17_9_0 && holds_17_9_1 && holds_17_9_4)) || ((!holds_17_9_0 && (!holds_17_9_1 || !holds_17_9_4)));
    s.add(b);
    b = ((holds_17_10_0 && holds_17_10_1 && holds_17_10_4)) || ((!holds_17_10_0 && (!holds_17_10_1 || !holds_17_10_4)));
    s.add(b);
    b = ((holds_17_11_0 && holds_17_11_1 && holds_17_11_4)) || ((!holds_17_11_0 && (!holds_17_11_1 || !holds_17_11_4)));
    s.add(b);
    b = ((holds_17_12_0 && holds_17_12_1 && holds_17_12_4)) || ((!holds_17_12_0 && (!holds_17_12_1 || !holds_17_12_4)));
    s.add(b);
    b = ((holds_17_13_0 && holds_17_13_1 && holds_17_13_4)) || ((!holds_17_13_0 && (!holds_17_13_1 || !holds_17_13_4)));
    s.add(b);
    b = ((holds_17_14_0 && holds_17_14_1 && holds_17_14_4)) || ((!holds_17_14_0 && (!holds_17_14_1 || !holds_17_14_4)));
    s.add(b);
    b = ((holds_17_15_0 && holds_17_15_1 && holds_17_15_4)) || ((!holds_17_15_0 && (!holds_17_15_1 || !holds_17_15_4)));
    s.add(b);
    b = ((holds_17_16_0 && holds_17_16_1 && holds_17_16_4)) || ((!holds_17_16_0 && (!holds_17_16_1 || !holds_17_16_4)));
    s.add(b);
    b = ((holds_17_17_0 && holds_17_17_1 && holds_17_17_4)) || ((!holds_17_17_0 && (!holds_17_17_1 || !holds_17_17_4)));
    s.add(b);
    b = ((holds_17_18_0 && holds_17_18_1 && holds_17_18_4)) || ((!holds_17_18_0 && (!holds_17_18_1 || !holds_17_18_4)));
    s.add(b);
    b = ((holds_17_19_0 && holds_17_19_1 && holds_17_19_4)) || ((!holds_17_19_0 && (!holds_17_19_1 || !holds_17_19_4)));
    s.add(b);
    b = ((holds_17_20_0 && holds_17_20_1 && holds_17_20_4)) || ((!holds_17_20_0 && (!holds_17_20_1 || !holds_17_20_4)));
    s.add(b);
    b = ((holds_17_21_0 && holds_17_21_1 && holds_17_21_4)) || ((!holds_17_21_0 && (!holds_17_21_1 || !holds_17_21_4)));
    s.add(b);
    b = ((holds_17_22_0 && holds_17_22_1 && holds_17_22_4)) || ((!holds_17_22_0 && (!holds_17_22_1 || !holds_17_22_4)));
    s.add(b);
    b = ((holds_17_23_0 && holds_17_23_1 && holds_17_23_4)) || ((!holds_17_23_0 && (!holds_17_23_1 || !holds_17_23_4)));
    s.add(b);
    b = ((holds_18_0_0 && holds_18_0_1 && holds_18_0_4)) || ((!holds_18_0_0 && (!holds_18_0_1 || !holds_18_0_4)));
    s.add(b);
    b = ((holds_18_1_0 && holds_18_1_1 && holds_18_1_4)) || ((!holds_18_1_0 && (!holds_18_1_1 || !holds_18_1_4)));
    s.add(b);
    b = ((holds_18_2_0 && holds_18_2_1 && holds_18_2_4)) || ((!holds_18_2_0 && (!holds_18_2_1 || !holds_18_2_4)));
    s.add(b);
    b = ((holds_18_3_0 && holds_18_3_1 && holds_18_3_4)) || ((!holds_18_3_0 && (!holds_18_3_1 || !holds_18_3_4)));
    s.add(b);
    b = ((holds_18_4_0 && holds_18_4_1 && holds_18_4_4)) || ((!holds_18_4_0 && (!holds_18_4_1 || !holds_18_4_4)));
    s.add(b);
    b = ((holds_18_5_0 && holds_18_5_1 && holds_18_5_4)) || ((!holds_18_5_0 && (!holds_18_5_1 || !holds_18_5_4)));
    s.add(b);
    b = ((holds_18_6_0 && holds_18_6_1 && holds_18_6_4)) || ((!holds_18_6_0 && (!holds_18_6_1 || !holds_18_6_4)));
    s.add(b);
    b = ((holds_18_7_0 && holds_18_7_1 && holds_18_7_4)) || ((!holds_18_7_0 && (!holds_18_7_1 || !holds_18_7_4)));
    s.add(b);
    b = ((holds_18_8_0 && holds_18_8_1 && holds_18_8_4)) || ((!holds_18_8_0 && (!holds_18_8_1 || !holds_18_8_4)));
    s.add(b);
    b = ((holds_18_9_0 && holds_18_9_1 && holds_18_9_4)) || ((!holds_18_9_0 && (!holds_18_9_1 || !holds_18_9_4)));
    s.add(b);
    b = ((holds_18_10_0 && holds_18_10_1 && holds_18_10_4)) || ((!holds_18_10_0 && (!holds_18_10_1 || !holds_18_10_4)));
    s.add(b);
    b = ((holds_18_11_0 && holds_18_11_1 && holds_18_11_4)) || ((!holds_18_11_0 && (!holds_18_11_1 || !holds_18_11_4)));
    s.add(b);
    b = ((holds_18_12_0 && holds_18_12_1 && holds_18_12_4)) || ((!holds_18_12_0 && (!holds_18_12_1 || !holds_18_12_4)));
    s.add(b);
    b = ((holds_18_13_0 && holds_18_13_1 && holds_18_13_4)) || ((!holds_18_13_0 && (!holds_18_13_1 || !holds_18_13_4)));
    s.add(b);
    b = ((holds_18_14_0 && holds_18_14_1 && holds_18_14_4)) || ((!holds_18_14_0 && (!holds_18_14_1 || !holds_18_14_4)));
    s.add(b);
    b = ((holds_18_15_0 && holds_18_15_1 && holds_18_15_4)) || ((!holds_18_15_0 && (!holds_18_15_1 || !holds_18_15_4)));
    s.add(b);
    b = ((holds_18_16_0 && holds_18_16_1 && holds_18_16_4)) || ((!holds_18_16_0 && (!holds_18_16_1 || !holds_18_16_4)));
    s.add(b);
    b = ((holds_18_17_0 && holds_18_17_1 && holds_18_17_4)) || ((!holds_18_17_0 && (!holds_18_17_1 || !holds_18_17_4)));
    s.add(b);
    b = ((holds_18_18_0 && holds_18_18_1 && holds_18_18_4)) || ((!holds_18_18_0 && (!holds_18_18_1 || !holds_18_18_4)));
    s.add(b);
    b = ((holds_18_19_0 && holds_18_19_1 && holds_18_19_4)) || ((!holds_18_19_0 && (!holds_18_19_1 || !holds_18_19_4)));
    s.add(b);
    b = ((holds_18_20_0 && holds_18_20_1 && holds_18_20_4)) || ((!holds_18_20_0 && (!holds_18_20_1 || !holds_18_20_4)));
    s.add(b);
    b = ((holds_18_21_0 && holds_18_21_1 && holds_18_21_4)) || ((!holds_18_21_0 && (!holds_18_21_1 || !holds_18_21_4)));
    s.add(b);
    b = ((holds_18_22_0 && holds_18_22_1 && holds_18_22_4)) || ((!holds_18_22_0 && (!holds_18_22_1 || !holds_18_22_4)));
    s.add(b);
    b = ((holds_18_23_0 && holds_18_23_1 && holds_18_23_4)) || ((!holds_18_23_0 && (!holds_18_23_1 || !holds_18_23_4)));
    s.add(b);
    b = ((holds_19_0_0 && holds_19_0_1 && holds_19_0_4)) || ((!holds_19_0_0 && (!holds_19_0_1 || !holds_19_0_4)));
    s.add(b);
    b = ((holds_19_1_0 && holds_19_1_1 && holds_19_1_4)) || ((!holds_19_1_0 && (!holds_19_1_1 || !holds_19_1_4)));
    s.add(b);
    b = ((holds_19_2_0 && holds_19_2_1 && holds_19_2_4)) || ((!holds_19_2_0 && (!holds_19_2_1 || !holds_19_2_4)));
    s.add(b);
    b = ((holds_19_3_0 && holds_19_3_1 && holds_19_3_4)) || ((!holds_19_3_0 && (!holds_19_3_1 || !holds_19_3_4)));
    s.add(b);
    b = ((holds_19_4_0 && holds_19_4_1 && holds_19_4_4)) || ((!holds_19_4_0 && (!holds_19_4_1 || !holds_19_4_4)));
    s.add(b);
    b = ((holds_19_5_0 && holds_19_5_1 && holds_19_5_4)) || ((!holds_19_5_0 && (!holds_19_5_1 || !holds_19_5_4)));
    s.add(b);
    b = ((holds_19_6_0 && holds_19_6_1 && holds_19_6_4)) || ((!holds_19_6_0 && (!holds_19_6_1 || !holds_19_6_4)));
    s.add(b);
    b = ((holds_19_7_0 && holds_19_7_1 && holds_19_7_4)) || ((!holds_19_7_0 && (!holds_19_7_1 || !holds_19_7_4)));
    s.add(b);
    b = ((holds_19_8_0 && holds_19_8_1 && holds_19_8_4)) || ((!holds_19_8_0 && (!holds_19_8_1 || !holds_19_8_4)));
    s.add(b);
    b = ((holds_19_9_0 && holds_19_9_1 && holds_19_9_4)) || ((!holds_19_9_0 && (!holds_19_9_1 || !holds_19_9_4)));
    s.add(b);
    b = ((holds_19_10_0 && holds_19_10_1 && holds_19_10_4)) || ((!holds_19_10_0 && (!holds_19_10_1 || !holds_19_10_4)));
    s.add(b);
    b = ((holds_19_11_0 && holds_19_11_1 && holds_19_11_4)) || ((!holds_19_11_0 && (!holds_19_11_1 || !holds_19_11_4)));
    s.add(b);
    b = ((holds_19_12_0 && holds_19_12_1 && holds_19_12_4)) || ((!holds_19_12_0 && (!holds_19_12_1 || !holds_19_12_4)));
    s.add(b);
    b = ((holds_19_13_0 && holds_19_13_1 && holds_19_13_4)) || ((!holds_19_13_0 && (!holds_19_13_1 || !holds_19_13_4)));
    s.add(b);
    b = ((holds_19_14_0 && holds_19_14_1 && holds_19_14_4)) || ((!holds_19_14_0 && (!holds_19_14_1 || !holds_19_14_4)));
    s.add(b);
    b = ((holds_19_15_0 && holds_19_15_1 && holds_19_15_4)) || ((!holds_19_15_0 && (!holds_19_15_1 || !holds_19_15_4)));
    s.add(b);
    b = ((holds_19_16_0 && holds_19_16_1 && holds_19_16_4)) || ((!holds_19_16_0 && (!holds_19_16_1 || !holds_19_16_4)));
    s.add(b);
    b = ((holds_19_17_0 && holds_19_17_1 && holds_19_17_4)) || ((!holds_19_17_0 && (!holds_19_17_1 || !holds_19_17_4)));
    s.add(b);
    b = ((holds_19_18_0 && holds_19_18_1 && holds_19_18_4)) || ((!holds_19_18_0 && (!holds_19_18_1 || !holds_19_18_4)));
    s.add(b);
    b = ((holds_19_19_0 && holds_19_19_1 && holds_19_19_4)) || ((!holds_19_19_0 && (!holds_19_19_1 || !holds_19_19_4)));
    s.add(b);
    b = ((holds_19_20_0 && holds_19_20_1 && holds_19_20_4)) || ((!holds_19_20_0 && (!holds_19_20_1 || !holds_19_20_4)));
    s.add(b);
    b = ((holds_19_21_0 && holds_19_21_1 && holds_19_21_4)) || ((!holds_19_21_0 && (!holds_19_21_1 || !holds_19_21_4)));
    s.add(b);
    b = ((holds_19_22_0 && holds_19_22_1 && holds_19_22_4)) || ((!holds_19_22_0 && (!holds_19_22_1 || !holds_19_22_4)));
    s.add(b);
    b = ((holds_19_23_0 && holds_19_23_1 && holds_19_23_4)) || ((!holds_19_23_0 && (!holds_19_23_1 || !holds_19_23_4)));
    s.add(b);
    b = ((holds_20_0_0 && holds_20_0_1 && holds_20_0_4)) || ((!holds_20_0_0 && (!holds_20_0_1 || !holds_20_0_4)));
    s.add(b);
    b = ((holds_20_1_0 && holds_20_1_1 && holds_20_1_4)) || ((!holds_20_1_0 && (!holds_20_1_1 || !holds_20_1_4)));
    s.add(b);
    b = ((holds_20_2_0 && holds_20_2_1 && holds_20_2_4)) || ((!holds_20_2_0 && (!holds_20_2_1 || !holds_20_2_4)));
    s.add(b);
    b = ((holds_20_3_0 && holds_20_3_1 && holds_20_3_4)) || ((!holds_20_3_0 && (!holds_20_3_1 || !holds_20_3_4)));
    s.add(b);
    b = ((holds_20_4_0 && holds_20_4_1 && holds_20_4_4)) || ((!holds_20_4_0 && (!holds_20_4_1 || !holds_20_4_4)));
    s.add(b);
    b = ((holds_20_5_0 && holds_20_5_1 && holds_20_5_4)) || ((!holds_20_5_0 && (!holds_20_5_1 || !holds_20_5_4)));
    s.add(b);
    b = ((holds_20_6_0 && holds_20_6_1 && holds_20_6_4)) || ((!holds_20_6_0 && (!holds_20_6_1 || !holds_20_6_4)));
    s.add(b);
    b = ((holds_20_7_0 && holds_20_7_1 && holds_20_7_4)) || ((!holds_20_7_0 && (!holds_20_7_1 || !holds_20_7_4)));
    s.add(b);
    b = ((holds_20_8_0 && holds_20_8_1 && holds_20_8_4)) || ((!holds_20_8_0 && (!holds_20_8_1 || !holds_20_8_4)));
    s.add(b);
    b = ((holds_20_9_0 && holds_20_9_1 && holds_20_9_4)) || ((!holds_20_9_0 && (!holds_20_9_1 || !holds_20_9_4)));
    s.add(b);
    b = ((holds_20_10_0 && holds_20_10_1 && holds_20_10_4)) || ((!holds_20_10_0 && (!holds_20_10_1 || !holds_20_10_4)));
    s.add(b);
    b = ((holds_20_11_0 && holds_20_11_1 && holds_20_11_4)) || ((!holds_20_11_0 && (!holds_20_11_1 || !holds_20_11_4)));
    s.add(b);
    b = ((holds_20_12_0 && holds_20_12_1 && holds_20_12_4)) || ((!holds_20_12_0 && (!holds_20_12_1 || !holds_20_12_4)));
    s.add(b);
    b = ((holds_20_13_0 && holds_20_13_1 && holds_20_13_4)) || ((!holds_20_13_0 && (!holds_20_13_1 || !holds_20_13_4)));
    s.add(b);
    b = ((holds_20_14_0 && holds_20_14_1 && holds_20_14_4)) || ((!holds_20_14_0 && (!holds_20_14_1 || !holds_20_14_4)));
    s.add(b);
    b = ((holds_20_15_0 && holds_20_15_1 && holds_20_15_4)) || ((!holds_20_15_0 && (!holds_20_15_1 || !holds_20_15_4)));
    s.add(b);
    b = ((holds_20_16_0 && holds_20_16_1 && holds_20_16_4)) || ((!holds_20_16_0 && (!holds_20_16_1 || !holds_20_16_4)));
    s.add(b);
    b = ((holds_20_17_0 && holds_20_17_1 && holds_20_17_4)) || ((!holds_20_17_0 && (!holds_20_17_1 || !holds_20_17_4)));
    s.add(b);
    b = ((holds_20_18_0 && holds_20_18_1 && holds_20_18_4)) || ((!holds_20_18_0 && (!holds_20_18_1 || !holds_20_18_4)));
    s.add(b);
    b = ((holds_20_19_0 && holds_20_19_1 && holds_20_19_4)) || ((!holds_20_19_0 && (!holds_20_19_1 || !holds_20_19_4)));
    s.add(b);
    b = ((holds_20_20_0 && holds_20_20_1 && holds_20_20_4)) || ((!holds_20_20_0 && (!holds_20_20_1 || !holds_20_20_4)));
    s.add(b);
    b = ((holds_20_21_0 && holds_20_21_1 && holds_20_21_4)) || ((!holds_20_21_0 && (!holds_20_21_1 || !holds_20_21_4)));
    s.add(b);
    b = ((holds_20_22_0 && holds_20_22_1 && holds_20_22_4)) || ((!holds_20_22_0 && (!holds_20_22_1 || !holds_20_22_4)));
    s.add(b);
    b = ((holds_20_23_0 && holds_20_23_1 && holds_20_23_4)) || ((!holds_20_23_0 && (!holds_20_23_1 || !holds_20_23_4)));
    s.add(b);
    b = ((holds_21_0_0 && holds_21_0_1 && holds_21_0_4)) || ((!holds_21_0_0 && (!holds_21_0_1 || !holds_21_0_4)));
    s.add(b);
    b = ((holds_21_1_0 && holds_21_1_1 && holds_21_1_4)) || ((!holds_21_1_0 && (!holds_21_1_1 || !holds_21_1_4)));
    s.add(b);
    b = ((holds_21_2_0 && holds_21_2_1 && holds_21_2_4)) || ((!holds_21_2_0 && (!holds_21_2_1 || !holds_21_2_4)));
    s.add(b);
    b = ((holds_21_3_0 && holds_21_3_1 && holds_21_3_4)) || ((!holds_21_3_0 && (!holds_21_3_1 || !holds_21_3_4)));
    s.add(b);
    b = ((holds_21_4_0 && holds_21_4_1 && holds_21_4_4)) || ((!holds_21_4_0 && (!holds_21_4_1 || !holds_21_4_4)));
    s.add(b);
    b = ((holds_21_5_0 && holds_21_5_1 && holds_21_5_4)) || ((!holds_21_5_0 && (!holds_21_5_1 || !holds_21_5_4)));
    s.add(b);
    b = ((holds_21_6_0 && holds_21_6_1 && holds_21_6_4)) || ((!holds_21_6_0 && (!holds_21_6_1 || !holds_21_6_4)));
    s.add(b);
    b = ((holds_21_7_0 && holds_21_7_1 && holds_21_7_4)) || ((!holds_21_7_0 && (!holds_21_7_1 || !holds_21_7_4)));
    s.add(b);
    b = ((holds_21_8_0 && holds_21_8_1 && holds_21_8_4)) || ((!holds_21_8_0 && (!holds_21_8_1 || !holds_21_8_4)));
    s.add(b);
    b = ((holds_21_9_0 && holds_21_9_1 && holds_21_9_4)) || ((!holds_21_9_0 && (!holds_21_9_1 || !holds_21_9_4)));
    s.add(b);
    b = ((holds_21_10_0 && holds_21_10_1 && holds_21_10_4)) || ((!holds_21_10_0 && (!holds_21_10_1 || !holds_21_10_4)));
    s.add(b);
    b = ((holds_21_11_0 && holds_21_11_1 && holds_21_11_4)) || ((!holds_21_11_0 && (!holds_21_11_1 || !holds_21_11_4)));
    s.add(b);
    b = ((holds_21_12_0 && holds_21_12_1 && holds_21_12_4)) || ((!holds_21_12_0 && (!holds_21_12_1 || !holds_21_12_4)));
    s.add(b);
    b = ((holds_21_13_0 && holds_21_13_1 && holds_21_13_4)) || ((!holds_21_13_0 && (!holds_21_13_1 || !holds_21_13_4)));
    s.add(b);
    b = ((holds_21_14_0 && holds_21_14_1 && holds_21_14_4)) || ((!holds_21_14_0 && (!holds_21_14_1 || !holds_21_14_4)));
    s.add(b);
    b = ((holds_21_15_0 && holds_21_15_1 && holds_21_15_4)) || ((!holds_21_15_0 && (!holds_21_15_1 || !holds_21_15_4)));
    s.add(b);
    b = ((holds_21_16_0 && holds_21_16_1 && holds_21_16_4)) || ((!holds_21_16_0 && (!holds_21_16_1 || !holds_21_16_4)));
    s.add(b);
    b = ((holds_21_17_0 && holds_21_17_1 && holds_21_17_4)) || ((!holds_21_17_0 && (!holds_21_17_1 || !holds_21_17_4)));
    s.add(b);
    b = ((holds_21_18_0 && holds_21_18_1 && holds_21_18_4)) || ((!holds_21_18_0 && (!holds_21_18_1 || !holds_21_18_4)));
    s.add(b);
    b = ((holds_21_19_0 && holds_21_19_1 && holds_21_19_4)) || ((!holds_21_19_0 && (!holds_21_19_1 || !holds_21_19_4)));
    s.add(b);
    b = ((holds_21_20_0 && holds_21_20_1 && holds_21_20_4)) || ((!holds_21_20_0 && (!holds_21_20_1 || !holds_21_20_4)));
    s.add(b);
    b = ((holds_21_21_0 && holds_21_21_1 && holds_21_21_4)) || ((!holds_21_21_0 && (!holds_21_21_1 || !holds_21_21_4)));
    s.add(b);
    b = ((holds_21_22_0 && holds_21_22_1 && holds_21_22_4)) || ((!holds_21_22_0 && (!holds_21_22_1 || !holds_21_22_4)));
    s.add(b);
    b = ((holds_21_23_0 && holds_21_23_1 && holds_21_23_4)) || ((!holds_21_23_0 && (!holds_21_23_1 || !holds_21_23_4)));
    s.add(b);
    b = ((holds_22_0_0 && holds_22_0_1 && holds_22_0_4)) || ((!holds_22_0_0 && (!holds_22_0_1 || !holds_22_0_4)));
    s.add(b);
    b = ((holds_22_1_0 && holds_22_1_1 && holds_22_1_4)) || ((!holds_22_1_0 && (!holds_22_1_1 || !holds_22_1_4)));
    s.add(b);
    b = ((holds_22_2_0 && holds_22_2_1 && holds_22_2_4)) || ((!holds_22_2_0 && (!holds_22_2_1 || !holds_22_2_4)));
    s.add(b);
    b = ((holds_22_3_0 && holds_22_3_1 && holds_22_3_4)) || ((!holds_22_3_0 && (!holds_22_3_1 || !holds_22_3_4)));
    s.add(b);
    b = ((holds_22_4_0 && holds_22_4_1 && holds_22_4_4)) || ((!holds_22_4_0 && (!holds_22_4_1 || !holds_22_4_4)));
    s.add(b);
    b = ((holds_22_5_0 && holds_22_5_1 && holds_22_5_4)) || ((!holds_22_5_0 && (!holds_22_5_1 || !holds_22_5_4)));
    s.add(b);
    b = ((holds_22_6_0 && holds_22_6_1 && holds_22_6_4)) || ((!holds_22_6_0 && (!holds_22_6_1 || !holds_22_6_4)));
    s.add(b);
    b = ((holds_22_7_0 && holds_22_7_1 && holds_22_7_4)) || ((!holds_22_7_0 && (!holds_22_7_1 || !holds_22_7_4)));
    s.add(b);
    b = ((holds_22_8_0 && holds_22_8_1 && holds_22_8_4)) || ((!holds_22_8_0 && (!holds_22_8_1 || !holds_22_8_4)));
    s.add(b);
    b = ((holds_22_9_0 && holds_22_9_1 && holds_22_9_4)) || ((!holds_22_9_0 && (!holds_22_9_1 || !holds_22_9_4)));
    s.add(b);
    b = ((holds_22_10_0 && holds_22_10_1 && holds_22_10_4)) || ((!holds_22_10_0 && (!holds_22_10_1 || !holds_22_10_4)));
    s.add(b);
    b = ((holds_22_11_0 && holds_22_11_1 && holds_22_11_4)) || ((!holds_22_11_0 && (!holds_22_11_1 || !holds_22_11_4)));
    s.add(b);
    b = ((holds_22_12_0 && holds_22_12_1 && holds_22_12_4)) || ((!holds_22_12_0 && (!holds_22_12_1 || !holds_22_12_4)));
    s.add(b);
    b = ((holds_22_13_0 && holds_22_13_1 && holds_22_13_4)) || ((!holds_22_13_0 && (!holds_22_13_1 || !holds_22_13_4)));
    s.add(b);
    b = ((holds_22_14_0 && holds_22_14_1 && holds_22_14_4)) || ((!holds_22_14_0 && (!holds_22_14_1 || !holds_22_14_4)));
    s.add(b);
    b = ((holds_22_15_0 && holds_22_15_1 && holds_22_15_4)) || ((!holds_22_15_0 && (!holds_22_15_1 || !holds_22_15_4)));
    s.add(b);
    b = ((holds_22_16_0 && holds_22_16_1 && holds_22_16_4)) || ((!holds_22_16_0 && (!holds_22_16_1 || !holds_22_16_4)));
    s.add(b);
    b = ((holds_22_17_0 && holds_22_17_1 && holds_22_17_4)) || ((!holds_22_17_0 && (!holds_22_17_1 || !holds_22_17_4)));
    s.add(b);
    b = ((holds_22_18_0 && holds_22_18_1 && holds_22_18_4)) || ((!holds_22_18_0 && (!holds_22_18_1 || !holds_22_18_4)));
    s.add(b);
    b = ((holds_22_19_0 && holds_22_19_1 && holds_22_19_4)) || ((!holds_22_19_0 && (!holds_22_19_1 || !holds_22_19_4)));
    s.add(b);
    b = ((holds_22_20_0 && holds_22_20_1 && holds_22_20_4)) || ((!holds_22_20_0 && (!holds_22_20_1 || !holds_22_20_4)));
    s.add(b);
    b = ((holds_22_21_0 && holds_22_21_1 && holds_22_21_4)) || ((!holds_22_21_0 && (!holds_22_21_1 || !holds_22_21_4)));
    s.add(b);
    b = ((holds_22_22_0 && holds_22_22_1 && holds_22_22_4)) || ((!holds_22_22_0 && (!holds_22_22_1 || !holds_22_22_4)));
    s.add(b);
    b = ((holds_22_23_0 && holds_22_23_1 && holds_22_23_4)) || ((!holds_22_23_0 && (!holds_22_23_1 || !holds_22_23_4)));
    s.add(b);
    b = ((holds_23_0_0 && holds_23_0_1 && holds_23_0_4)) || ((!holds_23_0_0 && (!holds_23_0_1 || !holds_23_0_4)));
    s.add(b);
    b = ((holds_23_1_0 && holds_23_1_1 && holds_23_1_4)) || ((!holds_23_1_0 && (!holds_23_1_1 || !holds_23_1_4)));
    s.add(b);
    b = ((holds_23_2_0 && holds_23_2_1 && holds_23_2_4)) || ((!holds_23_2_0 && (!holds_23_2_1 || !holds_23_2_4)));
    s.add(b);
    b = ((holds_23_3_0 && holds_23_3_1 && holds_23_3_4)) || ((!holds_23_3_0 && (!holds_23_3_1 || !holds_23_3_4)));
    s.add(b);
    b = ((holds_23_4_0 && holds_23_4_1 && holds_23_4_4)) || ((!holds_23_4_0 && (!holds_23_4_1 || !holds_23_4_4)));
    s.add(b);
    b = ((holds_23_5_0 && holds_23_5_1 && holds_23_5_4)) || ((!holds_23_5_0 && (!holds_23_5_1 || !holds_23_5_4)));
    s.add(b);
    b = ((holds_23_6_0 && holds_23_6_1 && holds_23_6_4)) || ((!holds_23_6_0 && (!holds_23_6_1 || !holds_23_6_4)));
    s.add(b);
    b = ((holds_23_7_0 && holds_23_7_1 && holds_23_7_4)) || ((!holds_23_7_0 && (!holds_23_7_1 || !holds_23_7_4)));
    s.add(b);
    b = ((holds_23_8_0 && holds_23_8_1 && holds_23_8_4)) || ((!holds_23_8_0 && (!holds_23_8_1 || !holds_23_8_4)));
    s.add(b);
    b = ((holds_23_9_0 && holds_23_9_1 && holds_23_9_4)) || ((!holds_23_9_0 && (!holds_23_9_1 || !holds_23_9_4)));
    s.add(b);
    b = ((holds_23_10_0 && holds_23_10_1 && holds_23_10_4)) || ((!holds_23_10_0 && (!holds_23_10_1 || !holds_23_10_4)));
    s.add(b);
    b = ((holds_23_11_0 && holds_23_11_1 && holds_23_11_4)) || ((!holds_23_11_0 && (!holds_23_11_1 || !holds_23_11_4)));
    s.add(b);
    b = ((holds_23_12_0 && holds_23_12_1 && holds_23_12_4)) || ((!holds_23_12_0 && (!holds_23_12_1 || !holds_23_12_4)));
    s.add(b);
    b = ((holds_23_13_0 && holds_23_13_1 && holds_23_13_4)) || ((!holds_23_13_0 && (!holds_23_13_1 || !holds_23_13_4)));
    s.add(b);
    b = ((holds_23_14_0 && holds_23_14_1 && holds_23_14_4)) || ((!holds_23_14_0 && (!holds_23_14_1 || !holds_23_14_4)));
    s.add(b);
    b = ((holds_23_15_0 && holds_23_15_1 && holds_23_15_4)) || ((!holds_23_15_0 && (!holds_23_15_1 || !holds_23_15_4)));
    s.add(b);
    b = ((holds_23_16_0 && holds_23_16_1 && holds_23_16_4)) || ((!holds_23_16_0 && (!holds_23_16_1 || !holds_23_16_4)));
    s.add(b);
    b = ((holds_23_17_0 && holds_23_17_1 && holds_23_17_4)) || ((!holds_23_17_0 && (!holds_23_17_1 || !holds_23_17_4)));
    s.add(b);
    b = ((holds_23_18_0 && holds_23_18_1 && holds_23_18_4)) || ((!holds_23_18_0 && (!holds_23_18_1 || !holds_23_18_4)));
    s.add(b);
    b = ((holds_23_19_0 && holds_23_19_1 && holds_23_19_4)) || ((!holds_23_19_0 && (!holds_23_19_1 || !holds_23_19_4)));
    s.add(b);
    b = ((holds_23_20_0 && holds_23_20_1 && holds_23_20_4)) || ((!holds_23_20_0 && (!holds_23_20_1 || !holds_23_20_4)));
    s.add(b);
    b = ((holds_23_21_0 && holds_23_21_1 && holds_23_21_4)) || ((!holds_23_21_0 && (!holds_23_21_1 || !holds_23_21_4)));
    s.add(b);
    b = ((holds_23_22_0 && holds_23_22_1 && holds_23_22_4)) || ((!holds_23_22_0 && (!holds_23_22_1 || !holds_23_22_4)));
    s.add(b);
    b = ((holds_23_23_0 && holds_23_23_1 && holds_23_23_4)) || ((!holds_23_23_0 && (!holds_23_23_1 || !holds_23_23_4)));
    s.add(b);
    std::cout << s.check() << "\n";
}